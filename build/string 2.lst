ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"string.cc"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN6stmlib9DCBlocker7ProcessEPfj,"axG",%progbits,_ZN6stmlib9DCBlocker7ProcessEPfj,c
  19              		.align	1
  20              		.weak	_ZN6stmlib9DCBlocker7ProcessEPfj
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZN6stmlib9DCBlocker7ProcessEPfj:
  26              	.LVL0:
  27              	.LFB1408:
  28              		.file 1 "eurorack/stmlib/dsp/filter.h"
   1:eurorack/stmlib/dsp/filter.h **** // Copyright 2014 Emilie Gillet.
   2:eurorack/stmlib/dsp/filter.h **** //
   3:eurorack/stmlib/dsp/filter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/filter.h **** //
   5:eurorack/stmlib/dsp/filter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/filter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/filter.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/filter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/filter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/filter.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/filter.h **** // 
  12:eurorack/stmlib/dsp/filter.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/filter.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/filter.h **** // 
  15:eurorack/stmlib/dsp/filter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/filter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/filter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/filter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/filter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/filter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/filter.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/filter.h **** // 
  23:eurorack/stmlib/dsp/filter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/filter.h **** //
  25:eurorack/stmlib/dsp/filter.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/filter.h **** //
  27:eurorack/stmlib/dsp/filter.h **** // Zero-delay-feedback filters (one pole and SVF).
  28:eurorack/stmlib/dsp/filter.h **** // Naive SVF.
  29:eurorack/stmlib/dsp/filter.h **** 
  30:eurorack/stmlib/dsp/filter.h **** #ifndef STMLIB_DSP_FILTER_H_
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 2


  31:eurorack/stmlib/dsp/filter.h **** #define STMLIB_DSP_FILTER_H_
  32:eurorack/stmlib/dsp/filter.h **** 
  33:eurorack/stmlib/dsp/filter.h **** #include "stmlib/stmlib.h"
  34:eurorack/stmlib/dsp/filter.h **** 
  35:eurorack/stmlib/dsp/filter.h **** #include <cmath>
  36:eurorack/stmlib/dsp/filter.h **** #include <algorithm>
  37:eurorack/stmlib/dsp/filter.h **** 
  38:eurorack/stmlib/dsp/filter.h **** namespace stmlib {
  39:eurorack/stmlib/dsp/filter.h **** 
  40:eurorack/stmlib/dsp/filter.h **** enum FilterMode {
  41:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_LOW_PASS,
  42:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS,
  43:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS_NORMALIZED,
  44:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_HIGH_PASS
  45:eurorack/stmlib/dsp/filter.h **** };
  46:eurorack/stmlib/dsp/filter.h **** 
  47:eurorack/stmlib/dsp/filter.h **** enum FrequencyApproximation {
  48:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_EXACT,
  49:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_ACCURATE,
  50:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_FAST,
  51:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_DIRTY
  52:eurorack/stmlib/dsp/filter.h **** };
  53:eurorack/stmlib/dsp/filter.h **** 
  54:eurorack/stmlib/dsp/filter.h **** #define M_PI_F float(M_PI)
  55:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_2 M_PI * M_PI
  56:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_3 M_PI_POW_2 * M_PI
  57:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_5 M_PI_POW_3 * M_PI_POW_2
  58:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_7 M_PI_POW_5 * M_PI_POW_2
  59:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_9 M_PI_POW_7 * M_PI_POW_2
  60:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_11 M_PI_POW_9 * M_PI_POW_2
  61:eurorack/stmlib/dsp/filter.h **** 
  62:eurorack/stmlib/dsp/filter.h **** class DCBlocker {
  63:eurorack/stmlib/dsp/filter.h ****  public:
  64:eurorack/stmlib/dsp/filter.h ****   DCBlocker() { }
  65:eurorack/stmlib/dsp/filter.h ****   ~DCBlocker() { }
  66:eurorack/stmlib/dsp/filter.h ****   
  67:eurorack/stmlib/dsp/filter.h ****   void Init(float pole) {
  68:eurorack/stmlib/dsp/filter.h ****     x_ = 0.0f;
  69:eurorack/stmlib/dsp/filter.h ****     y_ = 0.0f;
  70:eurorack/stmlib/dsp/filter.h ****     pole_ = pole;
  71:eurorack/stmlib/dsp/filter.h ****   }
  72:eurorack/stmlib/dsp/filter.h ****   
  73:eurorack/stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
  29              		.loc 1 73 15 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  74:eurorack/stmlib/dsp/filter.h ****     float x = x_;
  34              		.loc 1 74 5 view .LVU1
  35              		.loc 1 74 11 is_stmt 0 view .LVU2
  36 0000 90ED017A 		vldr.32	s14, [r0, #4]
  37              	.LVL1:
  75:eurorack/stmlib/dsp/filter.h ****     float y = y_;
  38              		.loc 1 75 5 is_stmt 1 view .LVU3
  39              		.loc 1 75 11 is_stmt 0 view .LVU4
  40 0004 D0ED027A 		vldr.32	s15, [r0, #8]
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 3


  41              	.LVL2:
  76:eurorack/stmlib/dsp/filter.h ****     const float pole = pole_;
  42              		.loc 1 76 5 is_stmt 1 view .LVU5
  43              		.loc 1 76 17 is_stmt 0 view .LVU6
  44 0008 D0ED005A 		vldr.32	s11, [r0]
  45              	.LVL3:
  46              	.L3:
  77:eurorack/stmlib/dsp/filter.h ****     while (size--) {
  47              		.loc 1 77 5 is_stmt 1 view .LVU7
  48              		.loc 1 77 16 view .LVU8
  49 000c 013A     		subs	r2, r2, #1
  50              	.LVL4:
  51              		.loc 1 77 16 is_stmt 0 view .LVU9
  52 000e 0CD3     		bcc	.L2
  53              	.LBB65:
  78:eurorack/stmlib/dsp/filter.h ****       float old_x = x;
  54              		.loc 1 78 7 is_stmt 1 view .LVU10
  55              	.LVL5:
  79:eurorack/stmlib/dsp/filter.h ****       x = *in_out;
  56              		.loc 1 79 7 view .LVU11
  57              		.loc 1 79 9 is_stmt 0 view .LVU12
  58 0010 D1ED006A 		vldr.32	s13, [r1]
  59              	.LVL6:
  80:eurorack/stmlib/dsp/filter.h ****       *in_out++ = y = y * pole + x - old_x;
  60              		.loc 1 80 7 is_stmt 1 view .LVU13
  61              		.loc 1 80 32 is_stmt 0 view .LVU14
  62 0014 B0EE666A 		vmov.f32	s12, s13
  63 0018 A7EEA56A 		vfma.f32	s12, s15, s11
  64              		.loc 1 80 21 view .LVU15
  65 001c 76EE477A 		vsub.f32	s15, s12, s14
  66              	.LVL7:
  79:eurorack/stmlib/dsp/filter.h ****       x = *in_out;
  67              		.loc 1 79 9 view .LVU16
  68 0020 B0EE667A 		vmov.f32	s14, s13
  69              	.LVL8:
  70              		.loc 1 80 17 view .LVU17
  71 0024 E1EC017A 		vstmia.32	r1!, {s15}
  72              	.LVL9:
  73              		.loc 1 80 17 view .LVU18
  74              	.LBE65:
  77:eurorack/stmlib/dsp/filter.h ****       float old_x = x;
  75              		.loc 1 77 5 view .LVU19
  76 0028 F0E7     		b	.L3
  77              	.LVL10:
  78              	.L2:
  81:eurorack/stmlib/dsp/filter.h ****     }
  82:eurorack/stmlib/dsp/filter.h ****     x_ = x;
  79              		.loc 1 82 5 is_stmt 1 view .LVU20
  80              		.loc 1 82 8 is_stmt 0 view .LVU21
  81 002a 80ED017A 		vstr.32	s14, [r0, #4]
  83:eurorack/stmlib/dsp/filter.h ****     y_ = y;
  82              		.loc 1 83 5 is_stmt 1 view .LVU22
  83              		.loc 1 83 8 is_stmt 0 view .LVU23
  84 002e C0ED027A 		vstr.32	s15, [r0, #8]
  84:eurorack/stmlib/dsp/filter.h ****   }
  85              		.loc 1 84 3 view .LVU24
  86 0032 7047     		bx	lr
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 4


  87              		.cfi_endproc
  88              	.LFE1408:
  90              		.section	.text._ZN6stmlib11InterpolateEPKfff,"axG",%progbits,_ZN6stmlib11InterpolateEPKfff,comdat
  91              		.align	1
  92              		.weak	_ZN6stmlib11InterpolateEPKfff
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	_ZN6stmlib11InterpolateEPKfff:
  98              	.LVL11:
  99              	.LFB1496:
 100              		.file 2 "eurorack/stmlib/dsp/dsp.h"
   1:eurorack/stmlib/dsp/dsp.h **** // Copyright 2012 Emilie Gillet.
   2:eurorack/stmlib/dsp/dsp.h **** //
   3:eurorack/stmlib/dsp/dsp.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/dsp.h **** //
   5:eurorack/stmlib/dsp/dsp.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/dsp.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/dsp.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/dsp.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/dsp.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/dsp.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/dsp.h **** // 
  12:eurorack/stmlib/dsp/dsp.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/dsp.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/dsp.h **** // 
  15:eurorack/stmlib/dsp/dsp.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/dsp.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/dsp.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/dsp.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/dsp.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/dsp.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/dsp.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/dsp.h **** // 
  23:eurorack/stmlib/dsp/dsp.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/dsp.h **** //
  25:eurorack/stmlib/dsp/dsp.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/dsp.h **** //
  27:eurorack/stmlib/dsp/dsp.h **** // DSP utility routines.
  28:eurorack/stmlib/dsp/dsp.h **** 
  29:eurorack/stmlib/dsp/dsp.h **** #ifndef STMLIB_UTILS_DSP_DSP_H_
  30:eurorack/stmlib/dsp/dsp.h **** #define STMLIB_UTILS_DSP_DSP_H_
  31:eurorack/stmlib/dsp/dsp.h **** 
  32:eurorack/stmlib/dsp/dsp.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/dsp/dsp.h **** 
  34:eurorack/stmlib/dsp/dsp.h **** #include <cmath>
  35:eurorack/stmlib/dsp/dsp.h **** #include <math.h>
  36:eurorack/stmlib/dsp/dsp.h **** 
  37:eurorack/stmlib/dsp/dsp.h **** namespace stmlib {
  38:eurorack/stmlib/dsp/dsp.h **** 
  39:eurorack/stmlib/dsp/dsp.h **** #define MAKE_INTEGRAL_FRACTIONAL(x) \
  40:eurorack/stmlib/dsp/dsp.h ****   int32_t x ## _integral = static_cast<int32_t>(x); \
  41:eurorack/stmlib/dsp/dsp.h ****   float x ## _fractional = x - static_cast<float>(x ## _integral);
  42:eurorack/stmlib/dsp/dsp.h **** 
  43:eurorack/stmlib/dsp/dsp.h **** inline float Interpolate(const float* table, float index, float size) {
 101              		.loc 2 43 71 is_stmt 1 view -0
 102              		.cfi_startproc
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 5


 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
  44:eurorack/stmlib/dsp/dsp.h ****   index *= size;
 106              		.loc 2 44 3 view .LVU26
 107              		.loc 2 44 9 is_stmt 0 view .LVU27
 108 0000 60EE200A 		vmul.f32	s1, s0, s1
 109              	.LVL12:
  45:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
 110              		.loc 2 45 3 is_stmt 1 view .LVU28
 111 0004 FDEEE07A 		vcvt.s32.f32	s15, s1
 112              	.LVL13:
 113              		.loc 2 45 3 view .LVU29
  46:eurorack/stmlib/dsp/dsp.h ****   float a = table[index_integral];
 114              		.loc 2 46 3 view .LVU30
 115              		.loc 2 46 9 is_stmt 0 view .LVU31
 116 0008 17EE903A 		vmov	r3, s15	@ int
  45:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
 117              		.loc 2 45 3 view .LVU32
 118 000c F8EEE77A 		vcvt.f32.s32	s15, s15
 119              	.LVL14:
 120              		.loc 2 46 9 view .LVU33
 121 0010 00EB8300 		add	r0, r0, r3, lsl #2
 122              	.LVL15:
  45:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
 123              		.loc 2 45 3 view .LVU34
 124 0014 70EEE70A 		vsub.f32	s1, s1, s15
 125              	.LVL16:
 126              		.loc 2 46 9 view .LVU35
 127 0018 90ED000A 		vldr.32	s0, [r0]
 128              	.LVL17:
  47:eurorack/stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
 129              		.loc 2 47 3 is_stmt 1 view .LVU36
  48:eurorack/stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
 130              		.loc 2 48 3 view .LVU37
 131              		.loc 2 48 17 is_stmt 0 view .LVU38
 132 001c 90ED017A 		vldr.32	s14, [r0, #4]
 133 0020 37EE407A 		vsub.f32	s14, s14, s0
  49:eurorack/stmlib/dsp/dsp.h **** }
 134              		.loc 2 49 1 view .LVU39
 135 0024 A7EE200A 		vfma.f32	s0, s14, s1
 136              	.LVL18:
 137              		.loc 2 49 1 view .LVU40
 138 0028 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE1496:
 142              		.section	.text._ZN6stmlib16SemitonesToRatioEf,"axG",%progbits,_ZN6stmlib16SemitonesToRatioEf,comda
 143              		.align	1
 144              		.weak	_ZN6stmlib16SemitonesToRatioEf
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 149              	_ZN6stmlib16SemitonesToRatioEf:
 150              	.LVL19:
 151              	.LFB1537:
 152              		.file 3 "eurorack/stmlib/dsp/units.h"
   1:eurorack/stmlib/dsp/units.h **** // Copyright 2014 Emilie Gillet.
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 6


   2:eurorack/stmlib/dsp/units.h **** //
   3:eurorack/stmlib/dsp/units.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/units.h **** //
   5:eurorack/stmlib/dsp/units.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/units.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/units.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/units.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/units.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/units.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/units.h **** // 
  12:eurorack/stmlib/dsp/units.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/units.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/units.h **** // 
  15:eurorack/stmlib/dsp/units.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/units.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/units.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/units.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/units.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/units.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/units.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/units.h **** // 
  23:eurorack/stmlib/dsp/units.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/units.h **** //
  25:eurorack/stmlib/dsp/units.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/units.h **** //
  27:eurorack/stmlib/dsp/units.h **** // Conversion from semitones to frequency ratio.
  28:eurorack/stmlib/dsp/units.h **** 
  29:eurorack/stmlib/dsp/units.h **** #ifndef STMLIB_DSP_UNITS_H_
  30:eurorack/stmlib/dsp/units.h **** #define STMLIB_DSP_UNITS_H_
  31:eurorack/stmlib/dsp/units.h **** 
  32:eurorack/stmlib/dsp/units.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/dsp/units.h **** #include "stmlib/dsp/dsp.h"
  34:eurorack/stmlib/dsp/units.h **** 
  35:eurorack/stmlib/dsp/units.h **** namespace stmlib {
  36:eurorack/stmlib/dsp/units.h **** 
  37:eurorack/stmlib/dsp/units.h **** extern const float lut_pitch_ratio_high[257];
  38:eurorack/stmlib/dsp/units.h **** extern const float lut_pitch_ratio_low[257];
  39:eurorack/stmlib/dsp/units.h **** 
  40:eurorack/stmlib/dsp/units.h **** inline float SemitonesToRatio(float semitones) {
 153              		.loc 3 40 48 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157              		@ link register save eliminated.
  41:eurorack/stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 158              		.loc 3 41 3 view .LVU42
 159              		.loc 3 41 9 is_stmt 0 view .LVU43
 160 0000 DFED0E7A 		vldr.32	s15, .L7
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
  43:eurorack/stmlib/dsp/units.h **** 
  44:eurorack/stmlib/dsp/units.h ****   return lut_pitch_ratio_high[pitch_integral] * \
  45:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 161              		.loc 3 45 74 view .LVU44
 162 0004 0E4A     		ldr	r2, .L7+4
  41:eurorack/stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 163              		.loc 3 41 9 view .LVU45
 164 0006 30EE270A 		vadd.f32	s0, s0, s15
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 7


 165              	.LVL20:
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 166              		.loc 3 42 3 is_stmt 1 view .LVU46
 167 000a FDEEC07A 		vcvt.s32.f32	s15, s0
 168              	.LVL21:
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 169              		.loc 3 42 3 view .LVU47
  44:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 170              		.loc 3 44 3 view .LVU48
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 171              		.loc 3 42 3 is_stmt 0 view .LVU49
 172 000e B8EEE77A 		vcvt.f32.s32	s14, s15
  44:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 173              		.loc 3 44 45 view .LVU50
 174 0012 17EE901A 		vmov	r1, s15	@ int
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 175              		.loc 3 42 3 view .LVU51
 176 0016 30EE470A 		vsub.f32	s0, s0, s14
 177              	.LVL22:
 178              		.loc 3 45 27 view .LVU52
 179 001a BEEECC0A 		vcvt.s32.f32	s0, s0, #8
 180              	.LVL23:
 181              		.loc 3 45 74 view .LVU53
 182 001e 10EE103A 		vmov	r3, s0	@ int
 183 0022 02EB8302 		add	r2, r2, r3, lsl #2
  44:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 184              		.loc 3 44 45 view .LVU54
 185 0026 074B     		ldr	r3, .L7+8
 186 0028 03EB8103 		add	r3, r3, r1, lsl #2
 187              		.loc 3 45 74 view .LVU55
 188 002c 92ED000A 		vldr.32	s0, [r2]
 189 0030 D3ED007A 		vldr.32	s15, [r3]
 190              	.LVL24:
  46:eurorack/stmlib/dsp/units.h **** }
 191              		.loc 3 46 1 view .LVU56
 192 0034 20EE270A 		vmul.f32	s0, s0, s15
 193 0038 7047     		bx	lr
 194              	.L8:
 195 003a 00BF     		.align	2
 196              	.L7:
 197 003c 00000043 		.word	1124073472
 198 0040 00000000 		.word	_ZN6stmlib19lut_pitch_ratio_lowE
 199 0044 00000000 		.word	_ZN6stmlib20lut_pitch_ratio_highE
 200              		.cfi_endproc
 201              	.LFE1537:
 203              		.section	.text._ZN6plaits9DelayLineIfLj1024EE5ResetEv,"axG",%progbits,_ZN6plaits9DelayLineIfLj1024
 204              		.align	1
 205              		.weak	_ZN6plaits9DelayLineIfLj1024EE5ResetEv
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 210              	_ZN6plaits9DelayLineIfLj1024EE5ResetEv:
 211              	.LVL25:
 212              	.LFB1588:
 213              		.file 4 "eurorack/plaits/dsp/physical_modelling/delay_line.h"
   1:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // Copyright 2014 Emilie Gillet.
   2:eurorack/plaits/dsp/physical_modelling/delay_line.h **** //
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 8


   3:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/plaits/dsp/physical_modelling/delay_line.h **** //
   5:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // 
  12:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // all copies or substantial portions of the Software.
  14:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // 
  15:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // THE SOFTWARE.
  22:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // 
  23:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/plaits/dsp/physical_modelling/delay_line.h **** //
  25:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // -----------------------------------------------------------------------------
  26:eurorack/plaits/dsp/physical_modelling/delay_line.h **** //
  27:eurorack/plaits/dsp/physical_modelling/delay_line.h **** // Delay line (same implementation as from stmlib, but does not own its buffer).
  28:eurorack/plaits/dsp/physical_modelling/delay_line.h **** 
  29:eurorack/plaits/dsp/physical_modelling/delay_line.h **** #ifndef PLAITS_DSP_PHYSICAL_MODELLING_DELAY_LINE_H_
  30:eurorack/plaits/dsp/physical_modelling/delay_line.h **** #define PLAITS_DSP_PHYSICAL_MODELLING_DELAY_LINE_H_
  31:eurorack/plaits/dsp/physical_modelling/delay_line.h **** 
  32:eurorack/plaits/dsp/physical_modelling/delay_line.h **** #include <algorithm>
  33:eurorack/plaits/dsp/physical_modelling/delay_line.h **** 
  34:eurorack/plaits/dsp/physical_modelling/delay_line.h **** #include "stmlib/dsp/dsp.h"
  35:eurorack/plaits/dsp/physical_modelling/delay_line.h **** 
  36:eurorack/plaits/dsp/physical_modelling/delay_line.h **** namespace plaits {
  37:eurorack/plaits/dsp/physical_modelling/delay_line.h **** 
  38:eurorack/plaits/dsp/physical_modelling/delay_line.h **** template<typename T, size_t max_delay>
  39:eurorack/plaits/dsp/physical_modelling/delay_line.h **** class DelayLine {
  40:eurorack/plaits/dsp/physical_modelling/delay_line.h ****  public:
  41:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   DelayLine() { }
  42:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   ~DelayLine() { }
  43:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   
  44:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   void Init(float* buffer) {
  45:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     line_ = buffer;
  46:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     Reset();
  47:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
  48:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   
  49:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   void Reset() {
 214              		.loc 4 49 8 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              	.LBB71:
 219              	.LBI71:
 220              		.file 5 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 9


   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 10


  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 11


 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 12


 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 13


 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 14


 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __it; }
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _From
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _Iterator
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return __res; }
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 15


 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 380:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 381:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 382:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
 383:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 384:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 385:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 386:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 387:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 390:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 391:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 392:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 393:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 394:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _OI
 395:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 396:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 397:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 398:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 399:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    {
 400:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 401:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__first;
 402:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ++__result;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 16


 403:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    }
 404:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 405:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 406:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 407:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 408:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 409:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 410:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 411:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 412:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 413:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 414:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 416:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 417:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 418:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 419:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 420:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 421:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 422:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 423:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 424:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 425:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 426:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 427:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 428:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 429:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 430:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 431:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 432:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 433:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 434:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct char_traits;
 435:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 436:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 437:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 438:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 439:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 440:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 441:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 442:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 443:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 444:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 445:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 446:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 447:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 448:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 449:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 450:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 451:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 452:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 453:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 454:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 455:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 456:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 457:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 458:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 459:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 17


 460:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 461:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 462:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 463:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 464:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 465:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 466:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 467:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 468:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move<_IsMove, false, _Category>::
 469:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_m(__first, __last, __result);
 470:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 471:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __memcpyable<_OI, _II>::__value,
 472:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 473:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 474:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 475:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
 476:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 477:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Ref, typename _Ptr>
 478:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct _Deque_iterator;
 479:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 480:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
 481:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 482:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 483:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 484:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 485:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 486:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 487:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _OI);
 488:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 489:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 490:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 491:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 492:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 493:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 494:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 495:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 496:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 497:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 498:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 499:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 500:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II, _II, _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 501:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 502:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 503:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 504:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 505:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a1(_II __first, _II __last, _OI __result)
 506:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_a2<_IsMove>(__first, __last, __result); }
 507:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 508:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 509:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 510:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 511:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 512:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 513:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 514:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_a1<_IsMove>(std::__niter_base(__first),
 515:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 516:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 18


 517:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 518:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 519:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 520:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 521:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 522:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 523:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 524:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  _OI);
 525:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 526:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 527:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 528:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 529:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(_II, _II,
 530:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 531:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 532:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 533:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 534:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 535:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 536:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_a(const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 537:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 538:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 539:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 540:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 541:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 542:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 543:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 544:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 545:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 546:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 547:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 548:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 549:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 550:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 551:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 552:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 553:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 554:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 555:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 556:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 557:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 558:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 559:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 560:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 561:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 562:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 563:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 564:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 565:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 566:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 567:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 568:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<__is_move_iterator<_II>::__value>
 569:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 570:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 571:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 572:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 573:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 19


 574:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 575:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 576:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 577:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 578:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 579:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result + (last - first)
 580:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 581:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 582:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 583:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 584:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 585:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 586:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 587:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 588:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  within [first,last).
 589:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 590:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 591:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 592:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
 593:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 594:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 595:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 596:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 597:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 598:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 599:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 600:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 601:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_a<true>(std::__miter_base(__first),
 602:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				      std::__miter_base(__last), __result);
 603:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 604:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 605:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 606:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 607:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 608:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 609:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 610:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 611:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 612:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 613:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 614:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 615:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 616:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 617:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 618:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 619:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 620:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 621:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 622:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 623:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 624:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 625:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Category>
 626:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 627:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 628:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 629:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 630:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 20


 631:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 632:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 633:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 634:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 635:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 636:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 637:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 638:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 639:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 640:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 641:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 642:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 643:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 644:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 645:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 646:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 647:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 648:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 649:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 650:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 651:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 652:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 653:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 654:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 655:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 656:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 657:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 658:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 659:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 660:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 661:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 662:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _BI2
 663:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 664:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 665:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type
 666:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __n = __last - __first;
 667:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __n > 0; --__n)
 668:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 669:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result;
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 672:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 673:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 674:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 675:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 676:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 677:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 678:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_GLIBCXX20_CONSTEXPR
 679:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static _Tp*
 680:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 681:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 682:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 683:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 684:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 685:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 686:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 687:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 21


 688:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 689:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 690:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  if (_Num)
 691:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 692:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 693:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 694:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 695:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 696:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 697:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 698:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 699:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 700:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 701:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 702:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
 703:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 704:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return std::__copy_move_backward<_IsMove, false, _Category>::
 705:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  __copy_move_b(__first, __last, __result);
 706:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 707:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove,
 708:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       __memcpyable<_BI2, _BI1>::__value,
 709:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 710:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __last,
 711:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 								 __result);
 712:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 713:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 714:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 715:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 716:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 717:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
 718:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { return std::__copy_move_backward_a2<_IsMove>(__first, __last, __result); }
 719:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 720:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 721:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Tp, typename _Ref, typename _Ptr, typename _OI>
 722:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 723:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 724:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Ref, _Ptr>,
 725:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _OI);
 726:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 727:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 728:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _ITp, typename _IRef, typename _IPtr, typename _OTp>
 729:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>
 730:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(
 731:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 732:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_ITp, _IRef, _IPtr>,
 733:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			_GLIBCXX_STD_C::_Deque_iterator<_OTp, _OTp&, _OTp*>);
 734:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 735:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _Tp>
 736:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<
 737:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __is_random_access_iter<_II>::__value,
 738:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*> >::__type
 739:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a1(_II, _II,
 740:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 			    _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>);
 741:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 742:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 743:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 744:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _OI
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 22


 745:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II __first, _II __last, _OI __result)
 746:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 747:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 748:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a1<_IsMove>
 749:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 750:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 751:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 752:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 753:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 754:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _Ite, typename _Seq, typename _Cat, typename _OI>
 755:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _OI
 756:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 757:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 758:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 759:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_OI);
 760:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 761:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 762:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _II, typename _Ite, typename _Seq, typename _Cat>
 763:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>
 764:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_II, _II,
 765:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&);
 766:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 767:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _IsMove,
 768:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _IIte, typename _ISeq, typename _ICat,
 769:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	   typename _OIte, typename _OSeq, typename _OCat>
 770:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>
 771:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(
 772:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 773:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_IIte, _ISeq, _ICat>&,
 774:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		const ::__gnu_debug::_Safe_iterator<_OIte, _OSeq, _OCat>&);
 775:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 776:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 777:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 778:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 779:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 780:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 781:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 782:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 783:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 784:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 785:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 786:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 787:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 788:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 789:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 790:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 791:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 792:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 793:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 794:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 795:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 796:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 797:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 798:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 799:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 800:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 801:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 23


 802:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 803:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 804:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 805:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 806:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 807:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<__is_move_iterator<_BI1>::__value>
 808:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 809:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 810:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 811:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 812:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 813:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 814:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 815:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 816:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 817:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 818:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   result - (last - first)
 819:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 820:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 821:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 822:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 823:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 824:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 825:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 826:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 827:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 828:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 829:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 830:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 831:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 832:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline _BI2
 833:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 834:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 835:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 836:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 837:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 838:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 839:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 840:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 841:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 842:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 843:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a<true>(std::__miter_base(__first),
 844:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       std::__miter_base(__last),
 845:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 					       __result);
 846:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 847:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 848:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 849:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 850:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 851:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 852:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 853:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 854:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 855:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 856:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 857:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 858:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 24


 859:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 860:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 861:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __value;
 862:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 863:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 864:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 865:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 866:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 867:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 868:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_ForwardIterator __first, _ForwardIterator __last,
 869:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 870:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 871:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 872:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	*__first = __tmp;
 874:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 875:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 876:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 877:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 878:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 879:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline typename
 880:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
 881:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(_Tp* __first, _Tp* __last, const _Tp& __c)
 882:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 883:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 884:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cpp_lib_is_constant_evaluated
 885:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
 886:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 887:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__first)
 888:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    *__first = __tmp;
 889:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return;
 890:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 891:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 892:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (const size_t __len = __last - __first)
 893:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	__builtin_memset(__first, static_cast<unsigned char>(__tmp), __len);
 894:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 895:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 896:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Cont, typename _Tp>
 897:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 898:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 899:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(::__gnu_cxx::__normal_iterator<_Ite, _Cont> __first,
 900:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      ::__gnu_cxx::__normal_iterator<_Ite, _Cont> __last,
 901:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 902:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first.base(), __last.base(), __value); }
 903:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 904:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _VTp>
 905:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 906:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a1(const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 907:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _GLIBCXX_STD_C::_Deque_iterator<_Tp, _Tp&, _Tp*>&,
 908:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _VTp&);
 909:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 910:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _FIte, typename _Tp>
 911:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 912:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 913:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(_FIte __first, _FIte __last, const _Tp& __value)
 914:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 915:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 25


 916:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Ite, typename _Seq, typename _Cat, typename _Tp>
 917:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     void
 918:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __fill_a(const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 919:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const ::__gnu_debug::_Safe_iterator<_Ite, _Seq, _Cat>&,
 920:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	     const _Tp&);
 921:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 922:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 923:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Fills the range [first,last) with copies of value.
 924:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 925:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first  A forward iterator.
 926:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last   A forward iterator.
 927:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __value  A reference-to-const of arbitrary type.
 928:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 929:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 930:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function fills a range with copies of the same value.  For char
 931:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  types filling contiguous areas of memory, this becomes an inline call
 932:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  to @c memset or @c wmemset.
 933:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 934:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 935:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 936:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 937:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp& __value)
 221              		.loc 5 937 5 view .LVU58
 222              	.LBB72:
 223              	.LBI72:
 913:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 224              		.loc 5 913 5 view .LVU59
 225              	.LBB73:
 226              	.LBI73:
 868:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 227              		.loc 5 868 5 view .LVU60
 868:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 228              		.loc 5 868 5 is_stmt 0 view .LVU61
 229              	.LBE73:
 230              	.LBE72:
 231              	.LBE71:
 232              		.loc 4 49 8 view .LVU62
 233 0000 10B5     		push	{r4, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 237              	.LBB80:
 238              	.LBB78:
 239              	.LBB76:
 240              	.LBB74:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 241              		.loc 5 873 11 view .LVU63
 242 0002 4FF48052 		mov	r2, #4096
 243              	.LBE74:
 244              	.LBE76:
 245              	.LBE78:
 246              	.LBE80:
 247              		.loc 4 49 8 view .LVU64
 248 0006 0446     		mov	r4, r0
 249              	.LBB81:
 250              	.LBB79:
 251              	.LBB77:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 26


 252              	.LBB75:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 253              		.loc 5 873 11 view .LVU65
 254 0008 0021     		movs	r1, #0
 255 000a 4068     		ldr	r0, [r0, #4]
 256              	.LVL26:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 257              		.loc 5 873 11 view .LVU66
 258 000c FFF7FEFF 		bl	memset
 259              	.LVL27:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 260              		.loc 5 873 11 view .LVU67
 261              	.LBE75:
 262              	.LBE77:
 263              	.LBE79:
 264              	.LBE81:
  50:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     std::fill(&line_[0], &line_[max_delay], T(0));
  51:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = 0;
 265              		.loc 4 51 16 view .LVU68
 266 0010 0023     		movs	r3, #0
 267 0012 2360     		str	r3, [r4]
  52:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 268              		.loc 4 52 3 view .LVU69
 269 0014 10BD     		pop	{r4, pc}
 270              		.loc 4 52 3 view .LVU70
 271              		.cfi_endproc
 272              	.LFE1588:
 274              		.section	.text._ZN6plaits9DelayLineIfLj256EE5ResetEv,"axG",%progbits,_ZN6plaits9DelayLineIfLj256EE
 275              		.align	1
 276              		.weak	_ZN6plaits9DelayLineIfLj256EE5ResetEv
 277              		.syntax unified
 278              		.thumb
 279              		.thumb_func
 281              	_ZN6plaits9DelayLineIfLj256EE5ResetEv:
 282              	.LVL28:
 283              	.LFB1589:
  49:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     std::fill(&line_[0], &line_[max_delay], T(0));
 284              		.loc 4 49 8 is_stmt 1 view -0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              	.LBB87:
 289              	.LBI87:
 290              		.loc 5 937 5 view .LVU72
 291              	.LBB88:
 292              	.LBI88:
 913:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     { std::__fill_a1(__first, __last, __value); }
 293              		.loc 5 913 5 view .LVU73
 294              	.LBB89:
 295              	.LBI89:
 868:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 296              		.loc 5 868 5 view .LVU74
 868:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      const _Tp& __value)
 297              		.loc 5 868 5 is_stmt 0 view .LVU75
 298              	.LBE89:
 299              	.LBE88:
 300              	.LBE87:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 27


  49:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     std::fill(&line_[0], &line_[max_delay], T(0));
 301              		.loc 4 49 8 view .LVU76
 302 0000 10B5     		push	{r4, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 4, -8
 305              		.cfi_offset 14, -4
 306              	.LBB96:
 307              	.LBB94:
 308              	.LBB92:
 309              	.LBB90:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 310              		.loc 5 873 11 view .LVU77
 311 0002 4FF48062 		mov	r2, #1024
 312              	.LBE90:
 313              	.LBE92:
 314              	.LBE94:
 315              	.LBE96:
  49:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     std::fill(&line_[0], &line_[max_delay], T(0));
 316              		.loc 4 49 8 view .LVU78
 317 0006 0446     		mov	r4, r0
 318              	.LBB97:
 319              	.LBB95:
 320              	.LBB93:
 321              	.LBB91:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 322              		.loc 5 873 11 view .LVU79
 323 0008 0021     		movs	r1, #0
 324 000a 4068     		ldr	r0, [r0, #4]
 325              	.LVL29:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 326              		.loc 5 873 11 view .LVU80
 327 000c FFF7FEFF 		bl	memset
 328              	.LVL30:
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 329              		.loc 5 873 11 view .LVU81
 330              	.LBE91:
 331              	.LBE93:
 332              	.LBE95:
 333              	.LBE97:
  51:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 334              		.loc 4 51 16 view .LVU82
 335 0010 0023     		movs	r3, #0
 336 0012 2360     		str	r3, [r4]
 337              		.loc 4 52 3 view .LVU83
 338 0014 10BD     		pop	{r4, pc}
 339              		.loc 4 52 3 view .LVU84
 340              		.cfi_endproc
 341              	.LFE1589:
 343              		.section	.text._ZN6plaits6String5ResetEv,"ax",%progbits
 344              		.align	1
 345              		.global	_ZN6plaits6String5ResetEv
 346              		.syntax unified
 347              		.thumb
 348              		.thumb_func
 350              	_ZN6plaits6String5ResetEv:
 351              	.LVL31:
 352              	.LFB1567:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 28


 353              		.file 6 "eurorack/plaits/dsp/physical_modelling/string.cc"
   1:eurorack/plaits/dsp/physical_modelling/string.cc **** // Copyright 2016 Emilie Gillet.
   2:eurorack/plaits/dsp/physical_modelling/string.cc **** //
   3:eurorack/plaits/dsp/physical_modelling/string.cc **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/plaits/dsp/physical_modelling/string.cc **** //
   5:eurorack/plaits/dsp/physical_modelling/string.cc **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/plaits/dsp/physical_modelling/string.cc **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/plaits/dsp/physical_modelling/string.cc **** // in the Software without restriction, including without limitation the rights
   8:eurorack/plaits/dsp/physical_modelling/string.cc **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/plaits/dsp/physical_modelling/string.cc **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/plaits/dsp/physical_modelling/string.cc **** // furnished to do so, subject to the following conditions:
  11:eurorack/plaits/dsp/physical_modelling/string.cc **** // 
  12:eurorack/plaits/dsp/physical_modelling/string.cc **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/plaits/dsp/physical_modelling/string.cc **** // all copies or substantial portions of the Software.
  14:eurorack/plaits/dsp/physical_modelling/string.cc **** // 
  15:eurorack/plaits/dsp/physical_modelling/string.cc **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/plaits/dsp/physical_modelling/string.cc **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/plaits/dsp/physical_modelling/string.cc **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/plaits/dsp/physical_modelling/string.cc **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/plaits/dsp/physical_modelling/string.cc **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/plaits/dsp/physical_modelling/string.cc **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/plaits/dsp/physical_modelling/string.cc **** // THE SOFTWARE.
  22:eurorack/plaits/dsp/physical_modelling/string.cc **** // 
  23:eurorack/plaits/dsp/physical_modelling/string.cc **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/plaits/dsp/physical_modelling/string.cc **** //
  25:eurorack/plaits/dsp/physical_modelling/string.cc **** // -----------------------------------------------------------------------------
  26:eurorack/plaits/dsp/physical_modelling/string.cc **** //
  27:eurorack/plaits/dsp/physical_modelling/string.cc **** // Comb filter / KS string. "Lite" version of the implementation used in Rings.
  28:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  29:eurorack/plaits/dsp/physical_modelling/string.cc **** #include "plaits/dsp/physical_modelling/string.h"
  30:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  31:eurorack/plaits/dsp/physical_modelling/string.cc **** #include <cmath>
  32:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  33:eurorack/plaits/dsp/physical_modelling/string.cc **** #include "stmlib/dsp/dsp.h"
  34:eurorack/plaits/dsp/physical_modelling/string.cc **** #include "stmlib/dsp/parameter_interpolator.h"
  35:eurorack/plaits/dsp/physical_modelling/string.cc **** #include "stmlib/dsp/units.h"
  36:eurorack/plaits/dsp/physical_modelling/string.cc **** #include "stmlib/utils/random.h"
  37:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  38:eurorack/plaits/dsp/physical_modelling/string.cc **** #include "plaits/dsp/dsp.h"
  39:eurorack/plaits/dsp/physical_modelling/string.cc **** #include "plaits/resources.h"
  40:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  41:eurorack/plaits/dsp/physical_modelling/string.cc **** namespace plaits {
  42:eurorack/plaits/dsp/physical_modelling/string.cc ****   
  43:eurorack/plaits/dsp/physical_modelling/string.cc **** using namespace std;
  44:eurorack/plaits/dsp/physical_modelling/string.cc **** using namespace stmlib;
  45:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  46:eurorack/plaits/dsp/physical_modelling/string.cc **** void String::Init(BufferAllocator* allocator) {
  47:eurorack/plaits/dsp/physical_modelling/string.cc ****   string_.Init(allocator->Allocate<float>(kDelayLineSize));
  48:eurorack/plaits/dsp/physical_modelling/string.cc ****   stretch_.Init(allocator->Allocate<float>(kDelayLineSize / 4));
  49:eurorack/plaits/dsp/physical_modelling/string.cc ****   delay_ = 100.0f;
  50:eurorack/plaits/dsp/physical_modelling/string.cc ****   Reset();
  51:eurorack/plaits/dsp/physical_modelling/string.cc **** }
  52:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  53:eurorack/plaits/dsp/physical_modelling/string.cc **** void String::Reset() {
 354              		.loc 6 53 22 is_stmt 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 29


 357              		@ frame_needed = 0, uses_anonymous_args = 0
  54:eurorack/plaits/dsp/physical_modelling/string.cc ****   string_.Reset();
 358              		.loc 6 54 3 view .LVU86
  53:eurorack/plaits/dsp/physical_modelling/string.cc ****   string_.Reset();
 359              		.loc 6 53 22 is_stmt 0 view .LVU87
 360 0000 10B5     		push	{r4, lr}
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
  53:eurorack/plaits/dsp/physical_modelling/string.cc ****   string_.Reset();
 364              		.loc 6 53 22 view .LVU88
 365 0002 0446     		mov	r4, r0
 366              		.loc 6 54 16 view .LVU89
 367 0004 FFF7FEFF 		bl	_ZN6plaits9DelayLineIfLj1024EE5ResetEv
 368              	.LVL32:
  55:eurorack/plaits/dsp/physical_modelling/string.cc ****   stretch_.Reset();
 369              		.loc 6 55 3 is_stmt 1 view .LVU90
 370              		.loc 6 55 17 is_stmt 0 view .LVU91
 371 0008 04F10800 		add	r0, r4, #8
 372 000c FFF7FEFF 		bl	_ZN6plaits9DelayLineIfLj256EE5ResetEv
 373              	.LVL33:
  56:eurorack/plaits/dsp/physical_modelling/string.cc ****   iir_damping_filter_.Init();
 374              		.loc 6 56 3 is_stmt 1 view .LVU92
 375              	.LBB109:
 376              	.LBI109:
  85:eurorack/stmlib/dsp/filter.h ****   
  86:eurorack/stmlib/dsp/filter.h ****  private:
  87:eurorack/stmlib/dsp/filter.h ****   float pole_;
  88:eurorack/stmlib/dsp/filter.h ****   float x_;
  89:eurorack/stmlib/dsp/filter.h ****   float y_;
  90:eurorack/stmlib/dsp/filter.h **** };
  91:eurorack/stmlib/dsp/filter.h **** 
  92:eurorack/stmlib/dsp/filter.h **** class OnePole {
  93:eurorack/stmlib/dsp/filter.h ****  public:
  94:eurorack/stmlib/dsp/filter.h ****   OnePole() { }
  95:eurorack/stmlib/dsp/filter.h ****   ~OnePole() { }
  96:eurorack/stmlib/dsp/filter.h ****   
  97:eurorack/stmlib/dsp/filter.h ****   void Init() {
  98:eurorack/stmlib/dsp/filter.h ****     set_f<FREQUENCY_DIRTY>(0.01f);
  99:eurorack/stmlib/dsp/filter.h ****     Reset();
 100:eurorack/stmlib/dsp/filter.h ****   }
 101:eurorack/stmlib/dsp/filter.h ****   
 102:eurorack/stmlib/dsp/filter.h ****   void Reset() {
 103:eurorack/stmlib/dsp/filter.h ****     state_ = 0.0f;
 104:eurorack/stmlib/dsp/filter.h ****   }
 105:eurorack/stmlib/dsp/filter.h ****   
 106:eurorack/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 107:eurorack/stmlib/dsp/filter.h ****   static inline float tan(float f) {
 108:eurorack/stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 109:eurorack/stmlib/dsp/filter.h ****       // Clip coefficient to about 100.
 110:eurorack/stmlib/dsp/filter.h ****       f = f < 0.497f ? f : 0.497f;
 111:eurorack/stmlib/dsp/filter.h ****       return tanf(M_PI_F * f);
 112:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_DIRTY) {
 113:eurorack/stmlib/dsp/filter.h ****       // Optimized for frequencies below 8kHz.
 114:eurorack/stmlib/dsp/filter.h ****       const float a = 3.736e-01f * M_PI_POW_3;
 115:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + a * f * f);
 116:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_FAST) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 30


 117:eurorack/stmlib/dsp/filter.h ****       // The usual tangent approximation uses 3.1755e-01 and 2.033e-01, but
 118:eurorack/stmlib/dsp/filter.h ****       // the coefficients used here are optimized to minimize error for the
 119:eurorack/stmlib/dsp/filter.h ****       // 16Hz to 16kHz range, with a sample rate of 48kHz.
 120:eurorack/stmlib/dsp/filter.h ****       const float a = 3.260e-01f * M_PI_POW_3;
 121:eurorack/stmlib/dsp/filter.h ****       const float b = 1.823e-01f * M_PI_POW_5;
 122:eurorack/stmlib/dsp/filter.h ****       float f2 = f * f;
 123:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + b * f2));
 124:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 125:eurorack/stmlib/dsp/filter.h ****       // These coefficients don't need to be tweaked for the audio range.
 126:eurorack/stmlib/dsp/filter.h ****       const float a = 3.333314036e-01f * M_PI_POW_3;
 127:eurorack/stmlib/dsp/filter.h ****       const float b = 1.333923995e-01f * M_PI_POW_5;
 128:eurorack/stmlib/dsp/filter.h ****       const float c = 5.33740603e-02f * M_PI_POW_7;
 129:eurorack/stmlib/dsp/filter.h ****       const float d = 2.900525e-03f * M_PI_POW_9;
 130:eurorack/stmlib/dsp/filter.h ****       const float e = 9.5168091e-03f * M_PI_POW_11;
 131:eurorack/stmlib/dsp/filter.h ****       float f2 = f * f;
 132:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + f2 * (b + f2 * (c + f2 * (d + f2 * e)))));
 133:eurorack/stmlib/dsp/filter.h ****     }
 134:eurorack/stmlib/dsp/filter.h ****   }
 135:eurorack/stmlib/dsp/filter.h ****   
 136:eurorack/stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 137:eurorack/stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 138:eurorack/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 139:eurorack/stmlib/dsp/filter.h ****   inline void set_f(float f) {
 140:eurorack/stmlib/dsp/filter.h ****     g_ = tan<approximation>(f);
 141:eurorack/stmlib/dsp/filter.h ****     gi_ = 1.0f / (1.0f + g_);
 142:eurorack/stmlib/dsp/filter.h ****   }
 143:eurorack/stmlib/dsp/filter.h ****   
 144:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 145:eurorack/stmlib/dsp/filter.h ****   inline float Process(float in) {
 146:eurorack/stmlib/dsp/filter.h ****     float lp;
 147:eurorack/stmlib/dsp/filter.h ****     lp = (g_ * in + state_) * gi_;
 148:eurorack/stmlib/dsp/filter.h ****     state_ = g_ * (in - lp) + lp;
 149:eurorack/stmlib/dsp/filter.h **** 
 150:eurorack/stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 151:eurorack/stmlib/dsp/filter.h ****       return lp;
 152:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 153:eurorack/stmlib/dsp/filter.h ****       return in - lp;
 154:eurorack/stmlib/dsp/filter.h ****     } else {
 155:eurorack/stmlib/dsp/filter.h ****       return 0.0f;
 156:eurorack/stmlib/dsp/filter.h ****     }
 157:eurorack/stmlib/dsp/filter.h ****   }
 158:eurorack/stmlib/dsp/filter.h ****   
 159:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 160:eurorack/stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
 161:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 162:eurorack/stmlib/dsp/filter.h ****       *in_out = Process<mode>(*in_out);
 163:eurorack/stmlib/dsp/filter.h ****       ++in_out;
 164:eurorack/stmlib/dsp/filter.h ****     }
 165:eurorack/stmlib/dsp/filter.h ****   }
 166:eurorack/stmlib/dsp/filter.h ****   
 167:eurorack/stmlib/dsp/filter.h ****  private:
 168:eurorack/stmlib/dsp/filter.h ****   float g_;
 169:eurorack/stmlib/dsp/filter.h ****   float gi_;
 170:eurorack/stmlib/dsp/filter.h ****   float state_;
 171:eurorack/stmlib/dsp/filter.h ****   
 172:eurorack/stmlib/dsp/filter.h ****   DISALLOW_COPY_AND_ASSIGN(OnePole);
 173:eurorack/stmlib/dsp/filter.h **** };
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 31


 174:eurorack/stmlib/dsp/filter.h **** 
 175:eurorack/stmlib/dsp/filter.h **** 
 176:eurorack/stmlib/dsp/filter.h **** 
 177:eurorack/stmlib/dsp/filter.h **** class Svf {
 178:eurorack/stmlib/dsp/filter.h ****  public:
 179:eurorack/stmlib/dsp/filter.h ****   Svf() { }
 180:eurorack/stmlib/dsp/filter.h ****   ~Svf() { }
 181:eurorack/stmlib/dsp/filter.h ****   
 182:eurorack/stmlib/dsp/filter.h ****   void Init() {
 377              		.loc 1 182 8 view .LVU93
 378              	.LBE109:
 183:eurorack/stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
 379              		.loc 1 183 5 view .LVU94
 380              	.LBB118:
 381              	.LBB110:
 382              	.LBI110:
 184:eurorack/stmlib/dsp/filter.h ****     Reset();
 185:eurorack/stmlib/dsp/filter.h ****   }
 186:eurorack/stmlib/dsp/filter.h ****   
 187:eurorack/stmlib/dsp/filter.h ****   void Reset() {
 188:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_2_ = 0.0f;
 189:eurorack/stmlib/dsp/filter.h ****   }
 190:eurorack/stmlib/dsp/filter.h ****   
 191:eurorack/stmlib/dsp/filter.h ****   // Copy settings from another filter.
 192:eurorack/stmlib/dsp/filter.h ****   inline void set(const Svf& f) {
 193:eurorack/stmlib/dsp/filter.h ****     g_ = f.g();
 194:eurorack/stmlib/dsp/filter.h ****     r_ = f.r();
 195:eurorack/stmlib/dsp/filter.h ****     h_ = f.h();
 196:eurorack/stmlib/dsp/filter.h ****   }
 197:eurorack/stmlib/dsp/filter.h **** 
 198:eurorack/stmlib/dsp/filter.h ****   // Set all parameters from LUT.
 199:eurorack/stmlib/dsp/filter.h ****   inline void set_g_r_h(float g, float r, float h) {
 200:eurorack/stmlib/dsp/filter.h ****     g_ = g;
 201:eurorack/stmlib/dsp/filter.h ****     r_ = r;
 202:eurorack/stmlib/dsp/filter.h ****     h_ = h;
 203:eurorack/stmlib/dsp/filter.h ****   }
 204:eurorack/stmlib/dsp/filter.h ****   
 205:eurorack/stmlib/dsp/filter.h ****   // Set frequency and resonance coefficients from LUT, adjust remaining
 206:eurorack/stmlib/dsp/filter.h ****   // parameter.
 207:eurorack/stmlib/dsp/filter.h ****   inline void set_g_r(float g, float r) {
 208:eurorack/stmlib/dsp/filter.h ****     g_ = g;
 209:eurorack/stmlib/dsp/filter.h ****     r_ = r;
 210:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 211:eurorack/stmlib/dsp/filter.h ****   }
 212:eurorack/stmlib/dsp/filter.h **** 
 213:eurorack/stmlib/dsp/filter.h ****   // Set frequency from LUT, resonance in true units, adjust the rest.
 214:eurorack/stmlib/dsp/filter.h ****   inline void set_g_q(float g, float resonance) {
 215:eurorack/stmlib/dsp/filter.h ****     g_ = g;
 216:eurorack/stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 217:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 218:eurorack/stmlib/dsp/filter.h ****   }
 219:eurorack/stmlib/dsp/filter.h **** 
 220:eurorack/stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 221:eurorack/stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 222:eurorack/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 223:eurorack/stmlib/dsp/filter.h ****   inline void set_f_q(float f, float resonance) {
 383              		.loc 1 223 15 view .LVU95
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 32


 384              	.LBB111:
 224:eurorack/stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 385              		.loc 1 224 8 is_stmt 0 view .LVU96
 386 0010 094B     		ldr	r3, .L12
 387              	.LBE111:
 388              	.LBE110:
 389              	.LBE118:
 390              	.LBB119:
 391              	.LBB120:
  70:eurorack/stmlib/dsp/filter.h ****   }
 392              		.loc 1 70 11 view .LVU97
 393 0012 0A4A     		ldr	r2, .L12+4
 394              	.LBE120:
 395              	.LBE119:
 396              	.LBB123:
 397              	.LBB114:
 398              	.LBB112:
 399              		.loc 1 224 8 view .LVU98
 400 0014 2361     		str	r3, [r4, #16]	@ float
 225:eurorack/stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 401              		.loc 1 225 8 view .LVU99
 402 0016 0A4B     		ldr	r3, .L12+8
 403              	.LBE112:
 404              	.LBE114:
 405              	.LBE123:
 406              	.LBB124:
 407              	.LBB121:
  70:eurorack/stmlib/dsp/filter.h ****   }
 408              		.loc 1 70 11 view .LVU100
 409 0018 6262     		str	r2, [r4, #36]	@ float
 410              	.LBE121:
 411              	.LBE124:
 412              	.LBB125:
 413              	.LBB115:
 414              	.LBB113:
 415              		.loc 1 225 8 view .LVU101
 416 001a 6361     		str	r3, [r4, #20]	@ float
 226:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 417              		.loc 1 226 8 view .LVU102
 418 001c 094B     		ldr	r3, .L12+12
 419 001e A361     		str	r3, [r4, #24]	@ float
 420              	.LVL34:
 421              		.loc 1 226 8 view .LVU103
 422              	.LBE113:
 423              	.LBE115:
 424              	.LBE125:
 184:eurorack/stmlib/dsp/filter.h ****   }
 425              		.loc 1 184 5 is_stmt 1 view .LVU104
 426              	.LBB126:
 427              	.LBB116:
 428              	.LBI116:
 187:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_2_ = 0.0f;
 429              		.loc 1 187 8 view .LVU105
 430              	.LBB117:
 188:eurorack/stmlib/dsp/filter.h ****   }
 431              		.loc 1 188 5 view .LVU106
 188:eurorack/stmlib/dsp/filter.h ****   }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 33


 432              		.loc 1 188 25 is_stmt 0 view .LVU107
 433 0020 0023     		movs	r3, #0
 434 0022 2362     		str	r3, [r4, #32]	@ float
 188:eurorack/stmlib/dsp/filter.h ****   }
 435              		.loc 1 188 14 view .LVU108
 436 0024 E361     		str	r3, [r4, #28]	@ float
 437              	.LVL35:
 188:eurorack/stmlib/dsp/filter.h ****   }
 438              		.loc 1 188 14 view .LVU109
 439              	.LBE117:
 440              	.LBE116:
 441              	.LBE126:
  57:eurorack/plaits/dsp/physical_modelling/string.cc ****   dc_blocker_.Init(1.0f - 20.0f / kSampleRate);
 442              		.loc 6 57 3 is_stmt 1 view .LVU110
 443              	.LBB127:
 444              	.LBI119:
  67:eurorack/stmlib/dsp/filter.h ****     x_ = 0.0f;
 445              		.loc 1 67 8 view .LVU111
 446              	.LBB122:
  68:eurorack/stmlib/dsp/filter.h ****     y_ = 0.0f;
 447              		.loc 1 68 5 view .LVU112
  68:eurorack/stmlib/dsp/filter.h ****     y_ = 0.0f;
 448              		.loc 1 68 8 is_stmt 0 view .LVU113
 449 0026 A362     		str	r3, [r4, #40]	@ float
  69:eurorack/stmlib/dsp/filter.h ****     pole_ = pole;
 450              		.loc 1 69 5 is_stmt 1 view .LVU114
  69:eurorack/stmlib/dsp/filter.h ****     pole_ = pole;
 451              		.loc 1 69 8 is_stmt 0 view .LVU115
 452 0028 E362     		str	r3, [r4, #44]	@ float
  70:eurorack/stmlib/dsp/filter.h ****   }
 453              		.loc 1 70 5 is_stmt 1 view .LVU116
 454              	.LVL36:
  70:eurorack/stmlib/dsp/filter.h ****   }
 455              		.loc 1 70 5 is_stmt 0 view .LVU117
 456              	.LBE122:
 457              	.LBE127:
  58:eurorack/plaits/dsp/physical_modelling/string.cc ****   dispersion_noise_ = 0.0f;
 458              		.loc 6 58 3 is_stmt 1 view .LVU118
 459              		.loc 6 58 21 is_stmt 0 view .LVU119
 460 002a 6363     		str	r3, [r4, #52]	@ float
  59:eurorack/plaits/dsp/physical_modelling/string.cc ****   curved_bridge_ = 0.0f;
 461              		.loc 6 59 3 is_stmt 1 view .LVU120
 462              		.loc 6 59 18 is_stmt 0 view .LVU121
 463 002c A363     		str	r3, [r4, #56]	@ float
  60:eurorack/plaits/dsp/physical_modelling/string.cc ****   out_sample_[0] = out_sample_[1] = 0.0f;
 464              		.loc 6 60 3 is_stmt 1 view .LVU122
 465              		.loc 6 60 35 is_stmt 0 view .LVU123
 466 002e 6364     		str	r3, [r4, #68]	@ float
 467              		.loc 6 60 18 view .LVU124
 468 0030 2364     		str	r3, [r4, #64]	@ float
  61:eurorack/plaits/dsp/physical_modelling/string.cc ****   src_phase_ = 0.0f;
 469              		.loc 6 61 3 is_stmt 1 view .LVU125
 470              		.loc 6 61 14 is_stmt 0 view .LVU126
 471 0032 E363     		str	r3, [r4, #60]	@ float
  62:eurorack/plaits/dsp/physical_modelling/string.cc **** }
 472              		.loc 6 62 1 view .LVU127
 473 0034 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 34


 474              	.LVL37:
 475              	.L13:
 476              		.loc 6 62 1 view .LVU128
 477 0036 00BF     		.align	2
 478              	.L12:
 479 0038 22BA003D 		.word	1023457826
 480 003c 0AD77F3F 		.word	1065342730
 481 0040 0AD7233C 		.word	1008981770
 482 0044 CAAA7F3F 		.word	1065331402
 483              		.cfi_endproc
 484              	.LFE1567:
 486              		.section	.text._ZN6plaits6String4InitEPN6stmlib15BufferAllocatorE,"ax",%progbits
 487              		.align	1
 488              		.global	_ZN6plaits6String4InitEPN6stmlib15BufferAllocatorE
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 493              	_ZN6plaits6String4InitEPN6stmlib15BufferAllocatorE:
 494              	.LVL38:
 495              	.LFB1566:
  46:eurorack/plaits/dsp/physical_modelling/string.cc ****   string_.Init(allocator->Allocate<float>(kDelayLineSize));
 496              		.loc 6 46 47 is_stmt 1 view -0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
  47:eurorack/plaits/dsp/physical_modelling/string.cc ****   stretch_.Init(allocator->Allocate<float>(kDelayLineSize / 4));
 500              		.loc 6 47 3 view .LVU130
 501              	.LBB140:
 502              	.LBI140:
 503              		.file 7 "eurorack/stmlib/utils/buffer_allocator.h"
   1:eurorack/stmlib/utils/buffer_allocator.h **** // Copyright 2014 Emilie Gillet.
   2:eurorack/stmlib/utils/buffer_allocator.h **** //
   3:eurorack/stmlib/utils/buffer_allocator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/utils/buffer_allocator.h **** //
   5:eurorack/stmlib/utils/buffer_allocator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/utils/buffer_allocator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/utils/buffer_allocator.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/utils/buffer_allocator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/utils/buffer_allocator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/utils/buffer_allocator.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/utils/buffer_allocator.h **** // 
  12:eurorack/stmlib/utils/buffer_allocator.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/utils/buffer_allocator.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/utils/buffer_allocator.h **** // 
  15:eurorack/stmlib/utils/buffer_allocator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/utils/buffer_allocator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/utils/buffer_allocator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/utils/buffer_allocator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/utils/buffer_allocator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/utils/buffer_allocator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/utils/buffer_allocator.h **** // THE SOFTWARE.
  22:eurorack/stmlib/utils/buffer_allocator.h **** // 
  23:eurorack/stmlib/utils/buffer_allocator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/utils/buffer_allocator.h **** //
  25:eurorack/stmlib/utils/buffer_allocator.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/utils/buffer_allocator.h **** //
  27:eurorack/stmlib/utils/buffer_allocator.h **** // Stream buffer for serialization.
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 35


  28:eurorack/stmlib/utils/buffer_allocator.h **** 
  29:eurorack/stmlib/utils/buffer_allocator.h **** #ifndef STMLIB_UTILS_BUFFER_ALLOCATOR_H_
  30:eurorack/stmlib/utils/buffer_allocator.h **** #define STMLIB_UTILS_BUFFER_ALLOCATOR_H_
  31:eurorack/stmlib/utils/buffer_allocator.h **** 
  32:eurorack/stmlib/utils/buffer_allocator.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/utils/buffer_allocator.h **** 
  34:eurorack/stmlib/utils/buffer_allocator.h **** namespace stmlib {
  35:eurorack/stmlib/utils/buffer_allocator.h **** 
  36:eurorack/stmlib/utils/buffer_allocator.h **** class BufferAllocator {
  37:eurorack/stmlib/utils/buffer_allocator.h ****  public:
  38:eurorack/stmlib/utils/buffer_allocator.h ****   BufferAllocator() { }
  39:eurorack/stmlib/utils/buffer_allocator.h ****   ~BufferAllocator() { }
  40:eurorack/stmlib/utils/buffer_allocator.h ****   
  41:eurorack/stmlib/utils/buffer_allocator.h ****   BufferAllocator(void* buffer, size_t size) {
  42:eurorack/stmlib/utils/buffer_allocator.h ****     Init(buffer, size);
  43:eurorack/stmlib/utils/buffer_allocator.h ****   }
  44:eurorack/stmlib/utils/buffer_allocator.h ****   
  45:eurorack/stmlib/utils/buffer_allocator.h ****   inline void Init(void* buffer, size_t size) {
  46:eurorack/stmlib/utils/buffer_allocator.h ****     buffer_ = static_cast<uint8_t*>(buffer);
  47:eurorack/stmlib/utils/buffer_allocator.h ****     size_ = size;
  48:eurorack/stmlib/utils/buffer_allocator.h ****     Free();
  49:eurorack/stmlib/utils/buffer_allocator.h ****   }
  50:eurorack/stmlib/utils/buffer_allocator.h **** 
  51:eurorack/stmlib/utils/buffer_allocator.h ****   template<typename T>
  52:eurorack/stmlib/utils/buffer_allocator.h ****   inline T* Allocate() {
  53:eurorack/stmlib/utils/buffer_allocator.h ****     return Allocate<T>(1);
  54:eurorack/stmlib/utils/buffer_allocator.h ****   }
  55:eurorack/stmlib/utils/buffer_allocator.h ****   
  56:eurorack/stmlib/utils/buffer_allocator.h ****   template<typename T>
  57:eurorack/stmlib/utils/buffer_allocator.h ****   inline T* Allocate(size_t size) {
 504              		.loc 7 57 13 view .LVU131
 505              		.loc 7 57 13 is_stmt 0 view .LVU132
 506              	.LBE140:
  46:eurorack/plaits/dsp/physical_modelling/string.cc ****   string_.Init(allocator->Allocate<float>(kDelayLineSize));
 507              		.loc 6 46 47 view .LVU133
 508 0000 38B5     		push	{r3, r4, r5, lr}
 509              		.cfi_def_cfa_offset 16
 510              		.cfi_offset 3, -16
 511              		.cfi_offset 4, -12
 512              		.cfi_offset 5, -8
 513              		.cfi_offset 14, -4
 514              	.LBB149:
 515              	.LBB141:
 516              	.LBB142:
  58:eurorack/stmlib/utils/buffer_allocator.h ****     size_t size_bytes = sizeof(T) * size;
  59:eurorack/stmlib/utils/buffer_allocator.h ****     if (size_bytes <= free_) {
 517              		.loc 7 59 23 view .LVU134
 518 0002 8B68     		ldr	r3, [r1, #8]
 519              	.LBE142:
 520              	.LBE141:
 521              	.LBE149:
  46:eurorack/plaits/dsp/physical_modelling/string.cc ****   string_.Init(allocator->Allocate<float>(kDelayLineSize));
 522              		.loc 6 46 47 view .LVU135
 523 0004 0C46     		mov	r4, r1
 524 0006 0546     		mov	r5, r0
 525              	.LBB150:
 526              	.LBB147:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 36


 527              	.LBB145:
 528              		.loc 7 59 5 view .LVU136
 529 0008 B3F5805F 		cmp	r3, #4096
 530              	.LBB143:
  60:eurorack/stmlib/utils/buffer_allocator.h ****       T* start = static_cast<T*>(static_cast<void*>(next_));
 531              		.loc 7 60 10 view .LVU137
 532 000c 29BF     		itett	cs
 533 000e 0A68     		ldrcs	r2, [r1]
 534              	.LVL39:
 535              		.loc 7 60 10 view .LVU138
 536              	.LBE143:
  61:eurorack/stmlib/utils/buffer_allocator.h ****       next_ += size_bytes;
  62:eurorack/stmlib/utils/buffer_allocator.h ****       free_ -= size_bytes;
  63:eurorack/stmlib/utils/buffer_allocator.h ****       return start;
  64:eurorack/stmlib/utils/buffer_allocator.h ****     } else {
  65:eurorack/stmlib/utils/buffer_allocator.h ****       return NULL;
 537              		.loc 7 65 14 view .LVU139
 538 0010 0022     		movcc	r2, #0
 539              	.LVL40:
 540              		.loc 7 65 14 view .LVU140
 541              	.LBE145:
 542              	.LBE147:
 543              	.LBE150:
 544              	.LBB151:
 545              	.LBI151:
  44:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     line_ = buffer;
 546              		.loc 4 44 8 is_stmt 1 view .LVU141
 547              	.LBE151:
 548              	.LBB153:
 549              	.LBB148:
 550              	.LBB146:
 551              	.LBB144:
  62:eurorack/stmlib/utils/buffer_allocator.h ****       return start;
 552              		.loc 7 62 13 is_stmt 0 view .LVU142
 553 0012 A3F58053 		subcs	r3, r3, #4096
  61:eurorack/stmlib/utils/buffer_allocator.h ****       next_ += size_bytes;
 554              		.loc 7 61 13 view .LVU143
 555 0016 02F58051 		addcs	r1, r2, #4096
 556              	.LVL41:
  62:eurorack/stmlib/utils/buffer_allocator.h ****       return start;
 557              		.loc 7 62 13 view .LVU144
 558 001a 24BF     		itt	cs
 559 001c A360     		strcs	r3, [r4, #8]
  61:eurorack/stmlib/utils/buffer_allocator.h ****       next_ += size_bytes;
 560              		.loc 7 61 13 view .LVU145
 561 001e 2160     		strcs	r1, [r4]
 562              	.LBE144:
 563              	.LBE146:
 564              	.LBE148:
 565              	.LBE153:
 566              	.LBB154:
 567              	.LBB152:
  45:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     Reset();
 568              		.loc 4 45 11 view .LVU146
 569 0020 4260     		str	r2, [r0, #4]
  46:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 570              		.loc 4 46 10 view .LVU147
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 37


 571 0022 FFF7FEFF 		bl	_ZN6plaits9DelayLineIfLj1024EE5ResetEv
 572              	.LVL42:
  46:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 573              		.loc 4 46 10 view .LVU148
 574              	.LBE152:
 575              	.LBE154:
  48:eurorack/plaits/dsp/physical_modelling/string.cc ****   delay_ = 100.0f;
 576              		.loc 6 48 3 is_stmt 1 view .LVU149
 577              	.LBB155:
 578              	.LBB156:
 579              	.LBB157:
  59:eurorack/stmlib/utils/buffer_allocator.h ****       T* start = static_cast<T*>(static_cast<void*>(next_));
 580              		.loc 7 59 23 is_stmt 0 view .LVU150
 581 0026 A368     		ldr	r3, [r4, #8]
 582              	.LBE157:
 583              	.LBE156:
 584              	.LBE155:
  48:eurorack/plaits/dsp/physical_modelling/string.cc ****   delay_ = 100.0f;
 585              		.loc 6 48 16 view .LVU151
 586 0028 05F10800 		add	r0, r5, #8
 587              	.LVL43:
 588              	.LBB164:
 589              	.LBI155:
  57:eurorack/stmlib/utils/buffer_allocator.h ****     size_t size_bytes = sizeof(T) * size;
 590              		.loc 7 57 13 is_stmt 1 view .LVU152
 591              	.LBB162:
 592              	.LBB160:
  59:eurorack/stmlib/utils/buffer_allocator.h ****       T* start = static_cast<T*>(static_cast<void*>(next_));
 593              		.loc 7 59 5 is_stmt 0 view .LVU153
 594 002c B3F5806F 		cmp	r3, #1024
 595              	.LBB158:
  60:eurorack/stmlib/utils/buffer_allocator.h ****       next_ += size_bytes;
 596              		.loc 7 60 10 view .LVU154
 597 0030 25BF     		ittet	cs
 598 0032 2268     		ldrcs	r2, [r4]
 599              	.LVL44:
  62:eurorack/stmlib/utils/buffer_allocator.h ****       return start;
 600              		.loc 7 62 13 view .LVU155
 601 0034 A3F58063 		subcs	r3, r3, #1024
 602              	.LBE158:
 603              		.loc 7 65 14 view .LVU156
 604 0038 0022     		movcc	r2, #0
 605              	.LVL45:
 606              		.loc 7 65 14 view .LVU157
 607              	.LBE160:
 608              	.LBE162:
 609              	.LBE164:
 610              	.LBB165:
 611              	.LBI165:
  44:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     line_ = buffer;
 612              		.loc 4 44 8 is_stmt 1 view .LVU158
 613              	.LBE165:
 614              	.LBB167:
 615              	.LBB163:
 616              	.LBB161:
 617              	.LBB159:
  61:eurorack/stmlib/utils/buffer_allocator.h ****       free_ -= size_bytes;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 38


 618              		.loc 7 61 13 is_stmt 0 view .LVU159
 619 003a 02F58061 		addcs	r1, r2, #1024
  62:eurorack/stmlib/utils/buffer_allocator.h ****       return start;
 620              		.loc 7 62 13 view .LVU160
 621 003e 24BF     		itt	cs
 622 0040 A360     		strcs	r3, [r4, #8]
  61:eurorack/stmlib/utils/buffer_allocator.h ****       free_ -= size_bytes;
 623              		.loc 7 61 13 view .LVU161
 624 0042 2160     		strcs	r1, [r4]
 625              	.LBE159:
 626              	.LBE161:
 627              	.LBE163:
 628              	.LBE167:
 629              	.LBB168:
 630              	.LBB166:
  45:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     Reset();
 631              		.loc 4 45 11 view .LVU162
 632 0044 EA60     		str	r2, [r5, #12]
  46:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 633              		.loc 4 46 10 view .LVU163
 634 0046 FFF7FEFF 		bl	_ZN6plaits9DelayLineIfLj256EE5ResetEv
 635              	.LVL46:
  46:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 636              		.loc 4 46 10 view .LVU164
 637              	.LBE166:
 638              	.LBE168:
  49:eurorack/plaits/dsp/physical_modelling/string.cc ****   Reset();
 639              		.loc 6 49 3 is_stmt 1 view .LVU165
  49:eurorack/plaits/dsp/physical_modelling/string.cc ****   Reset();
 640              		.loc 6 49 10 is_stmt 0 view .LVU166
 641 004a 034B     		ldr	r3, .L19
  50:eurorack/plaits/dsp/physical_modelling/string.cc **** }
 642              		.loc 6 50 8 view .LVU167
 643 004c 2846     		mov	r0, r5
  49:eurorack/plaits/dsp/physical_modelling/string.cc ****   Reset();
 644              		.loc 6 49 10 view .LVU168
 645 004e 2B63     		str	r3, [r5, #48]	@ float
  50:eurorack/plaits/dsp/physical_modelling/string.cc **** }
 646              		.loc 6 50 3 is_stmt 1 view .LVU169
  51:eurorack/plaits/dsp/physical_modelling/string.cc **** 
 647              		.loc 6 51 1 is_stmt 0 view .LVU170
 648 0050 BDE83840 		pop	{r3, r4, r5, lr}
 649              		.cfi_restore 14
 650              		.cfi_restore 5
 651              		.cfi_restore 4
 652              		.cfi_restore 3
 653              		.cfi_def_cfa_offset 0
 654              	.LVL47:
  50:eurorack/plaits/dsp/physical_modelling/string.cc **** }
 655              		.loc 6 50 8 view .LVU171
 656 0054 FFF7FEBF 		b	_ZN6plaits6String5ResetEv
 657              	.LVL48:
 658              	.L20:
  50:eurorack/plaits/dsp/physical_modelling/string.cc **** }
 659              		.loc 6 50 8 view .LVU172
 660              		.align	2
 661              	.L19:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 39


 662 0058 0000C842 		.word	1120403456
 663              		.cfi_endproc
 664              	.LFE1566:
 666              		.section	.text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff,"axG",%progbits,_ZN6stm
 667              		.align	1
 668              		.weak	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff
 669              		.syntax unified
 670              		.thumb
 671              		.thumb_func
 673              	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff:
 674              	.LVL49:
 675              	.LFB1594:
 223:eurorack/stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 676              		.loc 1 223 15 is_stmt 1 view -0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              		@ link register save eliminated.
 681              	.LBB172:
 682              	.LBI172:
 107:eurorack/stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 683              		.loc 1 107 23 view .LVU174
 684              	.LBB173:
 122:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + b * f2));
 685              		.loc 1 122 13 is_stmt 0 view .LVU175
 686 0000 60EE006A 		vmul.f32	s13, s0, s0
 687              	.LVL50:
 123:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 688              		.loc 1 123 36 view .LVU176
 689 0004 DFED0F7A 		vldr.32	s15, .L22
 690 0008 9FED0F7A 		vldr.32	s14, .L22+4
 691 000c A6EEA77A 		vfma.f32	s14, s13, s15
 123:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 692              		.loc 1 123 26 view .LVU177
 693 0010 DFED0E7A 		vldr.32	s15, .L22+8
 694 0014 E6EE877A 		vfma.f32	s15, s13, s14
 695              	.LBE173:
 696              	.LBE172:
 225:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 697              		.loc 1 225 15 view .LVU178
 698 0018 B7EE007A 		vmov.f32	s14, #1.0e+0
 699 001c C7EE206A 		vdiv.f32	s13, s14, s1
 700              	.LVL51:
 701              	.LBB175:
 702              	.LBB174:
 123:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 703              		.loc 1 123 45 view .LVU179
 704 0020 20EE270A 		vmul.f32	s0, s0, s15
 705              	.LVL52:
 123:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 706              		.loc 1 123 45 view .LVU180
 707              	.LBE174:
 708              	.LBE175:
 709              		.loc 1 226 23 view .LVU181
 710 0024 F0EE477A 		vmov.f32	s15, s14
 224:eurorack/stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 711              		.loc 1 224 8 view .LVU182
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 40


 712 0028 80ED000A 		vstr.32	s0, [r0]
 713              		.loc 1 226 23 view .LVU183
 714 002c E6EE807A 		vfma.f32	s15, s13, s0
 225:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 715              		.loc 1 225 8 view .LVU184
 716 0030 C0ED016A 		vstr.32	s13, [r0, #4]
 717              		.loc 1 226 33 view .LVU185
 718 0034 E0EE007A 		vfma.f32	s15, s0, s0
 719              		.loc 1 226 15 view .LVU186
 720 0038 C7EE276A 		vdiv.f32	s13, s14, s15
 721              		.loc 1 226 8 view .LVU187
 722 003c C0ED026A 		vstr.32	s13, [r0, #8]
 227:eurorack/stmlib/dsp/filter.h ****   }
 723              		.loc 1 227 3 view .LVU188
 724 0040 7047     		bx	lr
 725              	.L23:
 726 0042 00BF     		.align	2
 727              	.L22:
 728 0044 49265F42 		.word	1113531977
 729 0048 8FBA2141 		.word	1092729487
 730 004c DB0F4940 		.word	1078530011
 731              		.cfi_endproc
 732              	.LFE1594:
 734              		.section	.text._ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf,"axG",%progbits,_ZNK6plaits9DelayLin
 735              		.align	1
 736              		.weak	_ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf
 737              		.syntax unified
 738              		.thumb
 739              		.thumb_func
 741              	_ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf:
 742              	.LVL53:
 743              	.LFB1597:
  53:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   
  54:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   inline void Write(const T sample) {
  55:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     line_[write_ptr_] = sample;
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
  57:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
  58:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   
  59:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   inline const T Allpass(const T sample, size_t delay, const T coefficient) {
  60:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T read = line_[(write_ptr_ + delay) % max_delay];
  61:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T write = sample + coefficient * read;
  62:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     Write(write);
  63:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     return -write * coefficient + read;
  64:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
  65:eurorack/plaits/dsp/physical_modelling/delay_line.h **** 
  66:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   inline const T WriteRead(const T sample, float delay) {
  67:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     Write(sample);
  68:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     return Read(delay);
  69:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
  70:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   
  71:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   inline const T Read(float delay) const {
  72:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     MAKE_INTEGRAL_FRACTIONAL(delay)
  73:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
  74:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
  75:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     return a + (b - a) * T(delay_fractional);
  76:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
  77:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 41


  78:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   inline const T ReadHermite(float delay) const {
 744              		.loc 4 78 18 is_stmt 1 view -0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 0, uses_anonymous_args = 0
 748              		@ link register save eliminated.
  79:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     MAKE_INTEGRAL_FRACTIONAL(delay)
 749              		.loc 4 79 5 is_stmt 0 view .LVU190
 750 0000 FDEEC07A 		vcvt.s32.f32	s15, s0
 751              	.LVL54:
  80:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 752              		.loc 4 80 29 view .LVU191
 753 0004 0368     		ldr	r3, [r0]
  81:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T xm1 = line_[(t - 1) % max_delay];
  82:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x0 = line_[(t) % max_delay];
  83:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x1 = line_[(t + 1) % max_delay];
  84:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x2 = line_[(t + 2) % max_delay];
  85:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T c = (x1 - xm1) * 0.5f;
  86:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T v = x0 - x1;
  87:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T w = c + v;
 754              		.loc 4 87 13 view .LVU192
 755 0006 F6EE005A 		vmov.f32	s11, #5.0e-1
  80:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 756              		.loc 4 80 29 view .LVU193
 757 000a 17EE902A 		vmov	r2, s15	@ int
  79:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 758              		.loc 4 79 5 view .LVU194
 759 000e F8EEE76A 		vcvt.f32.s32	s13, s15
  80:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 760              		.loc 4 80 29 view .LVU195
 761 0012 1A44     		add	r2, r2, r3
  79:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 762              		.loc 4 79 5 view .LVU196
 763 0014 70EE666A 		vsub.f32	s13, s0, s13
 764              	.LVL55:
  80:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     int32_t t = (write_ptr_ + delay_integral + max_delay);
 765              		.loc 4 80 29 view .LVU197
 766 0018 1346     		mov	r3, r2
 767              	.LVL56:
  81:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T xm1 = line_[(t - 1) % max_delay];
 768              		.loc 4 81 19 view .LVU198
 769 001a 4268     		ldr	r2, [r0, #4]
 770              	.LVL57:
  82:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x1 = line_[(t + 1) % max_delay];
 771              		.loc 4 82 23 view .LVU199
 772 001c C3F30901 		ubfx	r1, r3, #0, #10
  82:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x1 = line_[(t + 1) % max_delay];
 773              		.loc 4 82 13 view .LVU200
 774 0020 02EB8101 		add	r1, r2, r1, lsl #2
 775 0024 91ED000A 		vldr.32	s0, [r1]
 776              	.LVL58:
  83:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x2 = line_[(t + 2) % max_delay];
 777              		.loc 4 83 32 view .LVU201
 778 0028 03F20141 		addw	r1, r3, #1025
 779 002c C1F30901 		ubfx	r1, r1, #0, #10
  83:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x2 = line_[(t + 2) % max_delay];
 780              		.loc 4 83 13 view .LVU202
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 42


 781 0030 02EB8101 		add	r1, r2, r1, lsl #2
 782 0034 91ED007A 		vldr.32	s14, [r1]
 783              	.LVL59:
  81:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x0 = line_[(t) % max_delay];
 784              		.loc 4 81 33 view .LVU203
 785 0038 03F2FF31 		addw	r1, r3, #1023
 786              	.LVL60:
  84:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T c = (x1 - xm1) * 0.5f;
 787              		.loc 4 84 32 view .LVU204
 788 003c 03F20243 		addw	r3, r3, #1026
 789              	.LVL61:
  81:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x0 = line_[(t) % max_delay];
 790              		.loc 4 81 33 view .LVU205
 791 0040 C1F30901 		ubfx	r1, r1, #0, #10
 792              	.LVL62:
  84:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T c = (x1 - xm1) * 0.5f;
 793              		.loc 4 84 32 view .LVU206
 794 0044 C3F30903 		ubfx	r3, r3, #0, #10
 795              	.LVL63:
  81:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T x0 = line_[(t) % max_delay];
 796              		.loc 4 81 13 view .LVU207
 797 0048 02EB8101 		add	r1, r2, r1, lsl #2
  84:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T c = (x1 - xm1) * 0.5f;
 798              		.loc 4 84 13 view .LVU208
 799 004c 02EB8303 		add	r3, r2, r3, lsl #2
  85:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T v = x0 - x1;
 800              		.loc 4 85 21 view .LVU209
 801 0050 91ED006A 		vldr.32	s12, [r1]
  88:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = w + v + (x2 - x0) * 0.5f;
 802              		.loc 4 88 29 view .LVU210
 803 0054 93ED005A 		vldr.32	s10, [r3]
  85:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T v = x0 - x1;
 804              		.loc 4 85 21 view .LVU211
 805 0058 37EE466A 		vsub.f32	s12, s14, s12
 806              	.LVL64:
  86:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T w = c + v;
 807              		.loc 4 86 13 view .LVU212
 808 005c 30EE477A 		vsub.f32	s14, s0, s14
 809              	.LVL65:
 810              		.loc 4 88 29 view .LVU213
 811 0060 35EE405A 		vsub.f32	s10, s10, s0
  87:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = w + v + (x2 - x0) * 0.5f;
 812              		.loc 4 87 13 view .LVU214
 813 0064 F0EE477A 		vmov.f32	s15, s14
 814              	.LVL66:
  87:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = w + v + (x2 - x0) * 0.5f;
 815              		.loc 4 87 13 view .LVU215
 816 0068 E6EE257A 		vfma.f32	s15, s12, s11
 817              	.LVL67:
 818              		.loc 4 88 19 view .LVU216
 819 006c 37EE277A 		vadd.f32	s14, s14, s15
 820              	.LVL68:
 821              		.loc 4 88 13 view .LVU217
 822 0070 A5EE257A 		vfma.f32	s14, s10, s11
 823              	.LVL69:
  89:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b_neg = w + a;
 824              		.loc 4 89 13 view .LVU218
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 43


 825 0074 77EE877A 		vadd.f32	s15, s15, s14
 826              	.LVL70:
  90:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T f = delay_fractional;
  91:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     return (((a * f) - b_neg) * f + c) * f + x0;
 827              		.loc 4 91 22 view .LVU219
 828 0078 D6EE877A 		vfnms.f32	s15, s13, s14
 829              	.LVL71:
 830              		.loc 4 91 31 view .LVU220
 831 007c 67EEA67A 		vmul.f32	s15, s15, s13
 832              		.loc 4 91 35 view .LVU221
 833 0080 E6EE257A 		vfma.f32	s15, s12, s11
  92:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 834              		.loc 4 92 3 view .LVU222
 835 0084 A7EEA60A 		vfma.f32	s0, s15, s13
 836              	.LVL72:
 837              		.loc 4 92 3 view .LVU223
 838 0088 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE1597:
 842              		.section	.text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff,"axG",%progbits,_ZN6stmlib3Svf7Proce
 843              		.align	1
 844              		.weak	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 849              	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff:
 850              	.LVL73:
 851              	.LFB1598:
 228:eurorack/stmlib/dsp/filter.h ****   
 229:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 230:eurorack/stmlib/dsp/filter.h ****   inline float Process(float in) {
 852              		.loc 1 230 16 is_stmt 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 0
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 231:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
 232:eurorack/stmlib/dsp/filter.h ****     hp = (in - r_ * state_1_ - g_ * state_1_ - state_2_) * h_;
 857              		.loc 1 232 14 is_stmt 0 view .LVU225
 858 0000 F0EE407A 		vmov.f32	s15, s0
 859              		.loc 1 232 21 view .LVU226
 860 0004 90ED037A 		vldr.32	s14, [r0, #12]
 861              		.loc 1 232 14 view .LVU227
 862 0008 D0ED016A 		vldr.32	s13, [r0, #4]
 863              		.loc 1 232 48 view .LVU228
 864 000c 90ED040A 		vldr.32	s0, [r0, #16]
 865              	.LVL74:
 866              		.loc 1 232 14 view .LVU229
 867 0010 E6EEC77A 		vfms.f32	s15, s13, s14
 868              	.LVL75:
 869              		.loc 1 232 32 view .LVU230
 870 0014 D0ED006A 		vldr.32	s13, [r0]
 871              		.loc 1 232 8 view .LVU231
 872 0018 90ED026A 		vldr.32	s12, [r0, #8]
 873              		.loc 1 232 30 view .LVU232
 874 001c E7EE667A 		vfms.f32	s15, s14, s13
 875              		.loc 1 232 46 view .LVU233
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 44


 876 0020 77EEC07A 		vsub.f32	s15, s15, s0
 877              		.loc 1 232 8 view .LVU234
 878 0024 67EE867A 		vmul.f32	s15, s15, s12
 879              	.LVL76:
 233:eurorack/stmlib/dsp/filter.h ****     bp = g_ * hp + state_1_;
 880              		.loc 1 233 8 view .LVU235
 881 0028 A6EEA77A 		vfma.f32	s14, s13, s15
 882              	.LVL77:
 234:eurorack/stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 235:eurorack/stmlib/dsp/filter.h ****     lp = g_ * bp + state_2_;
 883              		.loc 1 235 8 view .LVU236
 884 002c A6EE870A 		vfma.f32	s0, s13, s14
 885              	.LVL78:
 234:eurorack/stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 886              		.loc 1 234 24 view .LVU237
 887 0030 B0EE476A 		vmov.f32	s12, s14
 888 0034 A6EEA76A 		vfma.f32	s12, s13, s15
 236:eurorack/stmlib/dsp/filter.h ****     state_2_ = g_ * bp + lp;
 889              		.loc 1 236 24 view .LVU238
 890 0038 F0EE407A 		vmov.f32	s15, s0
 891              	.LVL79:
 892              		.loc 1 236 24 view .LVU239
 893 003c E6EE877A 		vfma.f32	s15, s13, s14
 234:eurorack/stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 894              		.loc 1 234 14 view .LVU240
 895 0040 80ED036A 		vstr.32	s12, [r0, #12]
 896              	.LVL80:
 897              		.loc 1 236 14 view .LVU241
 898 0044 C0ED047A 		vstr.32	s15, [r0, #16]
 237:eurorack/stmlib/dsp/filter.h ****     
 238:eurorack/stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 239:eurorack/stmlib/dsp/filter.h ****       return lp;
 240:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS) {
 241:eurorack/stmlib/dsp/filter.h ****       return bp;
 242:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 243:eurorack/stmlib/dsp/filter.h ****       return bp * r_;
 244:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 245:eurorack/stmlib/dsp/filter.h ****       return hp;
 246:eurorack/stmlib/dsp/filter.h ****     }
 247:eurorack/stmlib/dsp/filter.h ****   }
 899              		.loc 1 247 3 view .LVU242
 900 0048 7047     		bx	lr
 901              		.cfi_endproc
 902              	.LFE1598:
 904              		.section	.text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj,"axG",%
 905              		.align	1
 906              		.weak	_ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj
 907              		.syntax unified
 908              		.thumb
 909              		.thumb_func
 911              	_ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj:
 912              	.LVL81:
 913              	.LFB1590:
  63:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  64:eurorack/plaits/dsp/physical_modelling/string.cc **** void String::Process(
  65:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
  66:eurorack/plaits/dsp/physical_modelling/string.cc ****     float non_linearity_amount,
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 45


  67:eurorack/plaits/dsp/physical_modelling/string.cc ****     float brightness,
  68:eurorack/plaits/dsp/physical_modelling/string.cc ****     float damping,
  69:eurorack/plaits/dsp/physical_modelling/string.cc ****     const float* in,
  70:eurorack/plaits/dsp/physical_modelling/string.cc ****     float* out,
  71:eurorack/plaits/dsp/physical_modelling/string.cc ****     size_t size) {
  72:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (non_linearity_amount <= 0.0f) {
  73:eurorack/plaits/dsp/physical_modelling/string.cc ****     ProcessInternal<STRING_NON_LINEARITY_CURVED_BRIDGE>(
  74:eurorack/plaits/dsp/physical_modelling/string.cc ****         f0, -non_linearity_amount, brightness, damping, in, out, size);
  75:eurorack/plaits/dsp/physical_modelling/string.cc ****   } else {
  76:eurorack/plaits/dsp/physical_modelling/string.cc ****     ProcessInternal<STRING_NON_LINEARITY_DISPERSION>(
  77:eurorack/plaits/dsp/physical_modelling/string.cc ****         f0, non_linearity_amount, brightness, damping, in, out, size);
  78:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
  79:eurorack/plaits/dsp/physical_modelling/string.cc **** }
  80:eurorack/plaits/dsp/physical_modelling/string.cc **** 
  81:eurorack/plaits/dsp/physical_modelling/string.cc **** template<StringNonLinearity non_linearity>
  82:eurorack/plaits/dsp/physical_modelling/string.cc **** void String::ProcessInternal(
 914              		.loc 6 82 6 is_stmt 1 view -0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 8
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		.loc 6 82 6 is_stmt 0 view .LVU244
 919 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 920              		.cfi_def_cfa_offset 24
 921              		.cfi_offset 4, -24
 922              		.cfi_offset 5, -20
 923              		.cfi_offset 6, -16
 924              		.cfi_offset 7, -12
 925              		.cfi_offset 8, -8
 926              		.cfi_offset 14, -4
 927 0004 2DED088B 		vpush.64	{d8, d9, d10, d11}
 928              		.cfi_def_cfa_offset 56
 929              		.cfi_offset 80, -56
 930              		.cfi_offset 81, -52
 931              		.cfi_offset 82, -48
 932              		.cfi_offset 83, -44
 933              		.cfi_offset 84, -40
 934              		.cfi_offset 85, -36
 935              		.cfi_offset 86, -32
 936              		.cfi_offset 87, -28
  83:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
  84:eurorack/plaits/dsp/physical_modelling/string.cc ****     float non_linearity_amount,
  85:eurorack/plaits/dsp/physical_modelling/string.cc ****     float brightness,
  86:eurorack/plaits/dsp/physical_modelling/string.cc ****     float damping,
  87:eurorack/plaits/dsp/physical_modelling/string.cc ****     const float* in,
  88:eurorack/plaits/dsp/physical_modelling/string.cc ****     float* out,
  89:eurorack/plaits/dsp/physical_modelling/string.cc ****     size_t size) {
  90:eurorack/plaits/dsp/physical_modelling/string.cc ****   float delay = 1.0f / f0;
 937              		.loc 6 90 9 view .LVU245
 938 0008 B7EE009A 		vmov.f32	s18, #1.0e+0
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 939              		.loc 6 82 6 view .LVU246
 940 000c 82B0     		sub	sp, sp, #8
 941              		.cfi_def_cfa_offset 64
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 942              		.loc 6 91 3 view .LVU247
 943 000e F1EE007A 		vmov.f32	s15, #4.0e+0
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 46


 944              		.loc 6 82 6 view .LVU248
 945 0012 0446     		mov	r4, r0
 946 0014 B0EE40BA 		vmov.f32	s22, s0
 947 0018 0E46     		mov	r6, r1
  90:eurorack/plaits/dsp/physical_modelling/string.cc ****   CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 948              		.loc 6 90 9 view .LVU249
 949 001a 89EE00AA 		vdiv.f32	s20, s18, s0
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 950              		.loc 6 82 6 view .LVU250
 951 001e 1746     		mov	r7, r2
 952 0020 1D46     		mov	r5, r3
 953 0022 F0EE60AA 		vmov.f32	s21, s1
 954              	.LVL82:
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 955              		.loc 6 82 6 view .LVU251
 956 0026 F0EE618A 		vmov.f32	s17, s3
 957              		.loc 6 91 3 view .LVU252
 958 002a B4EEE7AA 		vcmpe.f32	s20, s15
 959 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 960 0032 00F19080 		bmi	.L44
 961              		.loc 6 91 3 discriminator 2 view .LVU253
 962 0036 DFED7C7A 		vldr.32	s15, .L53
 963 003a B4EE67AA 		vcmp.f32	s20, s15
 964 003e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 965 0042 37FE8AAA 		vselgt.f32	s20, s15, s20
 966              	.LVL83:
 967              	.L27:
  92:eurorack/plaits/dsp/physical_modelling/string.cc ****   
  93:eurorack/plaits/dsp/physical_modelling/string.cc ****   // If there is not enough delay time in the delay line, we play at the
  94:eurorack/plaits/dsp/physical_modelling/string.cc ****   // lowest possible note and we upsample on the fly with a shitty linear
  95:eurorack/plaits/dsp/physical_modelling/string.cc ****   // interpolator. We don't care because it's a corner case (f0 < 11.7Hz)
  96:eurorack/plaits/dsp/physical_modelling/string.cc ****   float src_ratio = delay * f0;
 968              		.loc 6 96 9 view .LVU254
 969 0046 6BEE0A9A 		vmul.f32	s19, s22, s20
 970              	.LVL84:
  97:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (src_ratio >= 0.9999f) {
 971              		.loc 6 97 3 view .LVU255
 972 004a DFED787A 		vldr.32	s15, .L53+4
  98:eurorack/plaits/dsp/physical_modelling/string.cc ****     // When we are above 11.7 Hz, we make sure that the linear interpolator
  99:eurorack/plaits/dsp/physical_modelling/string.cc ****     // does not get in the way.
 100:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_phase_ = 1.0f;
 101:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_ratio = 1.0f;
 102:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 103:eurorack/plaits/dsp/physical_modelling/string.cc **** 
 104:eurorack/plaits/dsp/physical_modelling/string.cc ****   float damping_cutoff = min(
 105:eurorack/plaits/dsp/physical_modelling/string.cc ****       12.0f + damping * damping * 60.0f + brightness * 24.0f,
 973              		.loc 6 105 23 view .LVU256
 974 004e 28EEA87A 		vmul.f32	s14, s17, s17
 975              		.loc 6 105 13 view .LVU257
 976 0052 B2EE088A 		vmov.f32	s16, #1.2e+1
  97:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (src_ratio >= 0.9999f) {
 977              		.loc 6 97 3 view .LVU258
 978 0056 F4EEE79A 		vcmpe.f32	s19, s15
 979              		.loc 6 105 13 view .LVU259
 980 005a DFED757A 		vldr.32	s15, .L53+8
 981 005e A7EE278A 		vfma.f32	s16, s14, s15
 982              		.loc 6 105 41 view .LVU260
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 47


 983 0062 F3EE087A 		vmov.f32	s15, #2.4e+1
  97:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (src_ratio >= 0.9999f) {
 984              		.loc 6 97 3 view .LVU261
 985 0066 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 100:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_ratio = 1.0f;
 986              		.loc 6 100 16 view .LVU262
 987 006a A4BF     		itt	ge
 988 006c 84ED0F9A 		vstrge.32	s18, [r4, #60]
 989              	.LVL85:
 101:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 990              		.loc 6 101 15 view .LVU263
 991 0070 F7EE009A 		vmovge.f32	s19, #1.0e+0
 992              	.LVL86:
 993              		.loc 6 105 41 view .LVU264
 994 0074 A1EE278A 		vfma.f32	s16, s2, s15
 995              	.LVL87:
 996              	.LBB201:
 997              	.LBI201:
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 998              		.loc 5 230 5 is_stmt 1 view .LVU265
 999              	.LBB202:
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1000              		.loc 5 235 7 is_stmt 0 view .LVU266
 1001 0078 DFED6E7A 		vldr.32	s15, .L53+12
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1002              		.loc 5 236 9 view .LVU267
 1003 007c B4EE678A 		vcmp.f32	s16, s15
 1004 0080 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1005 0084 37FE888A 		vselgt.f32	s16, s15, s16
 1006              	.LVL88:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1007              		.loc 5 236 9 view .LVU268
 1008              	.LBE202:
 1009              	.LBE201:
 106:eurorack/plaits/dsp/physical_modelling/string.cc ****       84.0f);
 107:eurorack/plaits/dsp/physical_modelling/string.cc ****   float damping_f = min(f0 * SemitonesToRatio(damping_cutoff), 0.499f);
 1010              		.loc 6 107 46 view .LVU269
 1011 0088 B0EE480A 		vmov.f32	s0, s16
 1012              	.LVL89:
 1013              		.loc 6 107 46 view .LVU270
 1014 008c FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 1015              	.LVL90:
 1016              		.loc 6 107 28 view .LVU271
 1017 0090 20EE0B0A 		vmul.f32	s0, s0, s22
 1018              	.LVL91:
 1019              	.LBB203:
 1020              	.LBI203:
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1021              		.loc 5 230 5 is_stmt 1 view .LVU272
 1022              	.LBB204:
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1023              		.loc 5 235 7 is_stmt 0 view .LVU273
 1024 0094 DFED687A 		vldr.32	s15, .L53+16
 1025              	.LBE204:
 1026              	.LBE203:
 1027              	.LBB207:
 108:eurorack/plaits/dsp/physical_modelling/string.cc ****   
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 48


 109:eurorack/plaits/dsp/physical_modelling/string.cc ****   // Crossfade to infinite decay.
 110:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (damping >= 0.95f) {
 1028              		.loc 6 110 3 view .LVU274
 1029 0098 DFED681A 		vldr.32	s3, .L53+20
 1030              	.LBE207:
 1031              	.LBB209:
 1032              	.LBB205:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1033              		.loc 5 236 9 view .LVU275
 1034 009c B4EE670A 		vcmp.f32	s0, s15
 1035 00a0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1036              	.LBE205:
 1037              	.LBE209:
 1038              	.LBB210:
 1039              		.loc 6 110 3 view .LVU276
 1040 00a4 F4EEE18A 		vcmpe.f32	s17, s3
 1041              	.LBE210:
 1042              	.LBB211:
 1043              	.LBB206:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1044              		.loc 5 236 9 view .LVU277
 1045 00a8 37FE800A 		vselgt.f32	s0, s15, s0
 1046              	.LVL92:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1047              		.loc 5 236 9 view .LVU278
 1048              	.LBE206:
 1049              	.LBE211:
 1050              	.LBB212:
 1051              		.loc 6 110 3 view .LVU279
 1052 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1053 00b0 11DB     		blt	.L33
 1054              	.LBB208:
 111:eurorack/plaits/dsp/physical_modelling/string.cc ****     float to_infinite = 20.0f * (damping - 0.95f);
 1055              		.loc 6 111 42 view .LVU280
 1056 00b2 78EEE18A 		vsub.f32	s17, s17, s3
 1057              	.LVL93:
 112:eurorack/plaits/dsp/physical_modelling/string.cc ****     brightness += to_infinite * (1.0f - brightness);
 113:eurorack/plaits/dsp/physical_modelling/string.cc ****     damping_f += to_infinite * (0.4999f - damping_f);
 1058              		.loc 6 113 41 view .LVU281
 1059 00b6 DFED627A 		vldr.32	s15, .L53+24
 111:eurorack/plaits/dsp/physical_modelling/string.cc ****     float to_infinite = 20.0f * (damping - 0.95f);
 1060              		.loc 6 111 11 view .LVU282
 1061 00ba F3EE041A 		vmov.f32	s3, #2.0e+1
 1062              		.loc 6 113 41 view .LVU283
 1063 00be 77EEC07A 		vsub.f32	s15, s15, s0
 111:eurorack/plaits/dsp/physical_modelling/string.cc ****     float to_infinite = 20.0f * (damping - 0.95f);
 1064              		.loc 6 111 11 view .LVU284
 1065 00c2 68EEA18A 		vmul.f32	s17, s17, s3
 1066              	.LVL94:
 1067              		.loc 6 113 15 view .LVU285
 1068 00c6 A7EEA80A 		vfma.f32	s0, s15, s17
 1069              	.LVL95:
 114:eurorack/plaits/dsp/physical_modelling/string.cc ****     damping_cutoff += to_infinite * (128.0f - damping_cutoff);
 1070              		.loc 6 114 45 view .LVU286
 1071 00ca DFED5E7A 		vldr.32	s15, .L53+28
 1072 00ce 77EEC87A 		vsub.f32	s15, s15, s16
 1073              		.loc 6 114 20 view .LVU287
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 49


 1074 00d2 A7EEA88A 		vfma.f32	s16, s15, s17
 1075              	.LVL96:
 1076              	.L33:
 1077              		.loc 6 114 20 view .LVU288
 1078              	.LBE208:
 1079              	.LBE212:
 115:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 116:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 117:eurorack/plaits/dsp/physical_modelling/string.cc ****   iir_damping_filter_.set_f_q<FREQUENCY_FAST>(damping_f, 0.5f);
 1080              		.loc 6 117 46 view .LVU289
 1081 00d6 04F11008 		add	r8, r4, #16
 1082 00da F6EE000A 		vmov.f32	s1, #5.0e-1
 1083 00de 4046     		mov	r0, r8
 1084 00e0 FFF7FEFF 		bl	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff
 1085              	.LVL97:
 118:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 119:eurorack/plaits/dsp/physical_modelling/string.cc ****   float damping_compensation = Interpolate(lut_svf_shift, damping_cutoff, 1.0f);
 1086              		.loc 6 119 43 view .LVU290
 1087 00e4 F7EE000A 		vmov.f32	s1, #1.0e+0
 1088 00e8 B0EE480A 		vmov.f32	s0, s16
 1089 00ec 5648     		ldr	r0, .L53+32
 1090 00ee FFF7FEFF 		bl	_ZN6stmlib11InterpolateEPKfff
 1091              	.LVL98:
 1092              	.LBB213:
 1093              	.LBI213:
 1094              		.file 8 "eurorack/stmlib/dsp/parameter_interpolator.h"
   1:eurorack/stmlib/dsp/parameter_interpolator.h **** // Copyright 2015 Emilie Gillet.
   2:eurorack/stmlib/dsp/parameter_interpolator.h **** //
   3:eurorack/stmlib/dsp/parameter_interpolator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/parameter_interpolator.h **** //
   5:eurorack/stmlib/dsp/parameter_interpolator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/parameter_interpolator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/parameter_interpolator.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/parameter_interpolator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/parameter_interpolator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/parameter_interpolator.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/parameter_interpolator.h **** // 
  12:eurorack/stmlib/dsp/parameter_interpolator.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/parameter_interpolator.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/parameter_interpolator.h **** // 
  15:eurorack/stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/parameter_interpolator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/parameter_interpolator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/parameter_interpolator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/parameter_interpolator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/parameter_interpolator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/parameter_interpolator.h **** // 
  23:eurorack/stmlib/dsp/parameter_interpolator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/parameter_interpolator.h **** //
  25:eurorack/stmlib/dsp/parameter_interpolator.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/parameter_interpolator.h **** //
  27:eurorack/stmlib/dsp/parameter_interpolator.h **** // Linear interpolation of parameters in rendering loops.
  28:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  29:eurorack/stmlib/dsp/parameter_interpolator.h **** #ifndef STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  30:eurorack/stmlib/dsp/parameter_interpolator.h **** #define STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  31:eurorack/stmlib/dsp/parameter_interpolator.h **** 
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 50


  32:eurorack/stmlib/dsp/parameter_interpolator.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  34:eurorack/stmlib/dsp/parameter_interpolator.h **** namespace stmlib {
  35:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  36:eurorack/stmlib/dsp/parameter_interpolator.h **** class ParameterInterpolator {
  37:eurorack/stmlib/dsp/parameter_interpolator.h ****  public:
  38:eurorack/stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator() { }
  39:eurorack/stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, size_t size) {
 1095              		.loc 8 39 3 is_stmt 1 view .LVU291
 1096              	.LBE213:
  40:eurorack/stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1097              		.loc 8 40 5 view .LVU292
 1098              	.LBB222:
 1099              	.LBB214:
 1100              	.LBI214:
  41:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  42:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  43:eurorack/stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, float step) {
  44:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
  45:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
  46:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) * step;
  47:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  48:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****   ~ParameterInterpolator() {
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
  51:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  52:eurorack/stmlib/dsp/parameter_interpolator.h ****   
  53:eurorack/stmlib/dsp/parameter_interpolator.h ****   inline void Init(float* state, float new_value, size_t size) {
 1101              		.loc 8 53 15 view .LVU293
 1102              	.LBB215:
  54:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1103              		.loc 8 54 5 view .LVU294
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1104              		.loc 8 55 5 view .LVU295
 1105              		.loc 8 55 14 is_stmt 0 view .LVU296
 1106 00f2 94ED0C8A 		vldr.32	s16, [r4, #48]
 1107              	.LVL99:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1108              		.loc 8 56 5 is_stmt 1 view .LVU297
 1109              		.loc 8 56 41 is_stmt 0 view .LVU298
 1110 00f6 07EE905A 		vmov	s15, r5	@ int
 1111              	.LBE215:
 1112              	.LBE214:
 1113              	.LBE222:
 120:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 121:eurorack/plaits/dsp/physical_modelling/string.cc ****   // Linearly interpolate delay time.
 122:eurorack/plaits/dsp/physical_modelling/string.cc ****   ParameterInterpolator delay_modulation(
 123:eurorack/plaits/dsp/physical_modelling/string.cc ****       &delay_, delay * damping_compensation, size);
 124:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 125:eurorack/plaits/dsp/physical_modelling/string.cc ****   float stretch_point = non_linearity_amount * (2.0f - non_linearity_amount) * 0.225f;
 126:eurorack/plaits/dsp/physical_modelling/string.cc ****   float stretch_correction = (160.0f / kSampleRate) * delay;
 127:eurorack/plaits/dsp/physical_modelling/string.cc ****   CONSTRAIN(stretch_correction, 1.0f, 2.1f);
 128:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 129:eurorack/plaits/dsp/physical_modelling/string.cc ****   float noise_amount_sqrt = non_linearity_amount > 0.75f
 130:eurorack/plaits/dsp/physical_modelling/string.cc ****       ? 4.0f * (non_linearity_amount - 0.75f)
 131:eurorack/plaits/dsp/physical_modelling/string.cc ****       : 0.0f;
 132:eurorack/plaits/dsp/physical_modelling/string.cc ****   float noise_amount = noise_amount_sqrt * noise_amount_sqrt * 0.1f;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 51


 133:eurorack/plaits/dsp/physical_modelling/string.cc ****   float noise_filter = 0.06f + 0.94f * brightness * brightness;
 134:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 135:eurorack/plaits/dsp/physical_modelling/string.cc ****   float bridge_curving_sqrt = non_linearity_amount;
 136:eurorack/plaits/dsp/physical_modelling/string.cc ****   float bridge_curving = bridge_curving_sqrt * bridge_curving_sqrt * 0.01f;
 1114              		.loc 6 136 46 view .LVU299
 1115 00fa 6AEEAAAA 		vmul.f32	s21, s21, s21
 1116              	.LVL100:
 1117              	.LBB223:
 1118              	.LBB219:
 1119              	.LBB216:
 1120              		.loc 8 56 29 view .LVU300
 1121 00fe B0EE487A 		vmov.f32	s14, s16
 1122              	.LBE216:
 1123              	.LBE219:
 1124              	.LBE223:
 1125              		.loc 6 136 9 view .LVU301
 1126 0102 DFED520A 		vldr.32	s1, .L53+36
 1127              	.LBB224:
 1128              	.LBB220:
 1129              	.LBB217:
 1130              		.loc 8 56 41 view .LVU302
 1131 0106 F8EE677A 		vcvt.f32.u32	s15, s15
 1132              	.LBE217:
 1133              	.LBE220:
 1134              	.LBE224:
 1135              		.loc 6 136 9 view .LVU303
 1136 010a 6AEEA0AA 		vmul.f32	s21, s21, s1
 1137              	.LBB225:
 1138              	.LBB221:
 1139              	.LBB218:
 1140              		.loc 8 56 29 view .LVU304
 1141 010e 9AEE007A 		vfnms.f32	s14, s20, s0
 1142              		.loc 8 56 39 view .LVU305
 1143 0112 C7EE278A 		vdiv.f32	s17, s14, s15
 1144              	.LVL101:
 1145              	.L43:
 1146              		.loc 8 56 39 view .LVU306
 1147              	.LBE218:
 1148              	.LBE221:
 1149              	.LBE225:
 137:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 138:eurorack/plaits/dsp/physical_modelling/string.cc ****   float ap_gain = -0.618f * non_linearity_amount / (0.15f + fabsf(non_linearity_amount));
 139:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 140:eurorack/plaits/dsp/physical_modelling/string.cc ****   while (size--) {
 1150              		.loc 6 140 3 is_stmt 1 view .LVU307
 1151              		.loc 6 140 3 is_stmt 0 view .LVU308
 1152 0116 002D     		cmp	r5, #0
 1153 0118 7ED0     		beq	.L35
 1154              	.LBB226:
 141:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_phase_ += src_ratio;
 1155              		.loc 6 141 16 view .LVU309
 1156 011a D4ED0F7A 		vldr.32	s15, [r4, #60]
 1157 011e 79EEA77A 		vadd.f32	s15, s19, s15
 1158              	.LBB227:
 142:eurorack/plaits/dsp/physical_modelling/string.cc ****     if (src_phase_ > 1.0f) {
 1159              		.loc 6 142 5 view .LVU310
 1160 0122 F4EEC97A 		vcmpe.f32	s15, s18
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 52


 1161 0126 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1162 012a 17DC     		bgt	.L36
 1163              	.LBE227:
 141:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_phase_ += src_ratio;
 1164              		.loc 6 141 16 view .LVU311
 1165 012c C4ED0F7A 		vstr.32	s15, [r4, #60]
 1166              	.L37:
 143:eurorack/plaits/dsp/physical_modelling/string.cc ****       src_phase_ -= 1.0f;
 144:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 145:eurorack/plaits/dsp/physical_modelling/string.cc ****       float delay = delay_modulation.Next();
 146:eurorack/plaits/dsp/physical_modelling/string.cc ****       float s = 0.0f;
 147:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 148:eurorack/plaits/dsp/physical_modelling/string.cc ****       if (non_linearity == STRING_NON_LINEARITY_DISPERSION) {
 149:eurorack/plaits/dsp/physical_modelling/string.cc ****         float noise = Random::GetFloat() - 0.5f;
 150:eurorack/plaits/dsp/physical_modelling/string.cc ****         ONE_POLE(dispersion_noise_, noise, noise_filter)
 151:eurorack/plaits/dsp/physical_modelling/string.cc ****         delay *= 1.0f + dispersion_noise_ * noise_amount;
 152:eurorack/plaits/dsp/physical_modelling/string.cc ****       } else {
 153:eurorack/plaits/dsp/physical_modelling/string.cc ****         delay *= 1.0f - curved_bridge_ * bridge_curving;
 154:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 155:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 156:eurorack/plaits/dsp/physical_modelling/string.cc ****       if (non_linearity == STRING_NON_LINEARITY_DISPERSION) {
 157:eurorack/plaits/dsp/physical_modelling/string.cc ****         float ap_delay = delay * stretch_point;
 158:eurorack/plaits/dsp/physical_modelling/string.cc ****         float main_delay = delay - ap_delay * (0.408f - stretch_point * 0.308f) * stretch_correctio
 159:eurorack/plaits/dsp/physical_modelling/string.cc ****         if (ap_delay >= 4.0f && main_delay >= 4.0f) {
 160:eurorack/plaits/dsp/physical_modelling/string.cc ****           s = string_.Read(main_delay);
 161:eurorack/plaits/dsp/physical_modelling/string.cc ****           s = stretch_.Allpass(s, ap_delay, ap_gain);
 162:eurorack/plaits/dsp/physical_modelling/string.cc ****         } else {
 163:eurorack/plaits/dsp/physical_modelling/string.cc ****           s = string_.ReadHermite(delay);
 164:eurorack/plaits/dsp/physical_modelling/string.cc ****         }
 165:eurorack/plaits/dsp/physical_modelling/string.cc ****       } else {
 166:eurorack/plaits/dsp/physical_modelling/string.cc ****         s = string_.ReadHermite(delay);
 167:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 168:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 169:eurorack/plaits/dsp/physical_modelling/string.cc ****       if (non_linearity == STRING_NON_LINEARITY_CURVED_BRIDGE) {
 170:eurorack/plaits/dsp/physical_modelling/string.cc ****         float value = fabsf(s) - 0.025f;
 171:eurorack/plaits/dsp/physical_modelling/string.cc ****         float sign = s > 0.0f ? 1.0f : -1.5f;
 172:eurorack/plaits/dsp/physical_modelling/string.cc ****         curved_bridge_ = (fabsf(value) + value) * sign;
 173:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 174:eurorack/plaits/dsp/physical_modelling/string.cc ****     
 175:eurorack/plaits/dsp/physical_modelling/string.cc ****       s += *in;
 176:eurorack/plaits/dsp/physical_modelling/string.cc ****       CONSTRAIN(s, -20.0f, +20.0f);
 177:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 178:eurorack/plaits/dsp/physical_modelling/string.cc ****       dc_blocker_.Process(&s, 1);
 179:eurorack/plaits/dsp/physical_modelling/string.cc ****       s = iir_damping_filter_.Process<FILTER_MODE_LOW_PASS>(s);
 180:eurorack/plaits/dsp/physical_modelling/string.cc ****       string_.Write(s);
 181:eurorack/plaits/dsp/physical_modelling/string.cc **** 
 182:eurorack/plaits/dsp/physical_modelling/string.cc ****       out_sample_[1] = out_sample_[0];
 183:eurorack/plaits/dsp/physical_modelling/string.cc ****       out_sample_[0] = s;
 184:eurorack/plaits/dsp/physical_modelling/string.cc ****     }
 185:eurorack/plaits/dsp/physical_modelling/string.cc ****     *out++ += Crossfade(out_sample_[1], out_sample_[0], src_phase_);
 1167              		.loc 6 185 24 view .LVU312
 1168 0130 D4ED117A 		vldr.32	s15, [r4, #68]
 1169              	.LVL102:
 1170              	.LBB241:
 1171              	.LBI241:
  50:eurorack/stmlib/dsp/dsp.h **** 
  51:eurorack/stmlib/dsp/dsp.h **** 
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 53


  52:eurorack/stmlib/dsp/dsp.h **** inline float InterpolateHermite(const float* table, float index, float size) {
  53:eurorack/stmlib/dsp/dsp.h ****   index *= size;
  54:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  55:eurorack/stmlib/dsp/dsp.h ****   const float xm1 = table[index_integral - 1];
  56:eurorack/stmlib/dsp/dsp.h ****   const float x0 = table[index_integral + 0];
  57:eurorack/stmlib/dsp/dsp.h ****   const float x1 = table[index_integral + 1];
  58:eurorack/stmlib/dsp/dsp.h ****   const float x2 = table[index_integral + 2];
  59:eurorack/stmlib/dsp/dsp.h ****   const float c = (x1 - xm1) * 0.5f;
  60:eurorack/stmlib/dsp/dsp.h ****   const float v = x0 - x1;
  61:eurorack/stmlib/dsp/dsp.h ****   const float w = c + v;
  62:eurorack/stmlib/dsp/dsp.h ****   const float a = w + v + (x2 - x0) * 0.5f;
  63:eurorack/stmlib/dsp/dsp.h ****   const float b_neg = w + a;
  64:eurorack/stmlib/dsp/dsp.h ****   const float f = index_fractional;
  65:eurorack/stmlib/dsp/dsp.h ****   return (((a * f) - b_neg) * f + c) * f + x0;
  66:eurorack/stmlib/dsp/dsp.h **** }
  67:eurorack/stmlib/dsp/dsp.h **** 
  68:eurorack/stmlib/dsp/dsp.h **** inline float InterpolateWrap(const float* table, float index, float size) {
  69:eurorack/stmlib/dsp/dsp.h ****   index -= static_cast<float>(static_cast<int32_t>(index));
  70:eurorack/stmlib/dsp/dsp.h ****   index *= size;
  71:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  72:eurorack/stmlib/dsp/dsp.h ****   float a = table[index_integral];
  73:eurorack/stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
  74:eurorack/stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
  75:eurorack/stmlib/dsp/dsp.h **** }
  76:eurorack/stmlib/dsp/dsp.h **** 
  77:eurorack/stmlib/dsp/dsp.h **** inline float SmoothStep(float value) {
  78:eurorack/stmlib/dsp/dsp.h ****   return value * value * (3.0f - 2.0f * value);
  79:eurorack/stmlib/dsp/dsp.h **** }
  80:eurorack/stmlib/dsp/dsp.h **** 
  81:eurorack/stmlib/dsp/dsp.h **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in) - out);
  82:eurorack/stmlib/dsp/dsp.h **** #define SLOPE(out, in, positive, negative) { \
  83:eurorack/stmlib/dsp/dsp.h ****   float error = (in) - out; \
  84:eurorack/stmlib/dsp/dsp.h ****   out += (error > 0 ? positive : negative) * error; \
  85:eurorack/stmlib/dsp/dsp.h **** }
  86:eurorack/stmlib/dsp/dsp.h **** #define SLEW(out, in, delta) { \
  87:eurorack/stmlib/dsp/dsp.h ****   float error = (in) - out; \
  88:eurorack/stmlib/dsp/dsp.h ****   float d = (delta); \
  89:eurorack/stmlib/dsp/dsp.h ****   if (error > d) { \
  90:eurorack/stmlib/dsp/dsp.h ****     error = d; \
  91:eurorack/stmlib/dsp/dsp.h ****   } else if (error < -d) { \
  92:eurorack/stmlib/dsp/dsp.h ****     error = -d; \
  93:eurorack/stmlib/dsp/dsp.h ****   } \
  94:eurorack/stmlib/dsp/dsp.h ****   out += error; \
  95:eurorack/stmlib/dsp/dsp.h **** }
  96:eurorack/stmlib/dsp/dsp.h **** 
  97:eurorack/stmlib/dsp/dsp.h **** inline float Crossfade(float a, float b, float fade) {
 1172              		.loc 2 97 14 is_stmt 1 view .LVU313
 1173              	.LBB242:
  98:eurorack/stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
 1174              		.loc 2 98 3 view .LVU314
 1175              	.LBE242:
 1176              	.LBE241:
 186:eurorack/plaits/dsp/physical_modelling/string.cc ****     in++;
 1177              		.loc 6 186 5 is_stmt 0 view .LVU315
 1178 0134 0436     		adds	r6, r6, #4
 1179              	.LVL103:
 1180              	.LBB244:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 54


 1181              	.LBB243:
 1182              		.loc 2 98 17 view .LVU316
 1183 0136 94ED107A 		vldr.32	s14, [r4, #64]
 1184 013a 013D     		subs	r5, r5, #1
 1185              	.LVL104:
 1186              		.loc 2 98 24 view .LVU317
 1187 013c D4ED0F6A 		vldr.32	s13, [r4, #60]
 1188              		.loc 2 98 17 view .LVU318
 1189 0140 37EE677A 		vsub.f32	s14, s14, s15
 1190              		.loc 2 98 24 view .LVU319
 1191 0144 E6EE877A 		vfma.f32	s15, s13, s14
 1192              	.LVL105:
 1193              		.loc 2 98 24 view .LVU320
 1194              	.LBE243:
 1195              	.LBE244:
 185:eurorack/plaits/dsp/physical_modelling/string.cc ****     in++;
 1196              		.loc 6 185 12 view .LVU321
 1197 0148 B7EC017A 		vldmia.32	r7!, {s14}
 1198              	.LVL106:
 185:eurorack/plaits/dsp/physical_modelling/string.cc ****     in++;
 1199              		.loc 6 185 12 view .LVU322
 1200 014c 77EE277A 		vadd.f32	s15, s14, s15
 1201 0150 47ED017A 		vstr.32	s15, [r7, #-4]
 1202              	.LBE226:
 140:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_phase_ += src_ratio;
 1203              		.loc 6 140 3 view .LVU323
 1204 0154 DFE7     		b	.L43
 1205              	.LVL107:
 1206              	.L44:
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1207              		.loc 6 91 3 view .LVU324
 1208 0156 B0EE67AA 		vmov.f32	s20, s15
 1209              	.LVL108:
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1210              		.loc 6 91 3 view .LVU325
 1211 015a 74E7     		b	.L27
 1212              	.LVL109:
 1213              	.L36:
 1214              	.LBB246:
 1215              	.LBB245:
 1216              	.LBB228:
 143:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1217              		.loc 6 143 18 view .LVU326
 1218 015c 77EEC97A 		vsub.f32	s15, s15, s18
 146:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1219              		.loc 6 146 13 view .LVU327
 1220 0160 0023     		movs	r3, #0
 1221              	.LBB229:
 153:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1222              		.loc 6 153 23 view .LVU328
 1223 0162 B0EE490A 		vmov.f32	s0, s18
 1224              	.LBE229:
 1225              	.LBB230:
 166:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1226              		.loc 6 166 32 view .LVU329
 1227 0166 2046     		mov	r0, r4
 1228              	.LBE230:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 55


 1229              	.LBB231:
 1230              	.LBB232:
  57:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  58:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****   inline float Next() {
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1231              		.loc 8 60 12 view .LVU330
 1232 0168 38EE288A 		vadd.f32	s16, s16, s17
 1233              	.LVL110:
 1234              		.loc 8 60 12 view .LVU331
 1235              	.LBE232:
 1236              	.LBE231:
 146:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1237              		.loc 6 146 13 view .LVU332
 1238 016c 0193     		str	r3, [sp, #4]	@ float
 143:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1239              		.loc 6 143 18 view .LVU333
 1240 016e C4ED0F7A 		vstr.32	s15, [r4, #60]
 1241              	.LVL111:
 1242              	.LBB234:
 1243              	.LBI231:
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1244              		.loc 8 59 16 is_stmt 1 view .LVU334
 1245              	.LBB233:
 1246              		.loc 8 60 5 view .LVU335
  61:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1247              		.loc 8 61 5 view .LVU336
 1248              		.loc 8 61 5 is_stmt 0 view .LVU337
 1249              	.LBE233:
 1250              	.LBE234:
 1251              	.LBB235:
 153:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1252              		.loc 6 153 23 view .LVU338
 1253 0172 D4ED0E7A 		vldr.32	s15, [r4, #56]
 1254 0176 A7EEEA0A 		vfms.f32	s0, s15, s21
 1255              	.LVL112:
 153:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1256              		.loc 6 153 23 view .LVU339
 1257              	.LBE235:
 1258              	.LBB236:
 166:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1259              		.loc 6 166 32 view .LVU340
 1260 017a 20EE080A 		vmul.f32	s0, s0, s16
 1261              	.LVL113:
 166:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1262              		.loc 6 166 32 view .LVU341
 1263 017e FFF7FEFF 		bl	_ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf
 1264              	.LVL114:
 166:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1265              		.loc 6 166 32 view .LVU342
 1266              	.LBE236:
 1267              	.LBB237:
 170:eurorack/plaits/dsp/physical_modelling/string.cc ****         float sign = s > 0.0f ? 1.0f : -1.5f;
 1268              		.loc 6 170 28 view .LVU343
 1269 0182 F0EEC07A 		vabs.f32	s15, s0
 171:eurorack/plaits/dsp/physical_modelling/string.cc ****         curved_bridge_ = (fabsf(value) + value) * sign;
 1270              		.loc 6 171 31 view .LVU344
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 56


 1271 0186 B5EEC00A 		vcmpe.f32	s0, #0
 170:eurorack/plaits/dsp/physical_modelling/string.cc ****         float sign = s > 0.0f ? 1.0f : -1.5f;
 1272              		.loc 6 170 15 view .LVU345
 1273 018a 9FED317A 		vldr.32	s14, .L53+40
 171:eurorack/plaits/dsp/physical_modelling/string.cc ****         curved_bridge_ = (fabsf(value) + value) * sign;
 1274              		.loc 6 171 31 view .LVU346
 1275 018e FFEE086A 		vmov.f32	s13, #-1.5e+0
 170:eurorack/plaits/dsp/physical_modelling/string.cc ****         float sign = s > 0.0f ? 1.0f : -1.5f;
 1276              		.loc 6 170 15 view .LVU347
 1277 0192 37EEC77A 		vsub.f32	s14, s15, s14
 1278              	.LVL115:
 171:eurorack/plaits/dsp/physical_modelling/string.cc ****         curved_bridge_ = (fabsf(value) + value) * sign;
 1279              		.loc 6 171 31 view .LVU348
 1280 0196 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1281 019a F7EE007A 		vmov.f32	s15, #1.0e+0
 1282 019e 77FEA66A 		vselgt.f32	s13, s15, s13
 1283              	.LVL116:
 172:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1284              		.loc 6 172 32 view .LVU349
 1285 01a2 F0EEC77A 		vabs.f32	s15, s14
 172:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1286              		.loc 6 172 40 view .LVU350
 1287 01a6 77EE877A 		vadd.f32	s15, s15, s14
 172:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1288              		.loc 6 172 49 view .LVU351
 1289 01aa 67EEA67A 		vmul.f32	s15, s15, s13
 172:eurorack/plaits/dsp/physical_modelling/string.cc ****       }
 1290              		.loc 6 172 24 view .LVU352
 1291 01ae C4ED0E7A 		vstr.32	s15, [r4, #56]
 1292              	.LBE237:
 175:eurorack/plaits/dsp/physical_modelling/string.cc ****       CONSTRAIN(s, -20.0f, +20.0f);
 1293              		.loc 6 175 9 view .LVU353
 1294 01b2 D6ED007A 		vldr.32	s15, [r6]
 1295 01b6 30EE270A 		vadd.f32	s0, s0, s15
 176:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1296              		.loc 6 176 7 view .LVU354
 1297 01ba FBEE047A 		vmov.f32	s15, #-2.0e+1
 1298 01be B4EEE70A 		vcmpe.f32	s0, s15
 1299 01c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1300 01c6 1CD5     		bpl	.L52
 176:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1301              		.loc 6 176 7 discriminator 1 view .LVU355
 1302 01c8 CDED017A 		vstr.32	s15, [sp, #4]
 1303              	.L41:
 178:eurorack/plaits/dsp/physical_modelling/string.cc ****       s = iir_damping_filter_.Process<FILTER_MODE_LOW_PASS>(s);
 1304              		.loc 6 178 26 view .LVU356
 1305 01cc 0122     		movs	r2, #1
 1306 01ce 01A9     		add	r1, sp, #4
 1307 01d0 04F12400 		add	r0, r4, #36
 1308 01d4 FFF7FEFF 		bl	_ZN6stmlib9DCBlocker7ProcessEPfj
 1309              	.LVL117:
 179:eurorack/plaits/dsp/physical_modelling/string.cc ****       string_.Write(s);
 1310              		.loc 6 179 60 view .LVU357
 1311 01d8 9DED010A 		vldr.32	s0, [sp, #4]
 1312 01dc 4046     		mov	r0, r8
 1313 01de FFF7FEFF 		bl	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
 1314              	.LVL118:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 57


 1315              	.LBB238:
 1316              	.LBI238:
  54:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     line_[write_ptr_] = sample;
 1317              		.loc 4 54 15 is_stmt 1 view .LVU358
 1318              	.LBB239:
  55:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 1319              		.loc 4 55 23 is_stmt 0 view .LVU359
 1320 01e2 D4E90032 		ldrd	r3, r2, [r4]
 1321 01e6 02EB8302 		add	r2, r2, r3, lsl #2
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 1322              		.loc 4 56 34 view .LVU360
 1323 01ea 03F2FF33 		addw	r3, r3, #1023
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 1324              		.loc 4 56 47 view .LVU361
 1325 01ee C3F30903 		ubfx	r3, r3, #0, #10
  55:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 1326              		.loc 4 55 23 view .LVU362
 1327 01f2 82ED000A 		vstr.32	s0, [r2]
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 1328              		.loc 4 56 16 view .LVU363
 1329 01f6 2360     		str	r3, [r4]
 1330              	.LVL119:
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 1331              		.loc 4 56 16 view .LVU364
 1332              	.LBE239:
 1333              	.LBE238:
 182:eurorack/plaits/dsp/physical_modelling/string.cc ****       out_sample_[0] = s;
 1334              		.loc 6 182 22 view .LVU365
 1335 01f8 236C     		ldr	r3, [r4, #64]	@ float
 183:eurorack/plaits/dsp/physical_modelling/string.cc ****     }
 1336              		.loc 6 183 22 view .LVU366
 1337 01fa 84ED100A 		vstr.32	s0, [r4, #64]
 182:eurorack/plaits/dsp/physical_modelling/string.cc ****       out_sample_[0] = s;
 1338              		.loc 6 182 22 view .LVU367
 1339 01fe 6364     		str	r3, [r4, #68]	@ float
 1340              	.LBE228:
 1341 0200 96E7     		b	.L37
 1342              	.LVL120:
 1343              	.L52:
 1344              	.LBB240:
 176:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1345              		.loc 6 176 7 discriminator 2 view .LVU368
 1346 0202 F3EE047A 		vmov.f32	s15, #2.0e+1
 175:eurorack/plaits/dsp/physical_modelling/string.cc ****       CONSTRAIN(s, -20.0f, +20.0f);
 1347              		.loc 6 175 9 discriminator 2 view .LVU369
 1348 0206 B4EEE70A 		vcmpe.f32	s0, s15
 1349 020a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1350 020e 37FE800A 		vselgt.f32	s0, s15, s0
 1351 0212 8DED010A 		vstr.32	s0, [sp, #4]
 1352 0216 D9E7     		b	.L41
 1353              	.LVL121:
 1354              	.L35:
 175:eurorack/plaits/dsp/physical_modelling/string.cc ****       CONSTRAIN(s, -20.0f, +20.0f);
 1355              		.loc 6 175 9 discriminator 2 view .LVU370
 1356              	.LBE240:
 1357              	.LBE245:
 1358              	.LBE246:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 58


 1359              	.LBB247:
 1360              	.LBI247:
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1361              		.loc 8 49 3 is_stmt 1 view .LVU371
 1362              	.LBB248:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1363              		.loc 8 50 5 view .LVU372
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1364              		.loc 8 50 13 is_stmt 0 view .LVU373
 1365 0218 84ED0C8A 		vstr.32	s16, [r4, #48]
 1366              	.LVL122:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1367              		.loc 8 50 13 view .LVU374
 1368              	.LBE248:
 1369              	.LBE247:
 187:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 188:eurorack/plaits/dsp/physical_modelling/string.cc **** }
 1370              		.loc 6 188 1 view .LVU375
 1371 021c 02B0     		add	sp, sp, #8
 1372              		.cfi_def_cfa_offset 56
 1373              		@ sp needed
 1374 021e BDEC088B 		vldm	sp!, {d8-d11}
 1375              		.cfi_restore 86
 1376              		.cfi_restore 87
 1377              		.cfi_restore 84
 1378              		.cfi_restore 85
 1379              		.cfi_restore 82
 1380              		.cfi_restore 83
 1381              		.cfi_restore 80
 1382              		.cfi_restore 81
 1383              		.cfi_def_cfa_offset 24
 1384              	.LVL123:
 1385              		.loc 6 188 1 view .LVU376
 1386 0222 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1387              	.LVL124:
 1388              	.L54:
 1389              		.loc 6 188 1 view .LVU377
 1390 0226 00BF     		.align	2
 1391              	.L53:
 1392 0228 00007F44 		.word	1149173760
 1393 022c 72F97F3F 		.word	1065351538
 1394 0230 00007042 		.word	1114636288
 1395 0234 0000A842 		.word	1118306304
 1396 0238 EE7CFF3E 		.word	1056931054
 1397 023c 3333733F 		.word	1064514355
 1398 0240 E5F2FF3E 		.word	1056961253
 1399 0244 00000043 		.word	1124073472
 1400 0248 00000000 		.word	_ZN6plaits13lut_svf_shiftE
 1401 024c 0AD7233C 		.word	1008981770
 1402 0250 CDCCCC3C 		.word	1020054733
 1403              		.cfi_endproc
 1404              	.LFE1590:
 1406              		.section	.text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj,"axG",%
 1407              		.align	1
 1408              		.weak	_ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj
 1409              		.syntax unified
 1410              		.thumb
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 59


 1411              		.thumb_func
 1413              	_ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj:
 1414              	.LVL125:
 1415              	.LFB1591:
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 1416              		.loc 6 82 6 is_stmt 1 view -0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 8
 1419              		@ frame_needed = 0, uses_anonymous_args = 0
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 1420              		.loc 6 82 6 is_stmt 0 view .LVU379
 1421 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1422              		.cfi_def_cfa_offset 24
 1423              		.cfi_offset 4, -24
 1424              		.cfi_offset 5, -20
 1425              		.cfi_offset 6, -16
 1426              		.cfi_offset 7, -12
 1427              		.cfi_offset 8, -8
 1428              		.cfi_offset 14, -4
 1429 0004 2DED0C8B 		vpush.64	{d8, d9, d10, d11, d12, d13}
 1430              		.cfi_def_cfa_offset 72
 1431              		.cfi_offset 80, -72
 1432              		.cfi_offset 81, -68
 1433              		.cfi_offset 82, -64
 1434              		.cfi_offset 83, -60
 1435              		.cfi_offset 84, -56
 1436              		.cfi_offset 85, -52
 1437              		.cfi_offset 86, -48
 1438              		.cfi_offset 87, -44
 1439              		.cfi_offset 88, -40
 1440              		.cfi_offset 89, -36
 1441              		.cfi_offset 90, -32
 1442              		.cfi_offset 91, -28
  90:eurorack/plaits/dsp/physical_modelling/string.cc ****   CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 1443              		.loc 6 90 9 view .LVU380
 1444 0008 F7EE00CA 		vmov.f32	s25, #1.0e+0
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 1445              		.loc 6 82 6 view .LVU381
 1446 000c 82B0     		sub	sp, sp, #8
 1447              		.cfi_def_cfa_offset 80
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1448              		.loc 6 91 3 view .LVU382
 1449 000e F1EE009A 		vmov.f32	s19, #4.0e+0
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 1450              		.loc 6 82 6 view .LVU383
 1451 0012 0446     		mov	r4, r0
 1452 0014 F0EE40BA 		vmov.f32	s23, s0
 1453 0018 0E46     		mov	r6, r1
  90:eurorack/plaits/dsp/physical_modelling/string.cc ****   CONSTRAIN(delay, 4.0f, kDelayLineSize - 4.0f);
 1454              		.loc 6 90 9 view .LVU384
 1455 001a 8CEE80BA 		vdiv.f32	s22, s25, s0
 1456              	.LVL126:
  82:eurorack/plaits/dsp/physical_modelling/string.cc ****     float f0,
 1457              		.loc 6 82 6 view .LVU385
 1458 001e 1746     		mov	r7, r2
 1459 0020 1D46     		mov	r5, r3
 1460 0022 B0EE608A 		vmov.f32	s16, s1
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 60


 1461 0026 F0EE41AA 		vmov.f32	s21, s2
 1462 002a B0EE619A 		vmov.f32	s18, s3
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1463              		.loc 6 91 3 view .LVU386
 1464 002e B4EEE9BA 		vcmpe.f32	s22, s19
 1465 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1466 0036 00F1D180 		bmi	.L80
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1467              		.loc 6 91 3 discriminator 2 view .LVU387
 1468 003a DFEDC87A 		vldr.32	s15, .L95
 1469 003e B4EE67BA 		vcmp.f32	s22, s15
 1470 0042 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1471 0046 37FE8BBA 		vselgt.f32	s22, s15, s22
 1472              	.LVL127:
 1473              	.L56:
  96:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (src_ratio >= 0.9999f) {
 1474              		.loc 6 96 9 view .LVU388
 1475 004a 2BEE2BAA 		vmul.f32	s20, s22, s23
 1476              	.LVL128:
  97:eurorack/plaits/dsp/physical_modelling/string.cc ****     // When we are above 11.7 Hz, we make sure that the linear interpolator
 1477              		.loc 6 97 3 view .LVU389
 1478 004e DFEDC47A 		vldr.32	s15, .L95+4
 105:eurorack/plaits/dsp/physical_modelling/string.cc ****       84.0f);
 1479              		.loc 6 105 23 view .LVU390
 1480 0052 29EE097A 		vmul.f32	s14, s18, s18
 105:eurorack/plaits/dsp/physical_modelling/string.cc ****       84.0f);
 1481              		.loc 6 105 13 view .LVU391
 1482 0056 F2EE088A 		vmov.f32	s17, #1.2e+1
  97:eurorack/plaits/dsp/physical_modelling/string.cc ****     // When we are above 11.7 Hz, we make sure that the linear interpolator
 1483              		.loc 6 97 3 view .LVU392
 1484 005a B4EEE7AA 		vcmpe.f32	s20, s15
 105:eurorack/plaits/dsp/physical_modelling/string.cc ****       84.0f);
 1485              		.loc 6 105 13 view .LVU393
 1486 005e DFEDC17A 		vldr.32	s15, .L95+8
 1487 0062 E7EE278A 		vfma.f32	s17, s14, s15
 105:eurorack/plaits/dsp/physical_modelling/string.cc ****       84.0f);
 1488              		.loc 6 105 41 view .LVU394
 1489 0066 F3EE087A 		vmov.f32	s15, #2.4e+1
  97:eurorack/plaits/dsp/physical_modelling/string.cc ****     // When we are above 11.7 Hz, we make sure that the linear interpolator
 1490              		.loc 6 97 3 view .LVU395
 1491 006a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 100:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_ratio = 1.0f;
 1492              		.loc 6 100 16 view .LVU396
 1493 006e A4BF     		itt	ge
 1494 0070 C4ED0FCA 		vstrge.32	s25, [r4, #60]
 1495              	.LVL129:
 101:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 1496              		.loc 6 101 15 view .LVU397
 1497 0074 B7EE00AA 		vmovge.f32	s20, #1.0e+0
 1498              	.LVL130:
 105:eurorack/plaits/dsp/physical_modelling/string.cc ****       84.0f);
 1499              		.loc 6 105 41 view .LVU398
 1500 0078 EAEEA78A 		vfma.f32	s17, s21, s15
 1501              	.LVL131:
 1502              	.LBB283:
 1503              	.LBI283:
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 61


 1504              		.loc 5 230 5 is_stmt 1 view .LVU399
 1505              	.LBB284:
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1506              		.loc 5 235 7 is_stmt 0 view .LVU400
 1507 007c DFEDBA7A 		vldr.32	s15, .L95+12
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1508              		.loc 5 236 9 view .LVU401
 1509 0080 F4EE678A 		vcmp.f32	s17, s15
 1510 0084 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1511 0088 77FEA88A 		vselgt.f32	s17, s15, s17
 1512              	.LVL132:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1513              		.loc 5 236 9 view .LVU402
 1514              	.LBE284:
 1515              	.LBE283:
 107:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1516              		.loc 6 107 46 view .LVU403
 1517 008c B0EE680A 		vmov.f32	s0, s17
 1518              	.LVL133:
 107:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1519              		.loc 6 107 46 view .LVU404
 1520 0090 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 1521              	.LVL134:
 107:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1522              		.loc 6 107 28 view .LVU405
 1523 0094 20EE2B0A 		vmul.f32	s0, s0, s23
 1524              	.LVL135:
 1525              	.LBB285:
 1526              	.LBI285:
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1527              		.loc 5 230 5 is_stmt 1 view .LVU406
 1528              	.LBB286:
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1529              		.loc 5 235 7 is_stmt 0 view .LVU407
 1530 0098 DFEDB47A 		vldr.32	s15, .L95+16
 1531              	.LBE286:
 1532              	.LBE285:
 1533              	.LBB289:
 110:eurorack/plaits/dsp/physical_modelling/string.cc ****     float to_infinite = 20.0f * (damping - 0.95f);
 1534              		.loc 6 110 3 view .LVU408
 1535 009c DFEDB41A 		vldr.32	s3, .L95+20
 1536              	.LBE289:
 1537              	.LBB291:
 1538              	.LBB287:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1539              		.loc 5 236 9 view .LVU409
 1540 00a0 B4EE670A 		vcmp.f32	s0, s15
 1541 00a4 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1542              	.LBE287:
 1543              	.LBE291:
 1544              	.LBB292:
 110:eurorack/plaits/dsp/physical_modelling/string.cc ****     float to_infinite = 20.0f * (damping - 0.95f);
 1545              		.loc 6 110 3 view .LVU410
 1546 00a8 B4EEE19A 		vcmpe.f32	s18, s3
 1547              	.LBE292:
 1548              	.LBB293:
 1549              	.LBB288:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 62


 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1550              		.loc 5 236 9 view .LVU411
 1551 00ac 37FE800A 		vselgt.f32	s0, s15, s0
 1552              	.LVL136:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 1553              		.loc 5 236 9 view .LVU412
 1554              	.LBE288:
 1555              	.LBE293:
 1556              	.LBB294:
 110:eurorack/plaits/dsp/physical_modelling/string.cc ****     float to_infinite = 20.0f * (damping - 0.95f);
 1557              		.loc 6 110 3 view .LVU413
 1558 00b0 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1559 00b4 15DB     		blt	.L62
 1560              	.LBB290:
 111:eurorack/plaits/dsp/physical_modelling/string.cc ****     brightness += to_infinite * (1.0f - brightness);
 1561              		.loc 6 111 42 view .LVU414
 1562 00b6 39EE619A 		vsub.f32	s18, s18, s3
 1563              	.LVL137:
 111:eurorack/plaits/dsp/physical_modelling/string.cc ****     brightness += to_infinite * (1.0f - brightness);
 1564              		.loc 6 111 11 view .LVU415
 1565 00ba F3EE041A 		vmov.f32	s3, #2.0e+1
 112:eurorack/plaits/dsp/physical_modelling/string.cc ****     damping_f += to_infinite * (0.4999f - damping_f);
 1566              		.loc 6 112 39 view .LVU416
 1567 00be 7CEEEA7A 		vsub.f32	s15, s25, s21
 111:eurorack/plaits/dsp/physical_modelling/string.cc ****     brightness += to_infinite * (1.0f - brightness);
 1568              		.loc 6 111 11 view .LVU417
 1569 00c2 29EE219A 		vmul.f32	s18, s18, s3
 1570              	.LVL138:
 112:eurorack/plaits/dsp/physical_modelling/string.cc ****     damping_f += to_infinite * (0.4999f - damping_f);
 1571              		.loc 6 112 16 view .LVU418
 1572 00c6 E7EE89AA 		vfma.f32	s21, s15, s18
 1573              	.LVL139:
 113:eurorack/plaits/dsp/physical_modelling/string.cc ****     damping_cutoff += to_infinite * (128.0f - damping_cutoff);
 1574              		.loc 6 113 41 view .LVU419
 1575 00ca DFEDAA7A 		vldr.32	s15, .L95+24
 1576 00ce 77EEC07A 		vsub.f32	s15, s15, s0
 113:eurorack/plaits/dsp/physical_modelling/string.cc ****     damping_cutoff += to_infinite * (128.0f - damping_cutoff);
 1577              		.loc 6 113 15 view .LVU420
 1578 00d2 A7EE890A 		vfma.f32	s0, s15, s18
 1579              	.LVL140:
 114:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 1580              		.loc 6 114 45 view .LVU421
 1581 00d6 DFEDA87A 		vldr.32	s15, .L95+28
 1582 00da 77EEE87A 		vsub.f32	s15, s15, s17
 114:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 1583              		.loc 6 114 20 view .LVU422
 1584 00de E7EE898A 		vfma.f32	s17, s15, s18
 1585              	.LVL141:
 1586              	.L62:
 114:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 1587              		.loc 6 114 20 view .LVU423
 1588              	.LBE290:
 1589              	.LBE294:
 117:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1590              		.loc 6 117 46 view .LVU424
 1591 00e2 04F11008 		add	r8, r4, #16
 1592 00e6 F6EE000A 		vmov.f32	s1, #5.0e-1
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 63


 1593 00ea 4046     		mov	r0, r8
 1594 00ec FFF7FEFF 		bl	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff
 1595              	.LVL142:
 119:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1596              		.loc 6 119 43 view .LVU425
 1597 00f0 B0EE680A 		vmov.f32	s0, s17
 1598 00f4 F7EE000A 		vmov.f32	s1, #1.0e+0
 1599 00f8 A048     		ldr	r0, .L95+32
 1600 00fa FFF7FEFF 		bl	_ZN6stmlib11InterpolateEPKfff
 1601              	.LVL143:
 1602              	.LBB295:
 1603              	.LBI295:
  39:eurorack/stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1604              		.loc 8 39 3 is_stmt 1 view .LVU426
 1605              	.LBE295:
  40:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1606              		.loc 8 40 5 view .LVU427
 1607              	.LBB304:
 1608              	.LBB296:
 1609              	.LBI296:
  53:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1610              		.loc 8 53 15 view .LVU428
 1611              	.LBB297:
  54:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1612              		.loc 8 54 5 view .LVU429
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1613              		.loc 8 55 5 view .LVU430
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1614              		.loc 8 55 14 is_stmt 0 view .LVU431
 1615 00fe 94ED0CDA 		vldr.32	s26, [r4, #48]
 1616              	.LVL144:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1617              		.loc 8 56 5 is_stmt 1 view .LVU432
 1618              	.LBE297:
 1619              	.LBE296:
 1620              	.LBE304:
 125:eurorack/plaits/dsp/physical_modelling/string.cc ****   float stretch_correction = (160.0f / kSampleRate) * delay;
 1621              		.loc 6 125 54 is_stmt 0 view .LVU433
 1622 0102 F0EE008A 		vmov.f32	s17, #2.0e+0
 1623              	.LVL145:
 1624              	.LBB305:
 1625              	.LBB301:
 1626              	.LBB298:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1627              		.loc 8 56 41 view .LVU434
 1628 0106 07EE905A 		vmov	s15, r5	@ int
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1629              		.loc 8 56 29 view .LVU435
 1630 010a B0EE4D7A 		vmov.f32	s14, s26
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1631              		.loc 8 56 41 view .LVU436
 1632 010e F8EE677A 		vcvt.f32.u32	s15, s15
 1633              	.LBE298:
 1634              	.LBE301:
 1635              	.LBE305:
 125:eurorack/plaits/dsp/physical_modelling/string.cc ****   float stretch_correction = (160.0f / kSampleRate) * delay;
 1636              		.loc 6 125 54 view .LVU437
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 64


 1637 0112 78EEC88A 		vsub.f32	s17, s17, s16
 1638              	.LBB306:
 1639              	.LBB302:
 1640              	.LBB299:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1641              		.loc 8 56 29 view .LVU438
 1642 0116 9BEE007A 		vfnms.f32	s14, s22, s0
 1643              	.LBE299:
 1644              	.LBE302:
 1645              	.LBE306:
 125:eurorack/plaits/dsp/physical_modelling/string.cc ****   float stretch_correction = (160.0f / kSampleRate) * delay;
 1646              		.loc 6 125 46 view .LVU439
 1647 011a 68EE888A 		vmul.f32	s17, s17, s16
 1648              	.LBB307:
 1649              	.LBB303:
 1650              	.LBB300:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1651              		.loc 8 56 39 view .LVU440
 1652 011e 87EE279A 		vdiv.f32	s18, s14, s15
 1653              	.LVL146:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1654              		.loc 8 56 39 view .LVU441
 1655              	.LBE300:
 1656              	.LBE303:
 1657              	.LBE307:
 125:eurorack/plaits/dsp/physical_modelling/string.cc ****   float stretch_correction = (160.0f / kSampleRate) * delay;
 1658              		.loc 6 125 9 view .LVU442
 1659 0122 DFED977A 		vldr.32	s15, .L95+36
 1660 0126 68EEA78A 		vmul.f32	s17, s17, s15
 1661              	.LVL147:
 126:eurorack/plaits/dsp/physical_modelling/string.cc ****   CONSTRAIN(stretch_correction, 1.0f, 2.1f);
 1662              		.loc 6 126 9 view .LVU443
 1663 012a DFED967A 		vldr.32	s15, .L95+40
 1664 012e 2BEE27BA 		vmul.f32	s22, s22, s15
 1665              	.LVL148:
 127:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1666              		.loc 6 127 3 view .LVU444
 1667 0132 B4EEECBA 		vcmpe.f32	s22, s25
 1668 0136 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1669 013a 52D4     		bmi	.L83
 127:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1670              		.loc 6 127 3 discriminator 2 view .LVU445
 1671 013c DFED927A 		vldr.32	s15, .L95+44
 1672 0140 B4EE67BA 		vcmp.f32	s22, s15
 1673 0144 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1674 0148 37FE8BBA 		vselgt.f32	s22, s15, s22
 1675              	.LVL149:
 1676              	.L64:
 130:eurorack/plaits/dsp/physical_modelling/string.cc ****       : 0.0f;
 1677              		.loc 6 130 7 view .LVU446
 1678 014c F6EE087A 		vmov.f32	s15, #7.5e-1
 132:eurorack/plaits/dsp/physical_modelling/string.cc ****   float noise_filter = 0.06f + 0.94f * brightness * brightness;
 1679              		.loc 6 132 9 view .LVU447
 1680 0150 DFED8EBA 		vldr.32	s23, .L95+48
 1681              	.LVL150:
 133:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1682              		.loc 6 133 9 view .LVU448
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 65


 1683 0154 9FED8ECA 		vldr.32	s24, .L95+52
 138:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1684              		.loc 6 138 59 view .LVU449
 1685 0158 DFED8E0A 		vldr.32	s1, .L95+56
 130:eurorack/plaits/dsp/physical_modelling/string.cc ****       : 0.0f;
 1686              		.loc 6 130 7 view .LVU450
 1687 015c B4EEE78A 		vcmpe.f32	s16, s15
 1688 0160 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 130:eurorack/plaits/dsp/physical_modelling/string.cc ****       : 0.0f;
 1689              		.loc 6 130 38 view .LVU451
 1690 0164 CABF     		itet	gt
 1691 0166 78EE677A 		vsubgt.f32	s15, s16, s15
 130:eurorack/plaits/dsp/physical_modelling/string.cc ****       : 0.0f;
 1692              		.loc 6 130 7 view .LVU452
 1693 016a DFED8B7A 		vldrle.32	s15, .L95+60
 1694 016e 67EEA97A 		vmulgt.f32	s15, s15, s19
 1695              	.LVL151:
 132:eurorack/plaits/dsp/physical_modelling/string.cc ****   float noise_filter = 0.06f + 0.94f * brightness * brightness;
 1696              		.loc 6 132 42 view .LVU453
 1697 0172 67EEA77A 		vmul.f32	s15, s15, s15
 1698              	.LVL152:
 132:eurorack/plaits/dsp/physical_modelling/string.cc ****   float noise_filter = 0.06f + 0.94f * brightness * brightness;
 1699              		.loc 6 132 9 view .LVU454
 1700 0176 67EEABBA 		vmul.f32	s23, s15, s23
 1701              	.LVL153:
 133:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1702              		.loc 6 133 38 view .LVU455
 1703 017a DFED887A 		vldr.32	s15, .L95+64
 1704 017e 6AEEA77A 		vmul.f32	s15, s21, s15
 133:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1705              		.loc 6 133 9 view .LVU456
 1706 0182 A7EEAACA 		vfma.f32	s24, s15, s21
 1707              	.LVL154:
 138:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1708              		.loc 6 138 27 view .LVU457
 1709 0186 DFED867A 		vldr.32	s15, .L95+68
 1710 018a 68EE277A 		vmul.f32	s15, s16, s15
 138:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1711              		.loc 6 138 66 view .LVU458
 1712 018e B0EEC88A 		vabs.f32	s16, s16
 1713              	.LVL155:
 138:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1714              		.loc 6 138 59 view .LVU459
 1715 0192 38EE208A 		vadd.f32	s16, s16, s1
 138:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1716              		.loc 6 138 9 view .LVU460
 1717 0196 C7EE88AA 		vdiv.f32	s21, s15, s16
 1718              	.LVL156:
 1719              	.L79:
 140:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_phase_ += src_ratio;
 1720              		.loc 6 140 3 is_stmt 1 view .LVU461
 140:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_phase_ += src_ratio;
 1721              		.loc 6 140 3 is_stmt 0 view .LVU462
 1722 019a 002D     		cmp	r5, #0
 1723 019c 00F0D780 		beq	.L68
 1724              	.LBB308:
 141:eurorack/plaits/dsp/physical_modelling/string.cc ****     if (src_phase_ > 1.0f) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 66


 1725              		.loc 6 141 16 view .LVU463
 1726 01a0 D4ED0F7A 		vldr.32	s15, [r4, #60]
 1727 01a4 7AEE277A 		vadd.f32	s15, s20, s15
 1728              	.LBB309:
 142:eurorack/plaits/dsp/physical_modelling/string.cc ****       src_phase_ -= 1.0f;
 1729              		.loc 6 142 5 view .LVU464
 1730 01a8 F4EEEC7A 		vcmpe.f32	s15, s25
 1731 01ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1732 01b0 1ADC     		bgt	.L69
 1733              	.LBE309:
 141:eurorack/plaits/dsp/physical_modelling/string.cc ****     if (src_phase_ > 1.0f) {
 1734              		.loc 6 141 16 view .LVU465
 1735 01b2 C4ED0F7A 		vstr.32	s15, [r4, #60]
 1736              	.L70:
 185:eurorack/plaits/dsp/physical_modelling/string.cc ****     in++;
 1737              		.loc 6 185 24 view .LVU466
 1738 01b6 D4ED117A 		vldr.32	s15, [r4, #68]
 1739              	.LVL157:
 1740              	.LBB368:
 1741              	.LBI368:
  97:eurorack/stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
 1742              		.loc 2 97 14 is_stmt 1 view .LVU467
 1743              	.LBB369:
 1744              		.loc 2 98 3 view .LVU468
 1745              	.LBE369:
 1746              	.LBE368:
 186:eurorack/plaits/dsp/physical_modelling/string.cc ****   }
 1747              		.loc 6 186 5 is_stmt 0 view .LVU469
 1748 01ba 0436     		adds	r6, r6, #4
 1749              	.LVL158:
 1750              	.LBB371:
 1751              	.LBB370:
 1752              		.loc 2 98 17 view .LVU470
 1753 01bc 94ED107A 		vldr.32	s14, [r4, #64]
 1754 01c0 013D     		subs	r5, r5, #1
 1755              	.LVL159:
 1756              		.loc 2 98 24 view .LVU471
 1757 01c2 D4ED0F6A 		vldr.32	s13, [r4, #60]
 1758              		.loc 2 98 17 view .LVU472
 1759 01c6 37EE677A 		vsub.f32	s14, s14, s15
 1760              		.loc 2 98 24 view .LVU473
 1761 01ca E6EE877A 		vfma.f32	s15, s13, s14
 1762              	.LVL160:
 1763              		.loc 2 98 24 view .LVU474
 1764              	.LBE370:
 1765              	.LBE371:
 185:eurorack/plaits/dsp/physical_modelling/string.cc ****     in++;
 1766              		.loc 6 185 12 view .LVU475
 1767 01ce B7EC017A 		vldmia.32	r7!, {s14}
 1768              	.LVL161:
 185:eurorack/plaits/dsp/physical_modelling/string.cc ****     in++;
 1769              		.loc 6 185 12 view .LVU476
 1770 01d2 77EE277A 		vadd.f32	s15, s14, s15
 1771 01d6 47ED017A 		vstr.32	s15, [r7, #-4]
 1772              	.LBE308:
 140:eurorack/plaits/dsp/physical_modelling/string.cc ****     src_phase_ += src_ratio;
 1773              		.loc 6 140 3 view .LVU477
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 67


 1774 01da DEE7     		b	.L79
 1775              	.LVL162:
 1776              	.L80:
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1777              		.loc 6 91 3 view .LVU478
 1778 01dc B0EE69BA 		vmov.f32	s22, s19
 1779              	.LVL163:
  91:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1780              		.loc 6 91 3 view .LVU479
 1781 01e0 33E7     		b	.L56
 1782              	.LVL164:
 1783              	.L83:
 127:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1784              		.loc 6 127 3 view .LVU480
 1785 01e2 B7EE00BA 		vmov.f32	s22, #1.0e+0
 1786              	.LVL165:
 127:eurorack/plaits/dsp/physical_modelling/string.cc ****   
 1787              		.loc 6 127 3 view .LVU481
 1788 01e6 B1E7     		b	.L64
 1789              	.LVL166:
 1790              	.L69:
 1791              	.LBB374:
 1792              	.LBB372:
 1793              	.LBB310:
 146:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1794              		.loc 6 146 13 view .LVU482
 1795 01e8 0023     		movs	r3, #0
 1796              	.LBB311:
 1797              	.LBB312:
 1798              	.LBB313:
 1799              	.LBB314:
 1800              	.LBB315:
 1801              		.file 9 "eurorack/stmlib/utils/random.h"
   1:eurorack/stmlib/utils/random.h **** // Copyright 2012 Emilie Gillet.
   2:eurorack/stmlib/utils/random.h **** //
   3:eurorack/stmlib/utils/random.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/utils/random.h **** //
   5:eurorack/stmlib/utils/random.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/utils/random.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/utils/random.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/utils/random.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/utils/random.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/utils/random.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/utils/random.h **** // 
  12:eurorack/stmlib/utils/random.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/utils/random.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/utils/random.h **** // 
  15:eurorack/stmlib/utils/random.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/utils/random.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/utils/random.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/utils/random.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/utils/random.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/utils/random.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/utils/random.h **** // THE SOFTWARE.
  22:eurorack/stmlib/utils/random.h **** // 
  23:eurorack/stmlib/utils/random.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/utils/random.h **** //
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 68


  25:eurorack/stmlib/utils/random.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/utils/random.h **** //
  27:eurorack/stmlib/utils/random.h **** // Fast 16-bit pseudo random number generator.
  28:eurorack/stmlib/utils/random.h **** 
  29:eurorack/stmlib/utils/random.h **** #ifndef STMLIB_UTILS_RANDOM_H_
  30:eurorack/stmlib/utils/random.h **** #define STMLIB_UTILS_RANDOM_H_
  31:eurorack/stmlib/utils/random.h **** 
  32:eurorack/stmlib/utils/random.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/utils/random.h **** 
  34:eurorack/stmlib/utils/random.h **** namespace stmlib {
  35:eurorack/stmlib/utils/random.h **** 
  36:eurorack/stmlib/utils/random.h **** class Random {
  37:eurorack/stmlib/utils/random.h ****  public:
  38:eurorack/stmlib/utils/random.h ****   static inline uint32_t state() { return rng_state_; }
  39:eurorack/stmlib/utils/random.h **** 
  40:eurorack/stmlib/utils/random.h ****   static inline void Seed(uint32_t seed) {
  41:eurorack/stmlib/utils/random.h ****     rng_state_ = seed;
  42:eurorack/stmlib/utils/random.h ****   }
  43:eurorack/stmlib/utils/random.h **** 
  44:eurorack/stmlib/utils/random.h ****   static inline uint32_t GetWord() {
  45:eurorack/stmlib/utils/random.h ****     rng_state_ = rng_state_ * 1664525L + 1013904223L;
 1802              		.loc 9 45 29 view .LVU483
 1803 01ea 6E4A     		ldr	r2, .L95+72
 1804              		.loc 9 45 40 view .LVU484
 1805 01ec 6E48     		ldr	r0, .L95+76
 1806              	.LBE315:
 1807              	.LBE314:
 1808              	.LBE313:
 1809              	.LBE312:
 1810              	.LBE311:
 143:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1811              		.loc 6 143 18 view .LVU485
 1812 01ee 77EEEC7A 		vsub.f32	s15, s15, s25
 1813              	.LBB334:
 1814              	.LBB329:
 1815              	.LBB324:
 1816              	.LBB320:
 1817              	.LBB316:
 1818              		.loc 9 45 29 view .LVU486
 1819 01f2 1168     		ldr	r1, [r2]
 1820              	.LBE316:
 1821              	.LBE320:
 1822              	.LBE324:
 1823              	.LBE329:
 149:eurorack/plaits/dsp/physical_modelling/string.cc ****         ONE_POLE(dispersion_noise_, noise, noise_filter)
 1824              		.loc 6 149 15 view .LVU487
 1825 01f4 BEEE007A 		vmov.f32	s14, #-5.0e-1
 1826              	.LBE334:
 146:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1827              		.loc 6 146 13 view .LVU488
 1828 01f8 0193     		str	r3, [sp, #4]	@ float
 1829              	.LBB335:
 151:eurorack/plaits/dsp/physical_modelling/string.cc ****       } else {
 1830              		.loc 6 151 23 view .LVU489
 1831 01fa B0EE6C0A 		vmov.f32	s0, s25
 1832              	.LBB330:
 1833              	.LBB325:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 69


 1834              	.LBB321:
 1835              	.LBB317:
 1836              		.loc 9 45 40 view .LVU490
 1837 01fe 6B4B     		ldr	r3, .L95+80
 1838              	.LBE317:
 1839              	.LBE321:
 1840              	.LBE325:
 1841              	.LBE330:
 1842              	.LBE335:
 1843              	.LBB336:
 1844              	.LBB337:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1845              		.loc 8 60 12 view .LVU491
 1846 0200 3DEE09DA 		vadd.f32	s26, s26, s18
 1847              	.LVL167:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1848              		.loc 8 60 12 view .LVU492
 1849              	.LBE337:
 1850              	.LBE336:
 143:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 1851              		.loc 6 143 18 view .LVU493
 1852 0204 C4ED0F7A 		vstr.32	s15, [r4, #60]
 1853              	.LVL168:
 1854              	.LBB339:
 1855              	.LBI336:
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1856              		.loc 8 59 16 is_stmt 1 view .LVU494
 1857              	.LBB338:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1858              		.loc 8 60 5 view .LVU495
 1859              		.loc 8 61 5 view .LVU496
 1860              		.loc 8 61 5 is_stmt 0 view .LVU497
 1861              	.LBE338:
 1862              	.LBE339:
 1863              	.LBB340:
 1864              	.LBB331:
 1865              	.LBI312:
  46:eurorack/stmlib/utils/random.h ****     return state();
  47:eurorack/stmlib/utils/random.h ****   }
  48:eurorack/stmlib/utils/random.h ****   
  49:eurorack/stmlib/utils/random.h ****   static inline int16_t GetSample() {
  50:eurorack/stmlib/utils/random.h ****     return static_cast<int16_t>(GetWord() >> 16);
  51:eurorack/stmlib/utils/random.h ****   }
  52:eurorack/stmlib/utils/random.h **** 
  53:eurorack/stmlib/utils/random.h ****   static inline float GetFloat() {
 1866              		.loc 9 53 23 is_stmt 1 view .LVU498
 1867              	.LBB326:
  54:eurorack/stmlib/utils/random.h ****     return static_cast<float>(GetWord()) / 4294967296.0f;
 1868              		.loc 9 54 5 view .LVU499
 1869              	.LBB322:
 1870              	.LBI314:
  44:eurorack/stmlib/utils/random.h ****     rng_state_ = rng_state_ * 1664525L + 1013904223L;
 1871              		.loc 9 44 26 view .LVU500
 1872              	.LBB318:
  45:eurorack/stmlib/utils/random.h ****     return state();
 1873              		.loc 9 45 5 view .LVU501
  45:eurorack/stmlib/utils/random.h ****     return state();
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 70


 1874              		.loc 9 45 40 is_stmt 0 view .LVU502
 1875 0208 00FB0133 		mla	r3, r0, r1, r3
 1876              	.LBE318:
 1877              	.LBE322:
 1878              	.LBE326:
 1879              	.LBE331:
 149:eurorack/plaits/dsp/physical_modelling/string.cc ****         ONE_POLE(dispersion_noise_, noise, noise_filter)
 1880              		.loc 6 149 15 view .LVU503
 1881 020c DFED686A 		vldr.32	s13, .L95+84
 1882              	.LBB332:
 1883              	.LBB327:
 1884              		.loc 9 54 12 view .LVU504
 1885 0210 07EE903A 		vmov	s15, r3	@ int
 1886              	.LBB323:
 1887              	.LBB319:
  45:eurorack/stmlib/utils/random.h ****     return state();
 1888              		.loc 9 45 16 view .LVU505
 1889 0214 1360     		str	r3, [r2]
  46:eurorack/stmlib/utils/random.h ****   }
 1890              		.loc 9 46 5 is_stmt 1 view .LVU506
 1891              	.LBE319:
 1892              	.LBE323:
 1893              	.LBE327:
 1894              	.LBE332:
 1895              	.LBE340:
 1896              	.LBE310:
 1897              	.LBE372:
 1898              	.LBE374:
  38:eurorack/stmlib/utils/random.h **** 
 1899              		.loc 9 38 36 view .LVU507
 1900              	.LBB375:
 1901              	.LBB373:
 1902              	.LBB366:
 1903              	.LBB341:
 1904              	.LBB333:
 1905              	.LBB328:
 1906              		.loc 9 54 12 is_stmt 0 view .LVU508
 1907 0216 F8EE677A 		vcvt.f32.u32	s15, s15
 1908              	.LBE328:
 1909              	.LBE333:
 149:eurorack/plaits/dsp/physical_modelling/string.cc ****         ONE_POLE(dispersion_noise_, noise, noise_filter)
 1910              		.loc 6 149 15 view .LVU509
 1911 021a A7EEA67A 		vfma.f32	s14, s15, s13
 1912              	.LVL169:
 150:eurorack/plaits/dsp/physical_modelling/string.cc ****         delay *= 1.0f + dispersion_noise_ * noise_amount;
 1913              		.loc 6 150 9 view .LVU510
 1914 021e D4ED0D7A 		vldr.32	s15, [r4, #52]
 1915 0222 37EE677A 		vsub.f32	s14, s14, s15
 1916              	.LVL170:
 150:eurorack/plaits/dsp/physical_modelling/string.cc ****         delay *= 1.0f + dispersion_noise_ * noise_amount;
 1917              		.loc 6 150 9 view .LVU511
 1918 0226 E7EE0C7A 		vfma.f32	s15, s14, s24
 151:eurorack/plaits/dsp/physical_modelling/string.cc ****       } else {
 1919              		.loc 6 151 23 view .LVU512
 1920 022a A7EEAB0A 		vfma.f32	s0, s15, s23
 150:eurorack/plaits/dsp/physical_modelling/string.cc ****         delay *= 1.0f + dispersion_noise_ * noise_amount;
 1921              		.loc 6 150 9 view .LVU513
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 71


 1922 022e C4ED0D7A 		vstr.32	s15, [r4, #52]
 151:eurorack/plaits/dsp/physical_modelling/string.cc ****       } else {
 1923              		.loc 6 151 15 view .LVU514
 1924 0232 20EE0D0A 		vmul.f32	s0, s0, s26
 1925              	.LVL171:
 151:eurorack/plaits/dsp/physical_modelling/string.cc ****       } else {
 1926              		.loc 6 151 15 view .LVU515
 1927              	.LBE341:
 1928              	.LBB342:
 157:eurorack/plaits/dsp/physical_modelling/string.cc ****         float main_delay = delay - ap_delay * (0.408f - stretch_point * 0.308f) * stretch_correctio
 1929              		.loc 6 157 15 view .LVU516
 1930 0236 68EE807A 		vmul.f32	s15, s17, s0
 1931              	.LVL172:
 159:eurorack/plaits/dsp/physical_modelling/string.cc ****           s = string_.Read(main_delay);
 1932              		.loc 6 159 9 view .LVU517
 1933 023a F4EEE97A 		vcmpe.f32	s15, s19
 1934 023e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1935 0242 73DB     		blt	.L71
 158:eurorack/plaits/dsp/physical_modelling/string.cc ****         if (ap_delay >= 4.0f && main_delay >= 4.0f) {
 1936              		.loc 6 158 55 discriminator 1 view .LVU518
 1937 0244 DFED5B6A 		vldr.32	s13, .L95+88
 1938              	.LVL173:
 158:eurorack/plaits/dsp/physical_modelling/string.cc ****         if (ap_delay >= 4.0f && main_delay >= 4.0f) {
 1939              		.loc 6 158 55 discriminator 1 view .LVU519
 1940 0248 9FED5B7A 		vldr.32	s14, .L95+92
 1941 024c A8EEE67A 		vfms.f32	s14, s17, s13
 158:eurorack/plaits/dsp/physical_modelling/string.cc ****         if (ap_delay >= 4.0f && main_delay >= 4.0f) {
 1942              		.loc 6 158 15 discriminator 1 view .LVU520
 1943 0250 F0EE406A 		vmov.f32	s13, s0
 158:eurorack/plaits/dsp/physical_modelling/string.cc ****         if (ap_delay >= 4.0f && main_delay >= 4.0f) {
 1944              		.loc 6 158 45 discriminator 1 view .LVU521
 1945 0254 27EE277A 		vmul.f32	s14, s14, s15
 158:eurorack/plaits/dsp/physical_modelling/string.cc ****         if (ap_delay >= 4.0f && main_delay >= 4.0f) {
 1946              		.loc 6 158 15 discriminator 1 view .LVU522
 1947 0258 EBEE476A 		vfms.f32	s13, s22, s14
 159:eurorack/plaits/dsp/physical_modelling/string.cc ****           s = string_.Read(main_delay);
 1948              		.loc 6 159 30 discriminator 1 view .LVU523
 1949 025c F4EEE96A 		vcmpe.f32	s13, s19
 1950 0260 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1951 0264 62DB     		blt	.L71
 1952              	.LVL174:
 1953              	.LBB343:
 1954              	.LBI343:
  71:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     MAKE_INTEGRAL_FRACTIONAL(delay)
 1955              		.loc 4 71 18 is_stmt 1 view .LVU524
 1956              	.LBB344:
  72:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 1957              		.loc 4 72 5 is_stmt 0 view .LVU525
 1958 0266 BDEEE66A 		vcvt.s32.f32	s12, s13
 1959              	.LVL175:
  72:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 1960              		.loc 4 72 5 view .LVU526
 1961              	.LBE344:
 1962              	.LBE343:
 161:eurorack/plaits/dsp/physical_modelling/string.cc ****         } else {
 1963              		.loc 6 161 31 view .LVU527
 1964 026a FCEEE77A 		vcvt.u32.f32	s15, s15
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 72


 1965              	.LVL176:
 1966              	.LBB348:
 1967              	.LBB345:
  73:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 1968              		.loc 4 73 35 view .LVU528
 1969 026e D4E90032 		ldrd	r3, r2, [r4]
 1970              	.LVL177:
  73:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 1971              		.loc 4 73 35 view .LVU529
 1972 0272 16EE101A 		vmov	r1, s12	@ int
  72:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 1973              		.loc 4 72 5 view .LVU530
 1974 0276 B8EEC66A 		vcvt.f32.s32	s12, s12
 1975              	.LVL178:
  72:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 1976              		.loc 4 72 5 view .LVU531
 1977              	.LBE345:
 1978              	.LBE348:
 161:eurorack/plaits/dsp/physical_modelling/string.cc ****         } else {
 1979              		.loc 6 161 31 view .LVU532
 1980 027a 17EE900A 		vmov	r0, s15	@ int
 1981              	.LBB349:
 1982              	.LBB346:
  73:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 1983              		.loc 4 73 35 view .LVU533
 1984 027e 0B44     		add	r3, r3, r1
  72:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T a = line_[(write_ptr_ + delay_integral) % max_delay];
 1985              		.loc 4 72 5 view .LVU534
 1986 0280 76EEC66A 		vsub.f32	s13, s13, s12
 1987              	.LVL179:
  73:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 1988              		.loc 4 73 53 view .LVU535
 1989 0284 C3F30901 		ubfx	r1, r3, #0, #10
 1990              	.LVL180:
  74:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     return a + (b - a) * T(delay_fractional);
 1991              		.loc 4 74 52 view .LVU536
 1992 0288 0133     		adds	r3, r3, #1
  74:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     return a + (b - a) * T(delay_fractional);
 1993              		.loc 4 74 57 view .LVU537
 1994 028a C3F30903 		ubfx	r3, r3, #0, #10
  73:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 1995              		.loc 4 73 13 view .LVU538
 1996 028e 02EB8101 		add	r1, r2, r1, lsl #2
  74:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     return a + (b - a) * T(delay_fractional);
 1997              		.loc 4 74 13 view .LVU539
 1998 0292 02EB8303 		add	r3, r2, r3, lsl #2
  73:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     const T b = line_[(write_ptr_ + delay_integral + 1) % max_delay];
 1999              		.loc 4 73 13 view .LVU540
 2000 0296 91ED007A 		vldr.32	s14, [r1]
 2001              	.LVL181:
  75:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2002              		.loc 4 75 19 view .LVU541
 2003 029a 93ED006A 		vldr.32	s12, [r3]
 2004 029e 36EE476A 		vsub.f32	s12, s12, s14
 2005              	.LBE346:
 2006              	.LBE349:
 2007              	.LBB350:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 73


 2008              	.LBB351:
  60:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T write = sample + coefficient * read;
 2009              		.loc 4 60 21 view .LVU542
 2010 02a2 D4E90232 		ldrd	r3, r2, [r4, #8]
 2011              	.LBE351:
 2012              	.LBE350:
 2013              	.LBB360:
 2014              	.LBB347:
  75:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2015              		.loc 4 75 44 view .LVU543
 2016 02a6 A6EE867A 		vfma.f32	s14, s13, s12
 2017              	.LVL182:
  75:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2018              		.loc 4 75 44 view .LVU544
 2019              	.LBE347:
 2020              	.LBE360:
 2021              	.LBB361:
 2022              	.LBB358:
  60:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T write = sample + coefficient * read;
 2023              		.loc 4 60 32 view .LVU545
 2024 02aa 1844     		add	r0, r0, r3
  60:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T write = sample + coefficient * read;
 2025              		.loc 4 60 41 view .LVU546
 2026 02ac C0B2     		uxtb	r0, r0
  60:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T write = sample + coefficient * read;
 2027              		.loc 4 60 7 view .LVU547
 2028 02ae 02EB8000 		add	r0, r2, r0, lsl #2
  61:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     Write(write);
 2029              		.loc 4 61 7 view .LVU548
 2030 02b2 F0EE477A 		vmov.f32	s15, s14
 2031              	.LBE358:
 2032              	.LBE361:
 160:eurorack/plaits/dsp/physical_modelling/string.cc ****           s = stretch_.Allpass(s, ap_delay, ap_gain);
 2033              		.loc 6 160 13 view .LVU549
 2034 02b6 8DED017A 		vstr.32	s14, [sp, #4]
 2035              	.LVL183:
 2036              	.LBB362:
 2037              	.LBI350:
  59:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T read = line_[(write_ptr_ + delay) % max_delay];
 2038              		.loc 4 59 18 is_stmt 1 view .LVU550
 2039              	.LBB359:
  60:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     T write = sample + coefficient * read;
 2040              		.loc 4 60 7 is_stmt 0 view .LVU551
 2041 02ba D0ED006A 		vldr.32	s13, [r0]
 2042              	.LVL184:
 2043              	.LBB352:
 2044              	.LBB353:
  55:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2045              		.loc 4 55 23 view .LVU552
 2046 02be 02EB8302 		add	r2, r2, r3, lsl #2
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2047              		.loc 4 56 34 view .LVU553
 2048 02c2 FF33     		adds	r3, r3, #255
 2049              	.LBE353:
 2050              	.LBE352:
  61:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     Write(write);
 2051              		.loc 4 61 7 view .LVU554
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 74


 2052 02c4 EAEEA67A 		vfma.f32	s15, s21, s13
 2053              	.LVL185:
 2054              	.LBB356:
 2055              	.LBI352:
  54:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     line_[write_ptr_] = sample;
 2056              		.loc 4 54 15 is_stmt 1 view .LVU555
 2057              	.LBB354:
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2058              		.loc 4 56 47 is_stmt 0 view .LVU556
 2059 02c8 DBB2     		uxtb	r3, r3
 2060              	.LBE354:
 2061              	.LBE356:
  63:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2062              		.loc 4 63 35 view .LVU557
 2063 02ca E7EEEA6A 		vfms.f32	s13, s15, s21
 2064              	.LVL186:
 2065              	.LBB357:
 2066              	.LBB355:
  55:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2067              		.loc 4 55 23 view .LVU558
 2068 02ce C2ED007A 		vstr.32	s15, [r2]
 2069              	.LVL187:
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2070              		.loc 4 56 16 view .LVU559
 2071 02d2 A360     		str	r3, [r4, #8]
 2072              	.LVL188:
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2073              		.loc 4 56 16 view .LVU560
 2074              	.LBE355:
 2075              	.LBE357:
 2076              	.LBE359:
 2077              	.LBE362:
 161:eurorack/plaits/dsp/physical_modelling/string.cc ****         } else {
 2078              		.loc 6 161 13 view .LVU561
 2079 02d4 CDED016A 		vstr.32	s13, [sp, #4]
 2080              	.LVL189:
 2081              	.L74:
 161:eurorack/plaits/dsp/physical_modelling/string.cc ****         } else {
 2082              		.loc 6 161 13 view .LVU562
 2083              	.LBE342:
 175:eurorack/plaits/dsp/physical_modelling/string.cc ****       CONSTRAIN(s, -20.0f, +20.0f);
 2084              		.loc 6 175 9 view .LVU563
 2085 02d8 9DED017A 		vldr.32	s14, [sp, #4]
 2086 02dc D6ED007A 		vldr.32	s15, [r6]
 2087 02e0 77EE877A 		vadd.f32	s15, s15, s14
 176:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 2088              		.loc 6 176 7 view .LVU564
 2089 02e4 BBEE047A 		vmov.f32	s14, #-2.0e+1
 2090 02e8 F4EEC77A 		vcmpe.f32	s15, s14
 2091 02ec F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2092 02f0 22D5     		bpl	.L94
 176:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 2093              		.loc 6 176 7 discriminator 1 view .LVU565
 2094 02f2 8DED017A 		vstr.32	s14, [sp, #4]
 2095              	.L77:
 178:eurorack/plaits/dsp/physical_modelling/string.cc ****       s = iir_damping_filter_.Process<FILTER_MODE_LOW_PASS>(s);
 2096              		.loc 6 178 26 view .LVU566
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 75


 2097 02f6 0122     		movs	r2, #1
 2098 02f8 01A9     		add	r1, sp, #4
 2099 02fa 04F12400 		add	r0, r4, #36
 2100 02fe FFF7FEFF 		bl	_ZN6stmlib9DCBlocker7ProcessEPfj
 2101              	.LVL190:
 179:eurorack/plaits/dsp/physical_modelling/string.cc ****       string_.Write(s);
 2102              		.loc 6 179 60 view .LVU567
 2103 0302 9DED010A 		vldr.32	s0, [sp, #4]
 2104 0306 4046     		mov	r0, r8
 2105 0308 FFF7FEFF 		bl	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
 2106              	.LVL191:
 2107              	.LBB363:
 2108              	.LBI363:
  54:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     line_[write_ptr_] = sample;
 2109              		.loc 4 54 15 is_stmt 1 view .LVU568
 2110              	.LBB364:
  55:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2111              		.loc 4 55 23 is_stmt 0 view .LVU569
 2112 030c D4E90032 		ldrd	r3, r2, [r4]
 2113 0310 02EB8302 		add	r2, r2, r3, lsl #2
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2114              		.loc 4 56 34 view .LVU570
 2115 0314 03F2FF33 		addw	r3, r3, #1023
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2116              		.loc 4 56 47 view .LVU571
 2117 0318 C3F30903 		ubfx	r3, r3, #0, #10
  55:eurorack/plaits/dsp/physical_modelling/delay_line.h ****     write_ptr_ = (write_ptr_ - 1 + max_delay) % max_delay;
 2118              		.loc 4 55 23 view .LVU572
 2119 031c 82ED000A 		vstr.32	s0, [r2]
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2120              		.loc 4 56 16 view .LVU573
 2121 0320 2360     		str	r3, [r4]
 2122              	.LVL192:
  56:eurorack/plaits/dsp/physical_modelling/delay_line.h ****   }
 2123              		.loc 4 56 16 view .LVU574
 2124              	.LBE364:
 2125              	.LBE363:
 182:eurorack/plaits/dsp/physical_modelling/string.cc ****       out_sample_[0] = s;
 2126              		.loc 6 182 22 view .LVU575
 2127 0322 236C     		ldr	r3, [r4, #64]	@ float
 183:eurorack/plaits/dsp/physical_modelling/string.cc ****     }
 2128              		.loc 6 183 22 view .LVU576
 2129 0324 84ED100A 		vstr.32	s0, [r4, #64]
 182:eurorack/plaits/dsp/physical_modelling/string.cc ****       out_sample_[0] = s;
 2130              		.loc 6 182 22 view .LVU577
 2131 0328 6364     		str	r3, [r4, #68]	@ float
 2132              	.LBE366:
 2133 032a 44E7     		b	.L70
 2134              	.LVL193:
 2135              	.L71:
 2136              	.LBB367:
 2137              	.LBB365:
 163:eurorack/plaits/dsp/physical_modelling/string.cc ****         }
 2138              		.loc 6 163 34 view .LVU578
 2139 032c 2046     		mov	r0, r4
 2140 032e FFF7FEFF 		bl	_ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf
 2141              	.LVL194:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 76


 163:eurorack/plaits/dsp/physical_modelling/string.cc ****         }
 2142              		.loc 6 163 13 view .LVU579
 2143 0332 8DED010A 		vstr.32	s0, [sp, #4]
 2144 0336 CFE7     		b	.L74
 2145              	.L94:
 163:eurorack/plaits/dsp/physical_modelling/string.cc ****         }
 2146              		.loc 6 163 13 view .LVU580
 2147              	.LBE365:
 176:eurorack/plaits/dsp/physical_modelling/string.cc ****       
 2148              		.loc 6 176 7 discriminator 2 view .LVU581
 2149 0338 B3EE047A 		vmov.f32	s14, #2.0e+1
 175:eurorack/plaits/dsp/physical_modelling/string.cc ****       CONSTRAIN(s, -20.0f, +20.0f);
 2150              		.loc 6 175 9 discriminator 2 view .LVU582
 2151 033c F4EEC77A 		vcmpe.f32	s15, s14
 2152 0340 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2153 0344 77FE277A 		vselgt.f32	s15, s14, s15
 2154 0348 CDED017A 		vstr.32	s15, [sp, #4]
 2155 034c D3E7     		b	.L77
 2156              	.L68:
 2157              	.LVL195:
 175:eurorack/plaits/dsp/physical_modelling/string.cc ****       CONSTRAIN(s, -20.0f, +20.0f);
 2158              		.loc 6 175 9 discriminator 2 view .LVU583
 2159              	.LBE367:
 2160              	.LBE373:
 2161              	.LBE375:
 2162              	.LBB376:
 2163              	.LBI376:
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 2164              		.loc 8 49 3 is_stmt 1 view .LVU584
 2165              	.LBB377:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 2166              		.loc 8 50 5 view .LVU585
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 2167              		.loc 8 50 13 is_stmt 0 view .LVU586
 2168 034e 84ED0CDA 		vstr.32	s26, [r4, #48]
 2169              	.LVL196:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 2170              		.loc 8 50 13 view .LVU587
 2171              	.LBE377:
 2172              	.LBE376:
 2173              		.loc 6 188 1 view .LVU588
 2174 0352 02B0     		add	sp, sp, #8
 2175              		.cfi_def_cfa_offset 72
 2176              		@ sp needed
 2177 0354 BDEC0C8B 		vldm	sp!, {d8-d13}
 2178              		.cfi_restore 90
 2179              		.cfi_restore 91
 2180              		.cfi_restore 88
 2181              		.cfi_restore 89
 2182              		.cfi_restore 86
 2183              		.cfi_restore 87
 2184              		.cfi_restore 84
 2185              		.cfi_restore 85
 2186              		.cfi_restore 82
 2187              		.cfi_restore 83
 2188              		.cfi_restore 80
 2189              		.cfi_restore 81
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 77


 2190              		.cfi_def_cfa_offset 24
 2191              	.LVL197:
 2192              		.loc 6 188 1 view .LVU589
 2193 0358 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2194              	.LVL198:
 2195              	.L96:
 2196              		.loc 6 188 1 view .LVU590
 2197              		.align	2
 2198              	.L95:
 2199 035c 00007F44 		.word	1149173760
 2200 0360 72F97F3F 		.word	1065351538
 2201 0364 00007042 		.word	1114636288
 2202 0368 0000A842 		.word	1118306304
 2203 036c EE7CFF3E 		.word	1056931054
 2204 0370 3333733F 		.word	1064514355
 2205 0374 E5F2FF3E 		.word	1056961253
 2206 0378 00000043 		.word	1124073472
 2207 037c 00000000 		.word	_ZN6plaits13lut_svf_shiftE
 2208 0380 6666663E 		.word	1046898278
 2209 0384 0AD7A33B 		.word	1000593162
 2210 0388 66660640 		.word	1074161254
 2211 038c CDCCCC3D 		.word	1036831949
 2212 0390 8FC2753D 		.word	1031127695
 2213 0394 9A99193E 		.word	1041865114
 2214 0398 00000000 		.word	0
 2215 039c D7A3703F 		.word	1064346583
 2216 03a0 3F351EBF 		.word	-1088539329
 2217 03a4 00000000 		.word	_ZN6stmlib6Random10rng_state_E
 2218 03a8 0D661900 		.word	1664525
 2219 03ac 5FF36E3C 		.word	1013904223
 2220 03b0 0000802F 		.word	796917760
 2221 03b4 2DB29D3E 		.word	1050522157
 2222 03b8 60E5D03E 		.word	1053877600
 2223              		.cfi_endproc
 2224              	.LFE1591:
 2226              		.section	.text._ZN6plaits6String7ProcessEffffPKfPfj,"ax",%progbits
 2227              		.align	1
 2228              		.global	_ZN6plaits6String7ProcessEffffPKfPfj
 2229              		.syntax unified
 2230              		.thumb
 2231              		.thumb_func
 2233              	_ZN6plaits6String7ProcessEffffPKfPfj:
 2234              	.LVL199:
 2235              	.LFB1568:
  71:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (non_linearity_amount <= 0.0f) {
 2236              		.loc 6 71 18 is_stmt 1 view -0
 2237              		.cfi_startproc
 2238              		@ args = 0, pretend = 0, frame = 0
 2239              		@ frame_needed = 0, uses_anonymous_args = 0
  72:eurorack/plaits/dsp/physical_modelling/string.cc ****     ProcessInternal<STRING_NON_LINEARITY_CURVED_BRIDGE>(
 2240              		.loc 6 72 3 view .LVU592
 2241 0000 F5EEC00A 		vcmpe.f32	s1, #0
  71:eurorack/plaits/dsp/physical_modelling/string.cc ****   if (non_linearity_amount <= 0.0f) {
 2242              		.loc 6 71 18 is_stmt 0 view .LVU593
 2243 0004 08B5     		push	{r3, lr}
 2244              		.cfi_def_cfa_offset 8
 2245              		.cfi_offset 3, -8
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 78


 2246              		.cfi_offset 14, -4
  72:eurorack/plaits/dsp/physical_modelling/string.cc ****     ProcessInternal<STRING_NON_LINEARITY_CURVED_BRIDGE>(
 2247              		.loc 6 72 3 view .LVU594
 2248 0006 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 2249 000a 04D8     		bhi	.L102
  73:eurorack/plaits/dsp/physical_modelling/string.cc ****         f0, -non_linearity_amount, brightness, damping, in, out, size);
 2250              		.loc 6 73 5 is_stmt 1 view .LVU595
  73:eurorack/plaits/dsp/physical_modelling/string.cc ****         f0, -non_linearity_amount, brightness, damping, in, out, size);
 2251              		.loc 6 73 56 is_stmt 0 view .LVU596
 2252 000c F1EE600A 		vneg.f32	s1, s1
 2253              	.LVL200:
  73:eurorack/plaits/dsp/physical_modelling/string.cc ****         f0, -non_linearity_amount, brightness, damping, in, out, size);
 2254              		.loc 6 73 56 view .LVU597
 2255 0010 FFF7FEFF 		bl	_ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj
 2256              	.LVL201:
 2257              	.L97:
  79:eurorack/plaits/dsp/physical_modelling/string.cc **** 
 2258              		.loc 6 79 1 view .LVU598
 2259 0014 08BD     		pop	{r3, pc}
 2260              	.LVL202:
 2261              	.L102:
  76:eurorack/plaits/dsp/physical_modelling/string.cc ****         f0, non_linearity_amount, brightness, damping, in, out, size);
 2262              		.loc 6 76 5 is_stmt 1 view .LVU599
  76:eurorack/plaits/dsp/physical_modelling/string.cc ****         f0, non_linearity_amount, brightness, damping, in, out, size);
 2263              		.loc 6 76 53 is_stmt 0 view .LVU600
 2264 0016 FFF7FEFF 		bl	_ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj
 2265              	.LVL203:
  79:eurorack/plaits/dsp/physical_modelling/string.cc **** 
 2266              		.loc 6 79 1 view .LVU601
 2267 001a FBE7     		b	.L97
 2268              		.cfi_endproc
 2269              	.LFE1568:
 2271              		.text
 2272              	.Letext0:
 2273              		.file 10 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 2274              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 2275              		.file 12 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2276              		.file 13 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 2277              		.file 14 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 2278              		.file 15 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 2279              		.file 16 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 2280              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 2281              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 2282              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 2283              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 2284              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 2285              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 2286              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 2287              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 2288              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 2289              		.file 26 "eurorack/stmlib/stmlib.h"
 2290              		.file 27 "eurorack/plaits/dsp/physical_modelling/string.h"
 2291              		.file 28 "eurorack/plaits/dsp/dsp.h"
 2292              		.file 29 "eurorack/plaits/resources.h"
 2293              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/stdlib.h"
 2294              		.file 31 "lib/libdaisy/src/daisy_core.h"
 2295              		.file 32 "<built-in>"
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 79


ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s 			page 80


DEFINED SYMBOLS
                            *ABS*:0000000000000000 string.cc
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:19     .text._ZN6stmlib9DCBlocker7ProcessEPfj:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:25     .text._ZN6stmlib9DCBlocker7ProcessEPfj:0000000000000000 _ZN6stmlib9DCBlocker7ProcessEPfj
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:91     .text._ZN6stmlib11InterpolateEPKfff:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:97     .text._ZN6stmlib11InterpolateEPKfff:0000000000000000 _ZN6stmlib11InterpolateEPKfff
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:143    .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:149    .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 _ZN6stmlib16SemitonesToRatioEf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:197    .text._ZN6stmlib16SemitonesToRatioEf:000000000000003c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:204    .text._ZN6plaits9DelayLineIfLj1024EE5ResetEv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:210    .text._ZN6plaits9DelayLineIfLj1024EE5ResetEv:0000000000000000 _ZN6plaits9DelayLineIfLj1024EE5ResetEv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:275    .text._ZN6plaits9DelayLineIfLj256EE5ResetEv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:281    .text._ZN6plaits9DelayLineIfLj256EE5ResetEv:0000000000000000 _ZN6plaits9DelayLineIfLj256EE5ResetEv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:344    .text._ZN6plaits6String5ResetEv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:350    .text._ZN6plaits6String5ResetEv:0000000000000000 _ZN6plaits6String5ResetEv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:479    .text._ZN6plaits6String5ResetEv:0000000000000038 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:487    .text._ZN6plaits6String4InitEPN6stmlib15BufferAllocatorE:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:493    .text._ZN6plaits6String4InitEPN6stmlib15BufferAllocatorE:0000000000000000 _ZN6plaits6String4InitEPN6stmlib15BufferAllocatorE
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:662    .text._ZN6plaits6String4InitEPN6stmlib15BufferAllocatorE:0000000000000058 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:667    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:673    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff:0000000000000000 _ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:728    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE2EEEvff:0000000000000044 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:735    .text._ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:741    .text._ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf:0000000000000000 _ZNK6plaits9DelayLineIfLj1024EE11ReadHermiteEf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:843    .text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:849    .text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff:0000000000000000 _ZN6stmlib3Svf7ProcessILNS_10FilterModeE0EEEff
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:905    .text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:911    .text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj:0000000000000000 _ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:1392   .text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE0EEEvffffPKfPfj:0000000000000228 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:1407   .text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:1413   .text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj:0000000000000000 _ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:2199   .text._ZN6plaits6String15ProcessInternalILNS_18StringNonLinearityE1EEEvffffPKfPfj:000000000000035c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:2227   .text._ZN6plaits6String7ProcessEffffPKfPfj:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccajhYVz.s:2233   .text._ZN6plaits6String7ProcessEffffPKfPfj:0000000000000000 _ZN6plaits6String7ProcessEffffPKfPfj

UNDEFINED SYMBOLS
_ZN6stmlib19lut_pitch_ratio_lowE
_ZN6stmlib20lut_pitch_ratio_highE
memset
_ZN6plaits13lut_svf_shiftE
_ZN6stmlib6Random10rng_state_E
