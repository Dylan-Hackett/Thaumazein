ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"noise_engine.cc"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZN6plaits11NoiseEngine5ResetEv,"ax",%progbits
  19              		.align	1
  20              		.global	_ZN6plaits11NoiseEngine5ResetEv
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZN6plaits11NoiseEngine5ResetEv:
  26              	.LVL0:
  27              	.LFB1562:
  28              		.file 1 "eurorack/plaits/dsp/engine/noise_engine.cc"
   1:eurorack/plaits/dsp/engine/noise_engine.cc **** // Copyright 2016 Emilie Gillet.
   2:eurorack/plaits/dsp/engine/noise_engine.cc **** //
   3:eurorack/plaits/dsp/engine/noise_engine.cc **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/plaits/dsp/engine/noise_engine.cc **** //
   5:eurorack/plaits/dsp/engine/noise_engine.cc **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/plaits/dsp/engine/noise_engine.cc **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/plaits/dsp/engine/noise_engine.cc **** // in the Software without restriction, including without limitation the rights
   8:eurorack/plaits/dsp/engine/noise_engine.cc **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/plaits/dsp/engine/noise_engine.cc **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/plaits/dsp/engine/noise_engine.cc **** // furnished to do so, subject to the following conditions:
  11:eurorack/plaits/dsp/engine/noise_engine.cc **** // 
  12:eurorack/plaits/dsp/engine/noise_engine.cc **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/plaits/dsp/engine/noise_engine.cc **** // all copies or substantial portions of the Software.
  14:eurorack/plaits/dsp/engine/noise_engine.cc **** // 
  15:eurorack/plaits/dsp/engine/noise_engine.cc **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/plaits/dsp/engine/noise_engine.cc **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/plaits/dsp/engine/noise_engine.cc **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/plaits/dsp/engine/noise_engine.cc **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/plaits/dsp/engine/noise_engine.cc **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/plaits/dsp/engine/noise_engine.cc **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/plaits/dsp/engine/noise_engine.cc **** // THE SOFTWARE.
  22:eurorack/plaits/dsp/engine/noise_engine.cc **** // 
  23:eurorack/plaits/dsp/engine/noise_engine.cc **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/plaits/dsp/engine/noise_engine.cc **** //
  25:eurorack/plaits/dsp/engine/noise_engine.cc **** // -----------------------------------------------------------------------------
  26:eurorack/plaits/dsp/engine/noise_engine.cc **** //
  27:eurorack/plaits/dsp/engine/noise_engine.cc **** // Clocked noise processed by a multimode filter.
  28:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  29:eurorack/plaits/dsp/engine/noise_engine.cc **** #include "plaits/dsp/engine/noise_engine.h"
  30:eurorack/plaits/dsp/engine/noise_engine.cc **** 
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 2


  31:eurorack/plaits/dsp/engine/noise_engine.cc **** #include "stmlib/dsp/parameter_interpolator.h"
  32:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  33:eurorack/plaits/dsp/engine/noise_engine.cc **** namespace plaits {
  34:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  35:eurorack/plaits/dsp/engine/noise_engine.cc **** using namespace std;
  36:eurorack/plaits/dsp/engine/noise_engine.cc **** using namespace stmlib;
  37:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  38:eurorack/plaits/dsp/engine/noise_engine.cc **** void NoiseEngine::Init(BufferAllocator* allocator) {
  39:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[0].Init();
  40:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[1].Init();
  41:eurorack/plaits/dsp/engine/noise_engine.cc ****   lp_hp_filter_.Init();
  42:eurorack/plaits/dsp/engine/noise_engine.cc ****   bp_filter_[0].Init();
  43:eurorack/plaits/dsp/engine/noise_engine.cc ****   bp_filter_[1].Init();
  44:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  45:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_f0_ = 0.0f;
  46:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_f1_ = 0.0f;
  47:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_q_ = 0.0f;
  48:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_mode_ = 0.0f;
  49:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  50:eurorack/plaits/dsp/engine/noise_engine.cc ****   temp_buffer_ = allocator->Allocate<float>(kMaxBlockSize);
  51:eurorack/plaits/dsp/engine/noise_engine.cc **** }
  52:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  53:eurorack/plaits/dsp/engine/noise_engine.cc **** void NoiseEngine::Reset() {
  29              		.loc 1 53 27 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  54:eurorack/plaits/dsp/engine/noise_engine.cc ****   
  55:eurorack/plaits/dsp/engine/noise_engine.cc **** }
  34              		.loc 1 55 1 is_stmt 0 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE1562:
  39              		.section	.text._ZN6stmlib3Svf4InitEv,"axG",%progbits,_ZN6stmlib3Svf4InitEv,comdat
  40              		.align	1
  41              		.weak	_ZN6stmlib3Svf4InitEv
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	_ZN6stmlib3Svf4InitEv:
  47              	.LVL1:
  48              	.LFB1427:
  49              		.file 2 "eurorack/stmlib/dsp/filter.h"
   1:eurorack/stmlib/dsp/filter.h **** // Copyright 2014 Emilie Gillet.
   2:eurorack/stmlib/dsp/filter.h **** //
   3:eurorack/stmlib/dsp/filter.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/filter.h **** //
   5:eurorack/stmlib/dsp/filter.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/filter.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/filter.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/filter.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/filter.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/filter.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/filter.h **** // 
  12:eurorack/stmlib/dsp/filter.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/filter.h **** // all copies or substantial portions of the Software.
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 3


  14:eurorack/stmlib/dsp/filter.h **** // 
  15:eurorack/stmlib/dsp/filter.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/filter.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/filter.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/filter.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/filter.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/filter.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/filter.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/filter.h **** // 
  23:eurorack/stmlib/dsp/filter.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/filter.h **** //
  25:eurorack/stmlib/dsp/filter.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/filter.h **** //
  27:eurorack/stmlib/dsp/filter.h **** // Zero-delay-feedback filters (one pole and SVF).
  28:eurorack/stmlib/dsp/filter.h **** // Naive SVF.
  29:eurorack/stmlib/dsp/filter.h **** 
  30:eurorack/stmlib/dsp/filter.h **** #ifndef STMLIB_DSP_FILTER_H_
  31:eurorack/stmlib/dsp/filter.h **** #define STMLIB_DSP_FILTER_H_
  32:eurorack/stmlib/dsp/filter.h **** 
  33:eurorack/stmlib/dsp/filter.h **** #include "stmlib/stmlib.h"
  34:eurorack/stmlib/dsp/filter.h **** 
  35:eurorack/stmlib/dsp/filter.h **** #include <cmath>
  36:eurorack/stmlib/dsp/filter.h **** #include <algorithm>
  37:eurorack/stmlib/dsp/filter.h **** 
  38:eurorack/stmlib/dsp/filter.h **** namespace stmlib {
  39:eurorack/stmlib/dsp/filter.h **** 
  40:eurorack/stmlib/dsp/filter.h **** enum FilterMode {
  41:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_LOW_PASS,
  42:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS,
  43:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_BAND_PASS_NORMALIZED,
  44:eurorack/stmlib/dsp/filter.h ****   FILTER_MODE_HIGH_PASS
  45:eurorack/stmlib/dsp/filter.h **** };
  46:eurorack/stmlib/dsp/filter.h **** 
  47:eurorack/stmlib/dsp/filter.h **** enum FrequencyApproximation {
  48:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_EXACT,
  49:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_ACCURATE,
  50:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_FAST,
  51:eurorack/stmlib/dsp/filter.h ****   FREQUENCY_DIRTY
  52:eurorack/stmlib/dsp/filter.h **** };
  53:eurorack/stmlib/dsp/filter.h **** 
  54:eurorack/stmlib/dsp/filter.h **** #define M_PI_F float(M_PI)
  55:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_2 M_PI * M_PI
  56:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_3 M_PI_POW_2 * M_PI
  57:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_5 M_PI_POW_3 * M_PI_POW_2
  58:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_7 M_PI_POW_5 * M_PI_POW_2
  59:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_9 M_PI_POW_7 * M_PI_POW_2
  60:eurorack/stmlib/dsp/filter.h **** #define M_PI_POW_11 M_PI_POW_9 * M_PI_POW_2
  61:eurorack/stmlib/dsp/filter.h **** 
  62:eurorack/stmlib/dsp/filter.h **** class DCBlocker {
  63:eurorack/stmlib/dsp/filter.h ****  public:
  64:eurorack/stmlib/dsp/filter.h ****   DCBlocker() { }
  65:eurorack/stmlib/dsp/filter.h ****   ~DCBlocker() { }
  66:eurorack/stmlib/dsp/filter.h ****   
  67:eurorack/stmlib/dsp/filter.h ****   void Init(float pole) {
  68:eurorack/stmlib/dsp/filter.h ****     x_ = 0.0f;
  69:eurorack/stmlib/dsp/filter.h ****     y_ = 0.0f;
  70:eurorack/stmlib/dsp/filter.h ****     pole_ = pole;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 4


  71:eurorack/stmlib/dsp/filter.h ****   }
  72:eurorack/stmlib/dsp/filter.h ****   
  73:eurorack/stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
  74:eurorack/stmlib/dsp/filter.h ****     float x = x_;
  75:eurorack/stmlib/dsp/filter.h ****     float y = y_;
  76:eurorack/stmlib/dsp/filter.h ****     const float pole = pole_;
  77:eurorack/stmlib/dsp/filter.h ****     while (size--) {
  78:eurorack/stmlib/dsp/filter.h ****       float old_x = x;
  79:eurorack/stmlib/dsp/filter.h ****       x = *in_out;
  80:eurorack/stmlib/dsp/filter.h ****       *in_out++ = y = y * pole + x - old_x;
  81:eurorack/stmlib/dsp/filter.h ****     }
  82:eurorack/stmlib/dsp/filter.h ****     x_ = x;
  83:eurorack/stmlib/dsp/filter.h ****     y_ = y;
  84:eurorack/stmlib/dsp/filter.h ****   }
  85:eurorack/stmlib/dsp/filter.h ****   
  86:eurorack/stmlib/dsp/filter.h ****  private:
  87:eurorack/stmlib/dsp/filter.h ****   float pole_;
  88:eurorack/stmlib/dsp/filter.h ****   float x_;
  89:eurorack/stmlib/dsp/filter.h ****   float y_;
  90:eurorack/stmlib/dsp/filter.h **** };
  91:eurorack/stmlib/dsp/filter.h **** 
  92:eurorack/stmlib/dsp/filter.h **** class OnePole {
  93:eurorack/stmlib/dsp/filter.h ****  public:
  94:eurorack/stmlib/dsp/filter.h ****   OnePole() { }
  95:eurorack/stmlib/dsp/filter.h ****   ~OnePole() { }
  96:eurorack/stmlib/dsp/filter.h ****   
  97:eurorack/stmlib/dsp/filter.h ****   void Init() {
  98:eurorack/stmlib/dsp/filter.h ****     set_f<FREQUENCY_DIRTY>(0.01f);
  99:eurorack/stmlib/dsp/filter.h ****     Reset();
 100:eurorack/stmlib/dsp/filter.h ****   }
 101:eurorack/stmlib/dsp/filter.h ****   
 102:eurorack/stmlib/dsp/filter.h ****   void Reset() {
 103:eurorack/stmlib/dsp/filter.h ****     state_ = 0.0f;
 104:eurorack/stmlib/dsp/filter.h ****   }
 105:eurorack/stmlib/dsp/filter.h ****   
 106:eurorack/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 107:eurorack/stmlib/dsp/filter.h ****   static inline float tan(float f) {
 108:eurorack/stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 109:eurorack/stmlib/dsp/filter.h ****       // Clip coefficient to about 100.
 110:eurorack/stmlib/dsp/filter.h ****       f = f < 0.497f ? f : 0.497f;
 111:eurorack/stmlib/dsp/filter.h ****       return tanf(M_PI_F * f);
 112:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_DIRTY) {
 113:eurorack/stmlib/dsp/filter.h ****       // Optimized for frequencies below 8kHz.
 114:eurorack/stmlib/dsp/filter.h ****       const float a = 3.736e-01f * M_PI_POW_3;
 115:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + a * f * f);
 116:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_FAST) {
 117:eurorack/stmlib/dsp/filter.h ****       // The usual tangent approximation uses 3.1755e-01 and 2.033e-01, but
 118:eurorack/stmlib/dsp/filter.h ****       // the coefficients used here are optimized to minimize error for the
 119:eurorack/stmlib/dsp/filter.h ****       // 16Hz to 16kHz range, with a sample rate of 48kHz.
 120:eurorack/stmlib/dsp/filter.h ****       const float a = 3.260e-01f * M_PI_POW_3;
 121:eurorack/stmlib/dsp/filter.h ****       const float b = 1.823e-01f * M_PI_POW_5;
 122:eurorack/stmlib/dsp/filter.h ****       float f2 = f * f;
 123:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + b * f2));
 124:eurorack/stmlib/dsp/filter.h ****     } else if (approximation == FREQUENCY_ACCURATE) {
 125:eurorack/stmlib/dsp/filter.h ****       // These coefficients don't need to be tweaked for the audio range.
 126:eurorack/stmlib/dsp/filter.h ****       const float a = 3.333314036e-01f * M_PI_POW_3;
 127:eurorack/stmlib/dsp/filter.h ****       const float b = 1.333923995e-01f * M_PI_POW_5;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 5


 128:eurorack/stmlib/dsp/filter.h ****       const float c = 5.33740603e-02f * M_PI_POW_7;
 129:eurorack/stmlib/dsp/filter.h ****       const float d = 2.900525e-03f * M_PI_POW_9;
 130:eurorack/stmlib/dsp/filter.h ****       const float e = 9.5168091e-03f * M_PI_POW_11;
 131:eurorack/stmlib/dsp/filter.h ****       float f2 = f * f;
 132:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + f2 * (b + f2 * (c + f2 * (d + f2 * e)))));
 133:eurorack/stmlib/dsp/filter.h ****     }
 134:eurorack/stmlib/dsp/filter.h ****   }
 135:eurorack/stmlib/dsp/filter.h ****   
 136:eurorack/stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 137:eurorack/stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 138:eurorack/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 139:eurorack/stmlib/dsp/filter.h ****   inline void set_f(float f) {
 140:eurorack/stmlib/dsp/filter.h ****     g_ = tan<approximation>(f);
 141:eurorack/stmlib/dsp/filter.h ****     gi_ = 1.0f / (1.0f + g_);
 142:eurorack/stmlib/dsp/filter.h ****   }
 143:eurorack/stmlib/dsp/filter.h ****   
 144:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 145:eurorack/stmlib/dsp/filter.h ****   inline float Process(float in) {
 146:eurorack/stmlib/dsp/filter.h ****     float lp;
 147:eurorack/stmlib/dsp/filter.h ****     lp = (g_ * in + state_) * gi_;
 148:eurorack/stmlib/dsp/filter.h ****     state_ = g_ * (in - lp) + lp;
 149:eurorack/stmlib/dsp/filter.h **** 
 150:eurorack/stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 151:eurorack/stmlib/dsp/filter.h ****       return lp;
 152:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 153:eurorack/stmlib/dsp/filter.h ****       return in - lp;
 154:eurorack/stmlib/dsp/filter.h ****     } else {
 155:eurorack/stmlib/dsp/filter.h ****       return 0.0f;
 156:eurorack/stmlib/dsp/filter.h ****     }
 157:eurorack/stmlib/dsp/filter.h ****   }
 158:eurorack/stmlib/dsp/filter.h ****   
 159:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 160:eurorack/stmlib/dsp/filter.h ****   inline void Process(float* in_out, size_t size) {
 161:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 162:eurorack/stmlib/dsp/filter.h ****       *in_out = Process<mode>(*in_out);
 163:eurorack/stmlib/dsp/filter.h ****       ++in_out;
 164:eurorack/stmlib/dsp/filter.h ****     }
 165:eurorack/stmlib/dsp/filter.h ****   }
 166:eurorack/stmlib/dsp/filter.h ****   
 167:eurorack/stmlib/dsp/filter.h ****  private:
 168:eurorack/stmlib/dsp/filter.h ****   float g_;
 169:eurorack/stmlib/dsp/filter.h ****   float gi_;
 170:eurorack/stmlib/dsp/filter.h ****   float state_;
 171:eurorack/stmlib/dsp/filter.h ****   
 172:eurorack/stmlib/dsp/filter.h ****   DISALLOW_COPY_AND_ASSIGN(OnePole);
 173:eurorack/stmlib/dsp/filter.h **** };
 174:eurorack/stmlib/dsp/filter.h **** 
 175:eurorack/stmlib/dsp/filter.h **** 
 176:eurorack/stmlib/dsp/filter.h **** 
 177:eurorack/stmlib/dsp/filter.h **** class Svf {
 178:eurorack/stmlib/dsp/filter.h ****  public:
 179:eurorack/stmlib/dsp/filter.h ****   Svf() { }
 180:eurorack/stmlib/dsp/filter.h ****   ~Svf() { }
 181:eurorack/stmlib/dsp/filter.h ****   
 182:eurorack/stmlib/dsp/filter.h ****   void Init() {
  50              		.loc 2 182 8 is_stmt 1 view -0
  51              		.cfi_startproc
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 6


  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 183:eurorack/stmlib/dsp/filter.h ****     set_f_q<FREQUENCY_DIRTY>(0.01f, 100.0f);
  55              		.loc 2 183 5 view .LVU3
  56              	.LBB71:
  57              	.LBI71:
 184:eurorack/stmlib/dsp/filter.h ****     Reset();
 185:eurorack/stmlib/dsp/filter.h ****   }
 186:eurorack/stmlib/dsp/filter.h ****   
 187:eurorack/stmlib/dsp/filter.h ****   void Reset() {
 188:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_2_ = 0.0f;
 189:eurorack/stmlib/dsp/filter.h ****   }
 190:eurorack/stmlib/dsp/filter.h ****   
 191:eurorack/stmlib/dsp/filter.h ****   // Copy settings from another filter.
 192:eurorack/stmlib/dsp/filter.h ****   inline void set(const Svf& f) {
 193:eurorack/stmlib/dsp/filter.h ****     g_ = f.g();
 194:eurorack/stmlib/dsp/filter.h ****     r_ = f.r();
 195:eurorack/stmlib/dsp/filter.h ****     h_ = f.h();
 196:eurorack/stmlib/dsp/filter.h ****   }
 197:eurorack/stmlib/dsp/filter.h **** 
 198:eurorack/stmlib/dsp/filter.h ****   // Set all parameters from LUT.
 199:eurorack/stmlib/dsp/filter.h ****   inline void set_g_r_h(float g, float r, float h) {
 200:eurorack/stmlib/dsp/filter.h ****     g_ = g;
 201:eurorack/stmlib/dsp/filter.h ****     r_ = r;
 202:eurorack/stmlib/dsp/filter.h ****     h_ = h;
 203:eurorack/stmlib/dsp/filter.h ****   }
 204:eurorack/stmlib/dsp/filter.h ****   
 205:eurorack/stmlib/dsp/filter.h ****   // Set frequency and resonance coefficients from LUT, adjust remaining
 206:eurorack/stmlib/dsp/filter.h ****   // parameter.
 207:eurorack/stmlib/dsp/filter.h ****   inline void set_g_r(float g, float r) {
 208:eurorack/stmlib/dsp/filter.h ****     g_ = g;
 209:eurorack/stmlib/dsp/filter.h ****     r_ = r;
 210:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 211:eurorack/stmlib/dsp/filter.h ****   }
 212:eurorack/stmlib/dsp/filter.h **** 
 213:eurorack/stmlib/dsp/filter.h ****   // Set frequency from LUT, resonance in true units, adjust the rest.
 214:eurorack/stmlib/dsp/filter.h ****   inline void set_g_q(float g, float resonance) {
 215:eurorack/stmlib/dsp/filter.h ****     g_ = g;
 216:eurorack/stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 217:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 218:eurorack/stmlib/dsp/filter.h ****   }
 219:eurorack/stmlib/dsp/filter.h **** 
 220:eurorack/stmlib/dsp/filter.h ****   // Set frequency and resonance from true units. Various approximations
 221:eurorack/stmlib/dsp/filter.h ****   // are available to avoid the cost of tanf.
 222:eurorack/stmlib/dsp/filter.h ****   template<FrequencyApproximation approximation>
 223:eurorack/stmlib/dsp/filter.h ****   inline void set_f_q(float f, float resonance) {
  58              		.loc 2 223 15 view .LVU4
  59              	.LBB72:
 224:eurorack/stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
  60              		.loc 2 224 8 is_stmt 0 view .LVU5
  61 0000 044B     		ldr	r3, .L3
  62 0002 0360     		str	r3, [r0]	@ float
 225:eurorack/stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
  63              		.loc 2 225 8 view .LVU6
  64 0004 044B     		ldr	r3, .L3+4
  65 0006 4360     		str	r3, [r0, #4]	@ float
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 7


 226:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
  66              		.loc 2 226 8 view .LVU7
  67 0008 044B     		ldr	r3, .L3+8
  68 000a 8360     		str	r3, [r0, #8]	@ float
  69              	.LVL2:
  70              		.loc 2 226 8 view .LVU8
  71              	.LBE72:
  72              	.LBE71:
 184:eurorack/stmlib/dsp/filter.h ****   }
  73              		.loc 2 184 5 is_stmt 1 view .LVU9
  74              	.LBB73:
  75              	.LBI73:
 187:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_2_ = 0.0f;
  76              		.loc 2 187 8 view .LVU10
  77              	.LBB74:
 188:eurorack/stmlib/dsp/filter.h ****   }
  78              		.loc 2 188 5 view .LVU11
 188:eurorack/stmlib/dsp/filter.h ****   }
  79              		.loc 2 188 25 is_stmt 0 view .LVU12
  80 000c 0023     		movs	r3, #0
  81 000e 0361     		str	r3, [r0, #16]	@ float
 188:eurorack/stmlib/dsp/filter.h ****   }
  82              		.loc 2 188 14 view .LVU13
  83 0010 C360     		str	r3, [r0, #12]	@ float
  84              	.LVL3:
 188:eurorack/stmlib/dsp/filter.h ****   }
  85              		.loc 2 188 14 view .LVU14
  86              	.LBE74:
  87              	.LBE73:
 185:eurorack/stmlib/dsp/filter.h ****   
  88              		.loc 2 185 3 view .LVU15
  89 0012 7047     		bx	lr
  90              	.L4:
  91              		.align	2
  92              	.L3:
  93 0014 22BA003D 		.word	1023457826
  94 0018 0AD7233C 		.word	1008981770
  95 001c CAAA7F3F 		.word	1065331402
  96              		.cfi_endproc
  97              	.LFE1427:
  99              		.section	.text._ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE,"ax",%progbits
 100              		.align	1
 101              		.global	_ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 106              	_ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE:
 107              	.LVL4:
 108              	.LFB1561:
  38:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[0].Init();
 109              		.loc 1 38 52 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
  39:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[1].Init();
 113              		.loc 1 39 3 view .LVU17
 114              	.LBB83:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 8


 115              	.LBI83:
 116              		.file 3 "eurorack/plaits/dsp/noise/clocked_noise.h"
   1:eurorack/plaits/dsp/noise/clocked_noise.h **** // Copyright 2016 Emilie Gillet.
   2:eurorack/plaits/dsp/noise/clocked_noise.h **** //
   3:eurorack/plaits/dsp/noise/clocked_noise.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/plaits/dsp/noise/clocked_noise.h **** //
   5:eurorack/plaits/dsp/noise/clocked_noise.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/plaits/dsp/noise/clocked_noise.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/plaits/dsp/noise/clocked_noise.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/plaits/dsp/noise/clocked_noise.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/plaits/dsp/noise/clocked_noise.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/plaits/dsp/noise/clocked_noise.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/plaits/dsp/noise/clocked_noise.h **** // 
  12:eurorack/plaits/dsp/noise/clocked_noise.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/plaits/dsp/noise/clocked_noise.h **** // all copies or substantial portions of the Software.
  14:eurorack/plaits/dsp/noise/clocked_noise.h **** // 
  15:eurorack/plaits/dsp/noise/clocked_noise.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/plaits/dsp/noise/clocked_noise.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/plaits/dsp/noise/clocked_noise.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/plaits/dsp/noise/clocked_noise.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/plaits/dsp/noise/clocked_noise.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/plaits/dsp/noise/clocked_noise.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/plaits/dsp/noise/clocked_noise.h **** // THE SOFTWARE.
  22:eurorack/plaits/dsp/noise/clocked_noise.h **** // 
  23:eurorack/plaits/dsp/noise/clocked_noise.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/plaits/dsp/noise/clocked_noise.h **** //
  25:eurorack/plaits/dsp/noise/clocked_noise.h **** // -----------------------------------------------------------------------------
  26:eurorack/plaits/dsp/noise/clocked_noise.h **** //
  27:eurorack/plaits/dsp/noise/clocked_noise.h **** // Noise processed by a sample and hold running at a target frequency.
  28:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  29:eurorack/plaits/dsp/noise/clocked_noise.h **** #ifndef PLAITS_DSP_NOISE_CLOCKED_NOISE_H_
  30:eurorack/plaits/dsp/noise/clocked_noise.h **** #define PLAITS_DSP_NOISE_CLOCKED_NOISE_H_
  31:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  32:eurorack/plaits/dsp/noise/clocked_noise.h **** #include "stmlib/dsp/dsp.h"
  33:eurorack/plaits/dsp/noise/clocked_noise.h **** #include "stmlib/dsp/parameter_interpolator.h"
  34:eurorack/plaits/dsp/noise/clocked_noise.h **** #include "stmlib/dsp/polyblep.h"
  35:eurorack/plaits/dsp/noise/clocked_noise.h **** #include "stmlib/utils/random.h"
  36:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  37:eurorack/plaits/dsp/noise/clocked_noise.h **** namespace plaits {
  38:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  39:eurorack/plaits/dsp/noise/clocked_noise.h **** class ClockedNoise {
  40:eurorack/plaits/dsp/noise/clocked_noise.h ****  public:
  41:eurorack/plaits/dsp/noise/clocked_noise.h ****   ClockedNoise() { }
  42:eurorack/plaits/dsp/noise/clocked_noise.h ****   ~ClockedNoise() { }
  43:eurorack/plaits/dsp/noise/clocked_noise.h ****   
  44:eurorack/plaits/dsp/noise/clocked_noise.h ****   void Init() {
 117              		.loc 3 44 8 view .LVU18
 118              	.LBB84:
  45:eurorack/plaits/dsp/noise/clocked_noise.h ****     phase_ = 0.0f;
 119              		.loc 3 45 5 view .LVU19
 120              	.LBE84:
 121              	.LBE83:
  38:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[0].Init();
 122              		.loc 1 38 52 is_stmt 0 view .LVU20
 123 0000 70B5     		push	{r4, r5, r6, lr}
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 4, -16
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 9


 126              		.cfi_offset 5, -12
 127              		.cfi_offset 6, -8
 128              		.cfi_offset 14, -4
 129              	.LBB88:
 130              	.LBB85:
  46:eurorack/plaits/dsp/noise/clocked_noise.h ****     sample_ = 0.0f;
  47:eurorack/plaits/dsp/noise/clocked_noise.h ****     next_sample_ = 0.0f;
  48:eurorack/plaits/dsp/noise/clocked_noise.h ****     frequency_ = 0.001f;
 131              		.loc 3 48 16 view .LVU21
 132 0002 184B     		ldr	r3, .L8
  45:eurorack/plaits/dsp/noise/clocked_noise.h ****     sample_ = 0.0f;
 133              		.loc 3 45 12 view .LVU22
 134 0004 0025     		movs	r5, #0
 135              	.LBE85:
 136              	.LBE88:
  38:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[0].Init();
 137              		.loc 1 38 52 view .LVU23
 138 0006 0446     		mov	r4, r0
  41:eurorack/plaits/dsp/engine/noise_engine.cc ****   bp_filter_[0].Init();
 139              		.loc 1 41 21 view .LVU24
 140 0008 3030     		adds	r0, r0, #48
 141              	.LVL5:
 142              	.LBB89:
 143              	.LBB86:
 144              		.loc 3 48 16 view .LVU25
 145 000a 40F8143C 		str	r3, [r0, #-20]	@ float
 146              	.LBE86:
 147              	.LBE89:
  38:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[0].Init();
 148              		.loc 1 38 52 view .LVU26
 149 000e 0E46     		mov	r6, r1
 150              	.LBB90:
 151              	.LBB91:
 152              		.loc 3 48 16 view .LVU27
 153 0010 40F8043C 		str	r3, [r0, #-4]	@ float
 154              	.LBE91:
 155              	.LBE90:
 156              	.LBB93:
 157              	.LBB87:
  45:eurorack/plaits/dsp/noise/clocked_noise.h ****     sample_ = 0.0f;
 158              		.loc 3 45 12 view .LVU28
 159 0014 40F8205C 		str	r5, [r0, #-32]	@ float
  46:eurorack/plaits/dsp/noise/clocked_noise.h ****     next_sample_ = 0.0f;
 160              		.loc 3 46 5 is_stmt 1 view .LVU29
  46:eurorack/plaits/dsp/noise/clocked_noise.h ****     next_sample_ = 0.0f;
 161              		.loc 3 46 13 is_stmt 0 view .LVU30
 162 0018 40F81C5C 		str	r5, [r0, #-28]	@ float
  47:eurorack/plaits/dsp/noise/clocked_noise.h ****     frequency_ = 0.001f;
 163              		.loc 3 47 5 is_stmt 1 view .LVU31
  47:eurorack/plaits/dsp/noise/clocked_noise.h ****     frequency_ = 0.001f;
 164              		.loc 3 47 18 is_stmt 0 view .LVU32
 165 001c 40F8185C 		str	r5, [r0, #-24]	@ float
 166              		.loc 3 48 5 is_stmt 1 view .LVU33
 167              	.LVL6:
 168              		.loc 3 48 5 is_stmt 0 view .LVU34
 169              	.LBE87:
 170              	.LBE93:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 10


  40:eurorack/plaits/dsp/engine/noise_engine.cc ****   lp_hp_filter_.Init();
 171              		.loc 1 40 3 is_stmt 1 view .LVU35
 172              	.LBB94:
 173              	.LBI90:
  44:eurorack/plaits/dsp/noise/clocked_noise.h ****     phase_ = 0.0f;
 174              		.loc 3 44 8 view .LVU36
 175              	.LBB92:
  45:eurorack/plaits/dsp/noise/clocked_noise.h ****     sample_ = 0.0f;
 176              		.loc 3 45 5 view .LVU37
  45:eurorack/plaits/dsp/noise/clocked_noise.h ****     sample_ = 0.0f;
 177              		.loc 3 45 12 is_stmt 0 view .LVU38
 178 0020 40F8105C 		str	r5, [r0, #-16]	@ float
  46:eurorack/plaits/dsp/noise/clocked_noise.h ****     next_sample_ = 0.0f;
 179              		.loc 3 46 5 is_stmt 1 view .LVU39
  46:eurorack/plaits/dsp/noise/clocked_noise.h ****     next_sample_ = 0.0f;
 180              		.loc 3 46 13 is_stmt 0 view .LVU40
 181 0024 40F80C5C 		str	r5, [r0, #-12]	@ float
  47:eurorack/plaits/dsp/noise/clocked_noise.h ****     frequency_ = 0.001f;
 182              		.loc 3 47 5 is_stmt 1 view .LVU41
  47:eurorack/plaits/dsp/noise/clocked_noise.h ****     frequency_ = 0.001f;
 183              		.loc 3 47 18 is_stmt 0 view .LVU42
 184 0028 40F8085C 		str	r5, [r0, #-8]	@ float
 185              		.loc 3 48 5 is_stmt 1 view .LVU43
 186              		.loc 3 48 5 is_stmt 0 view .LVU44
 187              	.LBE92:
 188              	.LBE94:
  41:eurorack/plaits/dsp/engine/noise_engine.cc ****   bp_filter_[0].Init();
 189              		.loc 1 41 3 is_stmt 1 view .LVU45
  41:eurorack/plaits/dsp/engine/noise_engine.cc ****   bp_filter_[0].Init();
 190              		.loc 1 41 21 is_stmt 0 view .LVU46
 191 002c FFF7FEFF 		bl	_ZN6stmlib3Svf4InitEv
 192              	.LVL7:
  42:eurorack/plaits/dsp/engine/noise_engine.cc ****   bp_filter_[1].Init();
 193              		.loc 1 42 3 is_stmt 1 view .LVU47
  42:eurorack/plaits/dsp/engine/noise_engine.cc ****   bp_filter_[1].Init();
 194              		.loc 1 42 21 is_stmt 0 view .LVU48
 195 0030 04F14400 		add	r0, r4, #68
 196 0034 FFF7FEFF 		bl	_ZN6stmlib3Svf4InitEv
 197              	.LVL8:
  43:eurorack/plaits/dsp/engine/noise_engine.cc **** 
 198              		.loc 1 43 3 is_stmt 1 view .LVU49
  43:eurorack/plaits/dsp/engine/noise_engine.cc **** 
 199              		.loc 1 43 21 is_stmt 0 view .LVU50
 200 0038 04F15800 		add	r0, r4, #88
 201 003c FFF7FEFF 		bl	_ZN6stmlib3Svf4InitEv
 202              	.LVL9:
  45:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_f1_ = 0.0f;
 203              		.loc 1 45 3 is_stmt 1 view .LVU51
 204              	.LBB95:
 205              	.LBB96:
 206              	.LBB97:
 207              		.file 4 "eurorack/stmlib/utils/buffer_allocator.h"
   1:eurorack/stmlib/utils/buffer_allocator.h **** // Copyright 2014 Emilie Gillet.
   2:eurorack/stmlib/utils/buffer_allocator.h **** //
   3:eurorack/stmlib/utils/buffer_allocator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/utils/buffer_allocator.h **** //
   5:eurorack/stmlib/utils/buffer_allocator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 11


   6:eurorack/stmlib/utils/buffer_allocator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/utils/buffer_allocator.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/utils/buffer_allocator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/utils/buffer_allocator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/utils/buffer_allocator.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/utils/buffer_allocator.h **** // 
  12:eurorack/stmlib/utils/buffer_allocator.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/utils/buffer_allocator.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/utils/buffer_allocator.h **** // 
  15:eurorack/stmlib/utils/buffer_allocator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/utils/buffer_allocator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/utils/buffer_allocator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/utils/buffer_allocator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/utils/buffer_allocator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/utils/buffer_allocator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/utils/buffer_allocator.h **** // THE SOFTWARE.
  22:eurorack/stmlib/utils/buffer_allocator.h **** // 
  23:eurorack/stmlib/utils/buffer_allocator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/utils/buffer_allocator.h **** //
  25:eurorack/stmlib/utils/buffer_allocator.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/utils/buffer_allocator.h **** //
  27:eurorack/stmlib/utils/buffer_allocator.h **** // Stream buffer for serialization.
  28:eurorack/stmlib/utils/buffer_allocator.h **** 
  29:eurorack/stmlib/utils/buffer_allocator.h **** #ifndef STMLIB_UTILS_BUFFER_ALLOCATOR_H_
  30:eurorack/stmlib/utils/buffer_allocator.h **** #define STMLIB_UTILS_BUFFER_ALLOCATOR_H_
  31:eurorack/stmlib/utils/buffer_allocator.h **** 
  32:eurorack/stmlib/utils/buffer_allocator.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/utils/buffer_allocator.h **** 
  34:eurorack/stmlib/utils/buffer_allocator.h **** namespace stmlib {
  35:eurorack/stmlib/utils/buffer_allocator.h **** 
  36:eurorack/stmlib/utils/buffer_allocator.h **** class BufferAllocator {
  37:eurorack/stmlib/utils/buffer_allocator.h ****  public:
  38:eurorack/stmlib/utils/buffer_allocator.h ****   BufferAllocator() { }
  39:eurorack/stmlib/utils/buffer_allocator.h ****   ~BufferAllocator() { }
  40:eurorack/stmlib/utils/buffer_allocator.h ****   
  41:eurorack/stmlib/utils/buffer_allocator.h ****   BufferAllocator(void* buffer, size_t size) {
  42:eurorack/stmlib/utils/buffer_allocator.h ****     Init(buffer, size);
  43:eurorack/stmlib/utils/buffer_allocator.h ****   }
  44:eurorack/stmlib/utils/buffer_allocator.h ****   
  45:eurorack/stmlib/utils/buffer_allocator.h ****   inline void Init(void* buffer, size_t size) {
  46:eurorack/stmlib/utils/buffer_allocator.h ****     buffer_ = static_cast<uint8_t*>(buffer);
  47:eurorack/stmlib/utils/buffer_allocator.h ****     size_ = size;
  48:eurorack/stmlib/utils/buffer_allocator.h ****     Free();
  49:eurorack/stmlib/utils/buffer_allocator.h ****   }
  50:eurorack/stmlib/utils/buffer_allocator.h **** 
  51:eurorack/stmlib/utils/buffer_allocator.h ****   template<typename T>
  52:eurorack/stmlib/utils/buffer_allocator.h ****   inline T* Allocate() {
  53:eurorack/stmlib/utils/buffer_allocator.h ****     return Allocate<T>(1);
  54:eurorack/stmlib/utils/buffer_allocator.h ****   }
  55:eurorack/stmlib/utils/buffer_allocator.h ****   
  56:eurorack/stmlib/utils/buffer_allocator.h ****   template<typename T>
  57:eurorack/stmlib/utils/buffer_allocator.h ****   inline T* Allocate(size_t size) {
  58:eurorack/stmlib/utils/buffer_allocator.h ****     size_t size_bytes = sizeof(T) * size;
  59:eurorack/stmlib/utils/buffer_allocator.h ****     if (size_bytes <= free_) {
 208              		.loc 4 59 23 is_stmt 0 view .LVU52
 209 0040 B368     		ldr	r3, [r6, #8]
 210              	.LBE97:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 12


 211              	.LBE96:
 212              	.LBE95:
  45:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_f1_ = 0.0f;
 213              		.loc 1 45 16 view .LVU53
 214 0042 E566     		str	r5, [r4, #108]	@ float
  46:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_q_ = 0.0f;
 215              		.loc 1 46 3 is_stmt 1 view .LVU54
 216              	.LBB106:
 217              	.LBB103:
 218              	.LBB100:
 219              		.loc 4 59 5 is_stmt 0 view .LVU55
 220 0044 7F2B     		cmp	r3, #127
 221              	.LBE100:
 222              	.LBE103:
 223              	.LBE106:
  46:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_q_ = 0.0f;
 224              		.loc 1 46 16 view .LVU56
 225 0046 2567     		str	r5, [r4, #112]	@ float
  47:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_mode_ = 0.0f;
 226              		.loc 1 47 3 is_stmt 1 view .LVU57
  47:eurorack/plaits/dsp/engine/noise_engine.cc ****   previous_mode_ = 0.0f;
 227              		.loc 1 47 15 is_stmt 0 view .LVU58
 228 0048 6567     		str	r5, [r4, #116]	@ float
  48:eurorack/plaits/dsp/engine/noise_engine.cc **** 
 229              		.loc 1 48 3 is_stmt 1 view .LVU59
 230              	.LBB107:
 231              	.LBB104:
 232              	.LBB101:
 233              	.LBB98:
  60:eurorack/stmlib/utils/buffer_allocator.h ****       T* start = static_cast<T*>(static_cast<void*>(next_));
 234              		.loc 4 60 10 is_stmt 0 view .LVU60
 235 004a 86BF     		itte	hi
 236 004c 3268     		ldrhi	r2, [r6]
  61:eurorack/stmlib/utils/buffer_allocator.h ****       next_ += size_bytes;
  62:eurorack/stmlib/utils/buffer_allocator.h ****       free_ -= size_bytes;
 237              		.loc 4 62 13 view .LVU61
 238 004e 803B     		subhi	r3, r3, #128
 239              	.LBE98:
  63:eurorack/stmlib/utils/buffer_allocator.h ****       return start;
  64:eurorack/stmlib/utils/buffer_allocator.h ****     } else {
  65:eurorack/stmlib/utils/buffer_allocator.h ****       return NULL;
 240              		.loc 4 65 14 view .LVU62
 241 0050 0022     		movls	r2, #0
 242              	.LBE101:
 243              	.LBE104:
 244              	.LBE107:
  48:eurorack/plaits/dsp/engine/noise_engine.cc **** 
 245              		.loc 1 48 18 view .LVU63
 246 0052 A567     		str	r5, [r4, #120]	@ float
  50:eurorack/plaits/dsp/engine/noise_engine.cc **** }
 247              		.loc 1 50 3 is_stmt 1 view .LVU64
 248              	.LVL10:
 249              	.LBB108:
 250              	.LBI95:
  57:eurorack/stmlib/utils/buffer_allocator.h ****     size_t size_bytes = sizeof(T) * size;
 251              		.loc 4 57 13 view .LVU65
 252              	.LBB105:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 13


 253              	.LBB102:
 254              	.LBB99:
  61:eurorack/stmlib/utils/buffer_allocator.h ****       free_ -= size_bytes;
 255              		.loc 4 61 13 is_stmt 0 view .LVU66
 256 0054 82BF     		ittt	hi
 257 0056 02F18001 		addhi	r1, r2, #128
  62:eurorack/stmlib/utils/buffer_allocator.h ****       return start;
 258              		.loc 4 62 13 view .LVU67
 259 005a B360     		strhi	r3, [r6, #8]
  61:eurorack/stmlib/utils/buffer_allocator.h ****       free_ -= size_bytes;
 260              		.loc 4 61 13 view .LVU68
 261 005c 3160     		strhi	r1, [r6]
 262              	.LBE99:
 263              	.LBE102:
 264              	.LBE105:
 265              	.LBE108:
  50:eurorack/plaits/dsp/engine/noise_engine.cc **** }
 266              		.loc 1 50 16 view .LVU69
 267 005e E267     		str	r2, [r4, #124]
  51:eurorack/plaits/dsp/engine/noise_engine.cc **** 
 268              		.loc 1 51 1 view .LVU70
 269 0060 70BD     		pop	{r4, r5, r6, pc}
 270              	.LVL11:
 271              	.L9:
  51:eurorack/plaits/dsp/engine/noise_engine.cc **** 
 272              		.loc 1 51 1 view .LVU71
 273 0062 00BF     		.align	2
 274              	.L8:
 275 0064 6F12833A 		.word	981668463
 276              		.cfi_endproc
 277              	.LFE1561:
 279              		.section	.text._ZN6stmlib16SemitonesToRatioEf,"axG",%progbits,_ZN6stmlib16SemitonesToRatioEf,comda
 280              		.align	1
 281              		.weak	_ZN6stmlib16SemitonesToRatioEf
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	_ZN6stmlib16SemitonesToRatioEf:
 287              	.LVL12:
 288              	.LFB1493:
 289              		.file 5 "eurorack/stmlib/dsp/units.h"
   1:eurorack/stmlib/dsp/units.h **** // Copyright 2014 Emilie Gillet.
   2:eurorack/stmlib/dsp/units.h **** //
   3:eurorack/stmlib/dsp/units.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/units.h **** //
   5:eurorack/stmlib/dsp/units.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/units.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/units.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/units.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/units.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/units.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/units.h **** // 
  12:eurorack/stmlib/dsp/units.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/units.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/units.h **** // 
  15:eurorack/stmlib/dsp/units.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/units.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 14


  17:eurorack/stmlib/dsp/units.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/units.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/units.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/units.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/units.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/units.h **** // 
  23:eurorack/stmlib/dsp/units.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/units.h **** //
  25:eurorack/stmlib/dsp/units.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/units.h **** //
  27:eurorack/stmlib/dsp/units.h **** // Conversion from semitones to frequency ratio.
  28:eurorack/stmlib/dsp/units.h **** 
  29:eurorack/stmlib/dsp/units.h **** #ifndef STMLIB_DSP_UNITS_H_
  30:eurorack/stmlib/dsp/units.h **** #define STMLIB_DSP_UNITS_H_
  31:eurorack/stmlib/dsp/units.h **** 
  32:eurorack/stmlib/dsp/units.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/dsp/units.h **** #include "stmlib/dsp/dsp.h"
  34:eurorack/stmlib/dsp/units.h **** 
  35:eurorack/stmlib/dsp/units.h **** namespace stmlib {
  36:eurorack/stmlib/dsp/units.h **** 
  37:eurorack/stmlib/dsp/units.h **** extern const float lut_pitch_ratio_high[257];
  38:eurorack/stmlib/dsp/units.h **** extern const float lut_pitch_ratio_low[257];
  39:eurorack/stmlib/dsp/units.h **** 
  40:eurorack/stmlib/dsp/units.h **** inline float SemitonesToRatio(float semitones) {
 290              		.loc 5 40 48 is_stmt 1 view -0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 0
 293              		@ frame_needed = 0, uses_anonymous_args = 0
 294              		@ link register save eliminated.
  41:eurorack/stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 295              		.loc 5 41 3 view .LVU73
 296              		.loc 5 41 9 is_stmt 0 view .LVU74
 297 0000 DFED0E7A 		vldr.32	s15, .L11
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
  43:eurorack/stmlib/dsp/units.h **** 
  44:eurorack/stmlib/dsp/units.h ****   return lut_pitch_ratio_high[pitch_integral] * \
  45:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 298              		.loc 5 45 74 view .LVU75
 299 0004 0E4A     		ldr	r2, .L11+4
  41:eurorack/stmlib/dsp/units.h ****   float pitch = semitones + 128.0f;
 300              		.loc 5 41 9 view .LVU76
 301 0006 30EE270A 		vadd.f32	s0, s0, s15
 302              	.LVL13:
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 303              		.loc 5 42 3 is_stmt 1 view .LVU77
 304 000a FDEEC07A 		vcvt.s32.f32	s15, s0
 305              	.LVL14:
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 306              		.loc 5 42 3 view .LVU78
  44:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 307              		.loc 5 44 3 view .LVU79
  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 308              		.loc 5 42 3 is_stmt 0 view .LVU80
 309 000e B8EEE77A 		vcvt.f32.s32	s14, s15
  44:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 310              		.loc 5 44 45 view .LVU81
 311 0012 17EE901A 		vmov	r1, s15	@ int
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 15


  42:eurorack/stmlib/dsp/units.h ****   MAKE_INTEGRAL_FRACTIONAL(pitch)
 312              		.loc 5 42 3 view .LVU82
 313 0016 30EE470A 		vsub.f32	s0, s0, s14
 314              	.LVL15:
 315              		.loc 5 45 27 view .LVU83
 316 001a BEEECC0A 		vcvt.s32.f32	s0, s0, #8
 317              	.LVL16:
 318              		.loc 5 45 74 view .LVU84
 319 001e 10EE103A 		vmov	r3, s0	@ int
 320 0022 02EB8302 		add	r2, r2, r3, lsl #2
  44:eurorack/stmlib/dsp/units.h ****       lut_pitch_ratio_low[static_cast<int32_t>(pitch_fractional * 256.0f)];
 321              		.loc 5 44 45 view .LVU85
 322 0026 074B     		ldr	r3, .L11+8
 323 0028 03EB8103 		add	r3, r3, r1, lsl #2
 324              		.loc 5 45 74 view .LVU86
 325 002c 92ED000A 		vldr.32	s0, [r2]
 326 0030 D3ED007A 		vldr.32	s15, [r3]
 327              	.LVL17:
  46:eurorack/stmlib/dsp/units.h **** }
 328              		.loc 5 46 1 view .LVU87
 329 0034 20EE270A 		vmul.f32	s0, s0, s15
 330 0038 7047     		bx	lr
 331              	.L12:
 332 003a 00BF     		.align	2
 333              	.L11:
 334 003c 00000043 		.word	1124073472
 335 0040 00000000 		.word	_ZN6stmlib19lut_pitch_ratio_lowE
 336 0044 00000000 		.word	_ZN6stmlib20lut_pitch_ratio_highE
 337              		.cfi_endproc
 338              	.LFE1493:
 340              		.section	.text._ZN6plaits15NoteToFrequencyEf,"axG",%progbits,_ZN6plaits15NoteToFrequencyEf,comdat
 341              		.align	1
 342              		.weak	_ZN6plaits15NoteToFrequencyEf
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	_ZN6plaits15NoteToFrequencyEf:
 348              	.LVL18:
 349              	.LFB1510:
 350              		.file 6 "eurorack/plaits/dsp/engine/engine.h"
   1:eurorack/plaits/dsp/engine/engine.h **** // Copyright 2016 Emilie Gillet.
   2:eurorack/plaits/dsp/engine/engine.h **** //
   3:eurorack/plaits/dsp/engine/engine.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/plaits/dsp/engine/engine.h **** //
   5:eurorack/plaits/dsp/engine/engine.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/plaits/dsp/engine/engine.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/plaits/dsp/engine/engine.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/plaits/dsp/engine/engine.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/plaits/dsp/engine/engine.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/plaits/dsp/engine/engine.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/plaits/dsp/engine/engine.h **** // 
  12:eurorack/plaits/dsp/engine/engine.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/plaits/dsp/engine/engine.h **** // all copies or substantial portions of the Software.
  14:eurorack/plaits/dsp/engine/engine.h **** // 
  15:eurorack/plaits/dsp/engine/engine.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/plaits/dsp/engine/engine.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/plaits/dsp/engine/engine.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 16


  18:eurorack/plaits/dsp/engine/engine.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/plaits/dsp/engine/engine.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/plaits/dsp/engine/engine.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/plaits/dsp/engine/engine.h **** // THE SOFTWARE.
  22:eurorack/plaits/dsp/engine/engine.h **** // 
  23:eurorack/plaits/dsp/engine/engine.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/plaits/dsp/engine/engine.h **** //
  25:eurorack/plaits/dsp/engine/engine.h **** // -----------------------------------------------------------------------------
  26:eurorack/plaits/dsp/engine/engine.h **** //
  27:eurorack/plaits/dsp/engine/engine.h **** // Base class for all engines.
  28:eurorack/plaits/dsp/engine/engine.h **** 
  29:eurorack/plaits/dsp/engine/engine.h **** #ifndef PLAITS_DSP_ENGINE_ENGINE_H_
  30:eurorack/plaits/dsp/engine/engine.h **** #define PLAITS_DSP_ENGINE_ENGINE_H_
  31:eurorack/plaits/dsp/engine/engine.h **** 
  32:eurorack/plaits/dsp/engine/engine.h **** #include "plaits/dsp/dsp.h"
  33:eurorack/plaits/dsp/engine/engine.h **** 
  34:eurorack/plaits/dsp/engine/engine.h **** #include "stmlib/dsp/units.h"
  35:eurorack/plaits/dsp/engine/engine.h **** #include "stmlib/utils/buffer_allocator.h"
  36:eurorack/plaits/dsp/engine/engine.h **** 
  37:eurorack/plaits/dsp/engine/engine.h **** namespace plaits {
  38:eurorack/plaits/dsp/engine/engine.h **** 
  39:eurorack/plaits/dsp/engine/engine.h **** inline float NoteToFrequency(float midi_note) {
 351              		.loc 6 39 47 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
  40:eurorack/plaits/dsp/engine/engine.h ****   midi_note -= 9.0f;
 355              		.loc 6 40 3 view .LVU89
 356              		.loc 6 40 13 is_stmt 0 view .LVU90
 357 0000 F2EE027A 		vmov.f32	s15, #9.0e+0
  39:eurorack/plaits/dsp/engine/engine.h ****   midi_note -= 9.0f;
 358              		.loc 6 39 47 view .LVU91
 359 0004 08B5     		push	{r3, lr}
 360              		.cfi_def_cfa_offset 8
 361              		.cfi_offset 3, -8
 362              		.cfi_offset 14, -4
 363              		.loc 6 40 13 view .LVU92
 364 0006 30EE670A 		vsub.f32	s0, s0, s15
 365              	.LVL19:
  41:eurorack/plaits/dsp/engine/engine.h ****   CONSTRAIN(midi_note, -128.0f, 127.0f);
 366              		.loc 6 41 3 is_stmt 1 view .LVU93
 367 000a DFED0C7A 		vldr.32	s15, .L18
 368 000e B4EEE70A 		vcmpe.f32	s0, s15
 369 0012 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 370 0016 0ED4     		bmi	.L16
 371              		.loc 6 41 3 discriminator 2 view .LVU94
 372 0018 DFED097A 		vldr.32	s15, .L18+4
 373 001c B4EE670A 		vcmp.f32	s0, s15
 374 0020 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 375 0024 37FE800A 		vselgt.f32	s0, s15, s0
 376              	.LVL20:
 377              	.L14:
 378              		.loc 6 41 40 discriminator 6 view .LVU95
  42:eurorack/plaits/dsp/engine/engine.h ****   return a0 * 0.25f * stmlib::SemitonesToRatio(midi_note);
 379              		.loc 6 42 3 discriminator 6 view .LVU96
 380              		.loc 6 42 47 is_stmt 0 discriminator 6 view .LVU97
 381 0028 FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 17


 382              	.LVL21:
  43:eurorack/plaits/dsp/engine/engine.h **** }
 383              		.loc 6 43 1 discriminator 6 view .LVU98
 384 002c DFED057A 		vldr.32	s15, .L18+8
 385 0030 20EE270A 		vmul.f32	s0, s0, s15
 386 0034 08BD     		pop	{r3, pc}
 387              	.LVL22:
 388              	.L16:
  41:eurorack/plaits/dsp/engine/engine.h ****   CONSTRAIN(midi_note, -128.0f, 127.0f);
 389              		.loc 6 41 3 view .LVU99
 390 0036 B0EE670A 		vmov.f32	s0, s15
 391              	.LVL23:
  41:eurorack/plaits/dsp/engine/engine.h ****   CONSTRAIN(midi_note, -128.0f, 127.0f);
 392              		.loc 6 41 3 view .LVU100
 393 003a F5E7     		b	.L14
 394              	.L19:
 395              		.align	2
 396              	.L18:
 397 003c 000000C3 		.word	-1023410176
 398 0040 0000FE42 		.word	1123942400
 399 0044 51969639 		.word	966170193
 400              		.cfi_endproc
 401              	.LFE1510:
 403              		.section	.text._ZN6plaits12ClockedNoise6RenderEbfPfj,"axG",%progbits,_ZN6plaits12ClockedNoise6Rend
 404              		.align	1
 405              		.weak	_ZN6plaits12ClockedNoise6RenderEbfPfj
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 410              	_ZN6plaits12ClockedNoise6RenderEbfPfj:
 411              	.LVL24:
 412              	.LFB1554:
  49:eurorack/plaits/dsp/noise/clocked_noise.h ****   }
  50:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  51:eurorack/plaits/dsp/noise/clocked_noise.h ****   void Render(bool sync, float frequency, float* out, size_t size) {
 413              		.loc 3 51 8 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
  52:eurorack/plaits/dsp/noise/clocked_noise.h ****     CONSTRAIN(frequency, 0.0f, 1.0f);
 417              		.loc 3 52 5 view .LVU102
 418 0000 B5EEC00A 		vcmpe.f32	s0, #0
 419 0004 DFED493A 		vldr.32	s7, .L42
  51:eurorack/plaits/dsp/noise/clocked_noise.h ****     CONSTRAIN(frequency, 0.0f, 1.0f);
 420              		.loc 3 51 8 is_stmt 0 view .LVU103
 421 0008 70B5     		push	{r4, r5, r6, lr}
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 4, -16
 424              		.cfi_offset 5, -12
 425              		.cfi_offset 6, -8
 426              		.cfi_offset 14, -4
 427              		.loc 3 52 5 view .LVU104
 428 000a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 429 000e 5ED4     		bmi	.L31
 430              		.loc 3 52 5 is_stmt 1 discriminator 2 view .LVU105
 431 0010 F7EE007A 		vmov.f32	s15, #1.0e+0
 432 0014 B4EE670A 		vcmp.f32	s0, s15
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 18


 433 0018 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 434 001c 37FE800A 		vselgt.f32	s0, s15, s0
 435              	.LVL25:
 436              	.L21:
 437              		.loc 3 52 37 discriminator 6 view .LVU106
  53:eurorack/plaits/dsp/noise/clocked_noise.h ****     
  54:eurorack/plaits/dsp/noise/clocked_noise.h ****     stmlib::ParameterInterpolator fm(&frequency_, frequency, size);
 438              		.loc 3 54 5 discriminator 6 view .LVU107
 439              	.LBB129:
 440              	.LBI129:
 441              		.file 7 "eurorack/stmlib/dsp/parameter_interpolator.h"
   1:eurorack/stmlib/dsp/parameter_interpolator.h **** // Copyright 2015 Emilie Gillet.
   2:eurorack/stmlib/dsp/parameter_interpolator.h **** //
   3:eurorack/stmlib/dsp/parameter_interpolator.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/parameter_interpolator.h **** //
   5:eurorack/stmlib/dsp/parameter_interpolator.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/parameter_interpolator.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/parameter_interpolator.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/parameter_interpolator.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/parameter_interpolator.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/parameter_interpolator.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/parameter_interpolator.h **** // 
  12:eurorack/stmlib/dsp/parameter_interpolator.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/parameter_interpolator.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/parameter_interpolator.h **** // 
  15:eurorack/stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/parameter_interpolator.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/parameter_interpolator.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/parameter_interpolator.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/parameter_interpolator.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/parameter_interpolator.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/parameter_interpolator.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/parameter_interpolator.h **** // 
  23:eurorack/stmlib/dsp/parameter_interpolator.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/parameter_interpolator.h **** //
  25:eurorack/stmlib/dsp/parameter_interpolator.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/parameter_interpolator.h **** //
  27:eurorack/stmlib/dsp/parameter_interpolator.h **** // Linear interpolation of parameters in rendering loops.
  28:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  29:eurorack/stmlib/dsp/parameter_interpolator.h **** #ifndef STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  30:eurorack/stmlib/dsp/parameter_interpolator.h **** #define STMLIB_DSP_PARAMETER_INTERPOLATOR_H_
  31:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  32:eurorack/stmlib/dsp/parameter_interpolator.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  34:eurorack/stmlib/dsp/parameter_interpolator.h **** namespace stmlib {
  35:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  36:eurorack/stmlib/dsp/parameter_interpolator.h **** class ParameterInterpolator {
  37:eurorack/stmlib/dsp/parameter_interpolator.h ****  public:
  38:eurorack/stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator() { }
  39:eurorack/stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, size_t size) {
 442              		.loc 7 39 3 discriminator 6 view .LVU108
 443              	.LBE129:
  40:eurorack/stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 444              		.loc 7 40 5 discriminator 6 view .LVU109
 445              	.LBB136:
 446              	.LBB130:
 447              	.LBI130:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 19


  41:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  42:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  43:eurorack/stmlib/dsp/parameter_interpolator.h ****   ParameterInterpolator(float* state, float new_value, float step) {
  44:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
  45:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
  46:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) * step;
  47:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  48:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****   ~ParameterInterpolator() {
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
  51:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  52:eurorack/stmlib/dsp/parameter_interpolator.h ****   
  53:eurorack/stmlib/dsp/parameter_interpolator.h ****   inline void Init(float* state, float new_value, size_t size) {
 448              		.loc 7 53 15 discriminator 6 view .LVU110
 449              	.LBB131:
  54:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 450              		.loc 7 54 5 discriminator 6 view .LVU111
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 451              		.loc 7 55 5 discriminator 6 view .LVU112
 452              		.loc 7 55 14 is_stmt 0 discriminator 6 view .LVU113
 453 0020 D0ED035A 		vldr.32	s11, [r0, #12]
 454              	.LVL26:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 455              		.loc 7 56 5 is_stmt 1 discriminator 6 view .LVU114
 456              		.loc 7 56 41 is_stmt 0 discriminator 6 view .LVU115
 457 0024 07EE903A 		vmov	s15, r3	@ int
 458              	.LBE131:
 459              	.LBE130:
 460              	.LBE136:
  55:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  56:eurorack/plaits/dsp/noise/clocked_noise.h ****     float next_sample = next_sample_;
 461              		.loc 3 56 11 discriminator 6 view .LVU116
 462 0028 90ED027A 		vldr.32	s14, [r0, #8]
 463              	.LBB137:
 464              	.LBB134:
 465              	.LBB132:
 466              		.loc 7 56 29 discriminator 6 view .LVU117
 467 002c 30EE650A 		vsub.f32	s0, s0, s11
 468              	.LVL27:
 469              		.loc 7 56 29 discriminator 6 view .LVU118
 470              	.LBE132:
 471              	.LBE134:
 472              	.LBE137:
  57:eurorack/plaits/dsp/noise/clocked_noise.h ****     float sample = sample_;
 473              		.loc 3 57 11 discriminator 6 view .LVU119
 474 0030 90ED015A 		vldr.32	s10, [r0, #4]
 475              	.LBB138:
 476              	.LBB135:
 477              	.LBB133:
 478              		.loc 7 56 41 discriminator 6 view .LVU120
 479 0034 F8EE677A 		vcvt.f32.u32	s15, s15
 480              		.loc 7 56 39 discriminator 6 view .LVU121
 481 0038 80EE273A 		vdiv.f32	s6, s0, s15
 482              	.LVL28:
 483              		.loc 7 56 39 discriminator 6 view .LVU122
 484              	.LBE133:
 485              	.LBE135:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 20


 486              	.LBE138:
  56:eurorack/plaits/dsp/noise/clocked_noise.h ****     float sample = sample_;
 487              		.loc 3 56 5 is_stmt 1 discriminator 6 view .LVU123
 488              		.loc 3 57 5 discriminator 6 view .LVU124
  58:eurorack/plaits/dsp/noise/clocked_noise.h ****     
  59:eurorack/plaits/dsp/noise/clocked_noise.h ****     if (sync) {
 489              		.loc 3 59 5 discriminator 6 view .LVU125
 490 003c 11B1     		cbz	r1, .L23
  60:eurorack/plaits/dsp/noise/clocked_noise.h ****       phase_ = 1.0f;
 491              		.loc 3 60 7 view .LVU126
 492              		.loc 3 60 14 is_stmt 0 view .LVU127
 493 003e 4FF07E51 		mov	r1, #1065353216
 494              	.LVL29:
 495              		.loc 3 60 14 view .LVU128
 496 0042 0160     		str	r1, [r0]	@ float
 497              	.L23:
 498 0044 3A4C     		ldr	r4, .L42+4
  52:eurorack/plaits/dsp/noise/clocked_noise.h ****     
 499              		.loc 3 52 5 view .LVU129
 500 0046 0025     		movs	r5, #0
 501 0048 2168     		ldr	r1, [r4]
 502              	.LVL30:
 503              	.L29:
  61:eurorack/plaits/dsp/noise/clocked_noise.h ****     }
  62:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  63:eurorack/plaits/dsp/noise/clocked_noise.h ****     while (size--) {
 504              		.loc 3 63 5 is_stmt 1 view .LVU130
 505              		.loc 3 63 16 view .LVU131
 506 004a 013B     		subs	r3, r3, #1
 507              	.LVL31:
 508              		.loc 3 63 16 is_stmt 0 view .LVU132
 509 004c 64D3     		bcc	.L24
 510              	.LBB139:
  64:eurorack/plaits/dsp/noise/clocked_noise.h ****       float this_sample = next_sample;
 511              		.loc 3 64 7 is_stmt 1 view .LVU133
 512              	.LVL32:
  65:eurorack/plaits/dsp/noise/clocked_noise.h ****       next_sample = 0.0f;
 513              		.loc 3 65 7 view .LVU134
  66:eurorack/plaits/dsp/noise/clocked_noise.h **** 
  67:eurorack/plaits/dsp/noise/clocked_noise.h ****       const float frequency = fm.Next();
 514              		.loc 3 67 7 view .LVU135
 515              	.LBB140:
 516              	.LBI140:
  57:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
  58:eurorack/stmlib/dsp/parameter_interpolator.h **** 
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****   inline float Next() {
 517              		.loc 7 59 16 view .LVU136
 518              	.LBB141:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 519              		.loc 7 60 5 view .LVU137
 520              	.LBE141:
 521              	.LBE140:
 522              	.LBB143:
 523              	.LBB144:
 524              	.LBB145:
 525              	.LBB146:
 526              		.file 8 "eurorack/stmlib/utils/random.h"
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 21


   1:eurorack/stmlib/utils/random.h **** // Copyright 2012 Emilie Gillet.
   2:eurorack/stmlib/utils/random.h **** //
   3:eurorack/stmlib/utils/random.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/utils/random.h **** //
   5:eurorack/stmlib/utils/random.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/utils/random.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/utils/random.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/utils/random.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/utils/random.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/utils/random.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/utils/random.h **** // 
  12:eurorack/stmlib/utils/random.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/utils/random.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/utils/random.h **** // 
  15:eurorack/stmlib/utils/random.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/utils/random.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/utils/random.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/utils/random.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/utils/random.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/utils/random.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/utils/random.h **** // THE SOFTWARE.
  22:eurorack/stmlib/utils/random.h **** // 
  23:eurorack/stmlib/utils/random.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/utils/random.h **** //
  25:eurorack/stmlib/utils/random.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/utils/random.h **** //
  27:eurorack/stmlib/utils/random.h **** // Fast 16-bit pseudo random number generator.
  28:eurorack/stmlib/utils/random.h **** 
  29:eurorack/stmlib/utils/random.h **** #ifndef STMLIB_UTILS_RANDOM_H_
  30:eurorack/stmlib/utils/random.h **** #define STMLIB_UTILS_RANDOM_H_
  31:eurorack/stmlib/utils/random.h **** 
  32:eurorack/stmlib/utils/random.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/utils/random.h **** 
  34:eurorack/stmlib/utils/random.h **** namespace stmlib {
  35:eurorack/stmlib/utils/random.h **** 
  36:eurorack/stmlib/utils/random.h **** class Random {
  37:eurorack/stmlib/utils/random.h ****  public:
  38:eurorack/stmlib/utils/random.h ****   static inline uint32_t state() { return rng_state_; }
  39:eurorack/stmlib/utils/random.h **** 
  40:eurorack/stmlib/utils/random.h ****   static inline void Seed(uint32_t seed) {
  41:eurorack/stmlib/utils/random.h ****     rng_state_ = seed;
  42:eurorack/stmlib/utils/random.h ****   }
  43:eurorack/stmlib/utils/random.h **** 
  44:eurorack/stmlib/utils/random.h ****   static inline uint32_t GetWord() {
  45:eurorack/stmlib/utils/random.h ****     rng_state_ = rng_state_ * 1664525L + 1013904223L;
 527              		.loc 8 45 40 is_stmt 0 view .LVU138
 528 004e 394E     		ldr	r6, .L42+8
 529              	.LBE146:
 530              	.LBE145:
 531              	.LBE144:
 532              	.LBE143:
  68:eurorack/plaits/dsp/noise/clocked_noise.h ****       const float raw_sample = stmlib::Random::GetFloat() * 2.0f - 1.0f;
 533              		.loc 3 68 68 view .LVU139
 534 0050 FFEE004A 		vmov.f32	s9, #-1.0e+0
 535              	.LBB156:
 536              	.LBB153:
 537              	.LBB150:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 22


 538              	.LBB147:
 539              		.loc 8 45 40 view .LVU140
 540 0054 384D     		ldr	r5, .L42+12
 541              	.LBE147:
 542              	.LBE150:
 543              	.LBE153:
 544              	.LBE156:
 545              	.LBB157:
 546              	.LBB142:
 547              		.loc 7 60 12 view .LVU141
 548 0056 75EE835A 		vadd.f32	s11, s11, s6
 549              	.LVL33:
  61:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 550              		.loc 7 61 5 is_stmt 1 view .LVU142
 551              		.loc 7 61 5 is_stmt 0 view .LVU143
 552              	.LBE142:
 553              	.LBE157:
 554              		.loc 3 68 7 is_stmt 1 view .LVU144
 555              	.LBB158:
 556              	.LBI143:
  46:eurorack/stmlib/utils/random.h ****     return state();
  47:eurorack/stmlib/utils/random.h ****   }
  48:eurorack/stmlib/utils/random.h ****   
  49:eurorack/stmlib/utils/random.h ****   static inline int16_t GetSample() {
  50:eurorack/stmlib/utils/random.h ****     return static_cast<int16_t>(GetWord() >> 16);
  51:eurorack/stmlib/utils/random.h ****   }
  52:eurorack/stmlib/utils/random.h **** 
  53:eurorack/stmlib/utils/random.h ****   static inline float GetFloat() {
 557              		.loc 8 53 23 view .LVU145
 558              	.LBB154:
  54:eurorack/stmlib/utils/random.h ****     return static_cast<float>(GetWord()) / 4294967296.0f;
 559              		.loc 8 54 5 view .LVU146
 560              	.LBB151:
 561              	.LBI145:
  44:eurorack/stmlib/utils/random.h ****     rng_state_ = rng_state_ * 1664525L + 1013904223L;
 562              		.loc 8 44 26 view .LVU147
 563              	.LBB148:
  45:eurorack/stmlib/utils/random.h ****     return state();
 564              		.loc 8 45 5 view .LVU148
 565              	.LBE148:
 566              	.LBE151:
 567              		.loc 8 54 44 is_stmt 0 view .LVU149
 568 005a DFED386A 		vldr.32	s13, .L42+16
 569              	.LBB152:
 570              	.LBB149:
  45:eurorack/stmlib/utils/random.h ****     return state();
 571              		.loc 8 45 40 view .LVU150
 572 005e 06FB0151 		mla	r1, r6, r1, r5
  46:eurorack/stmlib/utils/random.h ****   }
 573              		.loc 8 46 5 is_stmt 1 view .LVU151
 574              	.LBE149:
 575              	.LBE152:
 576              	.LBE154:
 577              	.LBE158:
 578              	.LBE139:
  38:eurorack/stmlib/utils/random.h **** 
 579              		.loc 8 38 36 view .LVU152
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 23


 580              	.LBB171:
 581              	.LBB159:
 582              	.LBB155:
 583              		.loc 8 54 12 is_stmt 0 view .LVU153
 584 0062 07EE901A 		vmov	s15, r1	@ int
 585 0066 F8EE677A 		vcvt.f32.u32	s15, s15
 586              		.loc 8 54 44 view .LVU154
 587 006a 67EEA67A 		vmul.f32	s15, s15, s13
 588              	.LBE155:
 589              	.LBE159:
 590              		.loc 3 68 68 view .LVU155
 591 006e F0EE006A 		vmov.f32	s13, #2.0e+0
 592 0072 E7EEA64A 		vfma.f32	s9, s15, s13
 593              	.LVL34:
  69:eurorack/plaits/dsp/noise/clocked_noise.h ****       float raw_amount = 4.0f * (frequency - 0.25f);
 594              		.loc 3 69 7 is_stmt 1 view .LVU156
 595              		.loc 3 69 44 is_stmt 0 view .LVU157
 596 0076 F5EE007A 		vmov.f32	s15, #2.5e-1
 597              		.loc 3 69 13 view .LVU158
 598 007a F1EE006A 		vmov.f32	s13, #4.0e+0
 599              		.loc 3 69 44 view .LVU159
 600 007e 75EEE77A 		vsub.f32	s15, s11, s15
 601              		.loc 3 69 13 view .LVU160
 602 0082 67EEA67A 		vmul.f32	s15, s15, s13
 603              	.LVL35:
  70:eurorack/plaits/dsp/noise/clocked_noise.h ****       CONSTRAIN(raw_amount, 0.0f, 1.0f);
 604              		.loc 3 70 7 is_stmt 1 view .LVU161
 605 0086 F7EE006A 		vmov.f32	s13, #1.0e+0
 606 008a F5EEC07A 		vcmpe.f32	s15, #0
 607 008e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 608 0092 1FD4     		bmi	.L32
 609              		.loc 3 70 7 discriminator 2 view .LVU162
 610 0094 F4EE667A 		vcmp.f32	s15, s13
 611 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 612 009c 76FEA77A 		vselgt.f32	s15, s13, s15
 613              	.LVL36:
 614              	.L25:
 615              		.loc 3 70 40 discriminator 6 view .LVU163
  71:eurorack/plaits/dsp/noise/clocked_noise.h ****       
  72:eurorack/plaits/dsp/noise/clocked_noise.h ****       phase_ += frequency;
 616              		.loc 3 72 7 discriminator 6 view .LVU164
 617              		.loc 3 72 14 is_stmt 0 discriminator 6 view .LVU165
 618 00a0 90ED006A 		vldr.32	s12, [r0]
 619 00a4 35EE866A 		vadd.f32	s12, s11, s12
  73:eurorack/plaits/dsp/noise/clocked_noise.h ****       
  74:eurorack/plaits/dsp/noise/clocked_noise.h ****       if (phase_ >= 1.0f) {
 620              		.loc 3 74 7 is_stmt 1 discriminator 6 view .LVU166
 621              	.LBB160:
 622 00a8 B4EEE66A 		vcmpe.f32	s12, s13
 623 00ac F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 624 00b0 13DA     		bge	.L27
 625              	.LBE160:
  72:eurorack/plaits/dsp/noise/clocked_noise.h ****       
 626              		.loc 3 72 14 is_stmt 0 view .LVU167
 627 00b2 80ED006A 		vstr.32	s12, [r0]
  65:eurorack/plaits/dsp/noise/clocked_noise.h **** 
 628              		.loc 3 65 19 view .LVU168
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 24


 629 00b6 9FED1D6A 		vldr.32	s12, .L42
 630              	.LVL37:
 631              	.L28:
  75:eurorack/plaits/dsp/noise/clocked_noise.h ****         phase_ -= 1.0f;
  76:eurorack/plaits/dsp/noise/clocked_noise.h ****         float t = phase_ / frequency;
  77:eurorack/plaits/dsp/noise/clocked_noise.h ****         float new_sample = raw_sample;
  78:eurorack/plaits/dsp/noise/clocked_noise.h ****         float discontinuity = new_sample - sample;
  79:eurorack/plaits/dsp/noise/clocked_noise.h ****         this_sample += discontinuity * stmlib::ThisBlepSample(t);
  80:eurorack/plaits/dsp/noise/clocked_noise.h ****         next_sample += discontinuity * stmlib::NextBlepSample(t);
  81:eurorack/plaits/dsp/noise/clocked_noise.h ****         sample = new_sample;
  82:eurorack/plaits/dsp/noise/clocked_noise.h ****       }
  83:eurorack/plaits/dsp/noise/clocked_noise.h ****       next_sample += sample;
 632              		.loc 3 83 7 is_stmt 1 view .LVU169
  84:eurorack/plaits/dsp/noise/clocked_noise.h ****       *out++ = this_sample + raw_amount * (raw_sample - this_sample);
 633              		.loc 3 84 7 view .LVU170
 634              		.loc 3 84 55 is_stmt 0 view .LVU171
 635 00ba 74EEC74A 		vsub.f32	s9, s9, s14
 636              	.LVL38:
 637              		.loc 3 84 55 view .LVU172
 638              	.LBE171:
  63:eurorack/plaits/dsp/noise/clocked_noise.h ****       float this_sample = next_sample;
 639              		.loc 3 63 5 view .LVU173
 640 00be 0125     		movs	r5, #1
 641              	.LBB172:
 642              		.loc 3 84 28 view .LVU174
 643 00c0 A4EEA77A 		vfma.f32	s14, s9, s15
 644              	.LVL39:
 645              		.loc 3 84 14 view .LVU175
 646 00c4 A2EC017A 		vstmia.32	r2!, {s14}
 647              	.LVL40:
  83:eurorack/plaits/dsp/noise/clocked_noise.h ****       *out++ = this_sample + raw_amount * (raw_sample - this_sample);
 648              		.loc 3 83 19 view .LVU176
 649 00c8 36EE057A 		vadd.f32	s14, s12, s10
 650              	.LVL41:
  83:eurorack/plaits/dsp/noise/clocked_noise.h ****       *out++ = this_sample + raw_amount * (raw_sample - this_sample);
 651              		.loc 3 83 19 view .LVU177
 652              	.LBE172:
  63:eurorack/plaits/dsp/noise/clocked_noise.h ****       float this_sample = next_sample;
 653              		.loc 3 63 5 view .LVU178
 654 00cc BDE7     		b	.L29
 655              	.LVL42:
 656              	.L31:
  52:eurorack/plaits/dsp/noise/clocked_noise.h ****     
 657              		.loc 3 52 5 view .LVU179
 658 00ce B0EE630A 		vmov.f32	s0, s7
 659              	.LVL43:
  52:eurorack/plaits/dsp/noise/clocked_noise.h ****     
 660              		.loc 3 52 5 view .LVU180
 661 00d2 A5E7     		b	.L21
 662              	.LVL44:
 663              	.L32:
 664              	.LBB173:
  70:eurorack/plaits/dsp/noise/clocked_noise.h ****       
 665              		.loc 3 70 7 view .LVU181
 666 00d4 DFED157A 		vldr.32	s15, .L42
 667              	.LVL45:
  70:eurorack/plaits/dsp/noise/clocked_noise.h ****       
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 25


 668              		.loc 3 70 7 view .LVU182
 669 00d8 E2E7     		b	.L25
 670              	.LVL46:
 671              	.L27:
 672              	.LBB170:
 673              	.LBB161:
  75:eurorack/plaits/dsp/noise/clocked_noise.h ****         float t = phase_ / frequency;
 674              		.loc 3 75 9 is_stmt 1 view .LVU183
  75:eurorack/plaits/dsp/noise/clocked_noise.h ****         float t = phase_ / frequency;
 675              		.loc 3 75 16 is_stmt 0 view .LVU184
 676 00da 36EE666A 		vsub.f32	s12, s12, s13
  78:eurorack/plaits/dsp/noise/clocked_noise.h ****         this_sample += discontinuity * stmlib::ThisBlepSample(t);
 677              		.loc 3 78 15 view .LVU185
 678 00de 34EEC55A 		vsub.f32	s10, s9, s10
 679              	.LVL47:
  76:eurorack/plaits/dsp/noise/clocked_noise.h ****         float new_sample = raw_sample;
 680              		.loc 3 76 15 view .LVU186
 681 00e2 86EE254A 		vdiv.f32	s8, s12, s11
  75:eurorack/plaits/dsp/noise/clocked_noise.h ****         float t = phase_ / frequency;
 682              		.loc 3 75 16 view .LVU187
 683 00e6 80ED006A 		vstr.32	s12, [r0]
  76:eurorack/plaits/dsp/noise/clocked_noise.h ****         float new_sample = raw_sample;
 684              		.loc 3 76 9 is_stmt 1 view .LVU188
 685              	.LVL48:
  77:eurorack/plaits/dsp/noise/clocked_noise.h ****         float discontinuity = new_sample - sample;
 686              		.loc 3 77 9 view .LVU189
  78:eurorack/plaits/dsp/noise/clocked_noise.h ****         this_sample += discontinuity * stmlib::ThisBlepSample(t);
 687              		.loc 3 78 9 view .LVU190
  79:eurorack/plaits/dsp/noise/clocked_noise.h ****         next_sample += discontinuity * stmlib::NextBlepSample(t);
 688              		.loc 3 79 9 view .LVU191
 689              	.LBB162:
 690              	.LBI162:
 691              		.file 9 "eurorack/stmlib/dsp/polyblep.h"
   1:eurorack/stmlib/dsp/polyblep.h **** // Copyright 2017 Emilie Gillet.
   2:eurorack/stmlib/dsp/polyblep.h **** //
   3:eurorack/stmlib/dsp/polyblep.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/polyblep.h **** //
   5:eurorack/stmlib/dsp/polyblep.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/polyblep.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/polyblep.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/polyblep.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/polyblep.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/polyblep.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/polyblep.h **** // 
  12:eurorack/stmlib/dsp/polyblep.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/polyblep.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/polyblep.h **** // 
  15:eurorack/stmlib/dsp/polyblep.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/polyblep.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/polyblep.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/polyblep.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/polyblep.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/polyblep.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/polyblep.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/polyblep.h **** // 
  23:eurorack/stmlib/dsp/polyblep.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/polyblep.h **** //
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 26


  25:eurorack/stmlib/dsp/polyblep.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/polyblep.h **** //
  27:eurorack/stmlib/dsp/polyblep.h **** // Polynomial approximation of band-limited step for band-limited waveform
  28:eurorack/stmlib/dsp/polyblep.h **** // synthesis.
  29:eurorack/stmlib/dsp/polyblep.h **** 
  30:eurorack/stmlib/dsp/polyblep.h **** #ifndef STMLIB_DSP_POLYBLEP_H_
  31:eurorack/stmlib/dsp/polyblep.h **** #define STMLIB_DSP_POLYBLEP_H_
  32:eurorack/stmlib/dsp/polyblep.h **** 
  33:eurorack/stmlib/dsp/polyblep.h **** #include "stmlib/stmlib.h"
  34:eurorack/stmlib/dsp/polyblep.h **** 
  35:eurorack/stmlib/dsp/polyblep.h **** namespace stmlib {
  36:eurorack/stmlib/dsp/polyblep.h **** 
  37:eurorack/stmlib/dsp/polyblep.h **** inline float ThisBlepSample(float t) {
 692              		.loc 9 37 14 view .LVU192
 693              	.LBB163:
  38:eurorack/stmlib/dsp/polyblep.h ****   return 0.5f * t * t;
 694              		.loc 9 38 3 view .LVU193
 695              		.loc 9 38 15 is_stmt 0 view .LVU194
 696 00ea B6EE006A 		vmov.f32	s12, #5.0e-1
 697 00ee 24EE066A 		vmul.f32	s12, s8, s12
 698              	.LBE163:
 699              	.LBE162:
 700              	.LBB165:
 701              	.LBB166:
  39:eurorack/stmlib/dsp/polyblep.h **** }
  40:eurorack/stmlib/dsp/polyblep.h **** 
  41:eurorack/stmlib/dsp/polyblep.h **** inline float NextBlepSample(float t) {
  42:eurorack/stmlib/dsp/polyblep.h ****   t = 1.0f - t;
 702              		.loc 9 42 5 view .LVU195
 703 00f2 76EEC46A 		vsub.f32	s13, s13, s8
 704              	.LBE166:
 705              	.LBE165:
 706              	.LBB168:
 707              	.LBB164:
  38:eurorack/stmlib/dsp/polyblep.h ****   return 0.5f * t * t;
 708              		.loc 9 38 21 view .LVU196
 709 00f6 26EE046A 		vmul.f32	s12, s12, s8
 710              	.LBE164:
 711              	.LBE168:
  79:eurorack/plaits/dsp/noise/clocked_noise.h ****         next_sample += discontinuity * stmlib::NextBlepSample(t);
 712              		.loc 3 79 21 view .LVU197
 713 00fa A5EE067A 		vfma.f32	s14, s10, s12
 714              	.LVL49:
  80:eurorack/plaits/dsp/noise/clocked_noise.h ****         sample = new_sample;
 715              		.loc 3 80 9 is_stmt 1 view .LVU198
 716              	.LBB169:
 717              	.LBI165:
  41:eurorack/stmlib/dsp/polyblep.h ****   t = 1.0f - t;
 718              		.loc 9 41 14 view .LVU199
 719              	.LBB167:
 720              		.loc 9 42 3 view .LVU200
  43:eurorack/stmlib/dsp/polyblep.h ****   return -0.5f * t * t;
 721              		.loc 9 43 3 view .LVU201
 722              		.loc 9 43 16 is_stmt 0 view .LVU202
 723 00fe BEEE006A 		vmov.f32	s12, #-5.0e-1
 724 0102 26EE866A 		vmul.f32	s12, s13, s12
 725              		.loc 9 43 22 view .LVU203
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 27


 726 0106 66EE266A 		vmul.f32	s13, s12, s13
 727              	.LBE167:
 728              	.LBE169:
  80:eurorack/plaits/dsp/noise/clocked_noise.h ****         sample = new_sample;
 729              		.loc 3 80 21 view .LVU204
 730 010a B0EE636A 		vmov.f32	s12, s7
 731 010e A5EE266A 		vfma.f32	s12, s10, s13
 732              	.LVL50:
  81:eurorack/plaits/dsp/noise/clocked_noise.h ****       }
 733              		.loc 3 81 9 is_stmt 1 view .LVU205
  81:eurorack/plaits/dsp/noise/clocked_noise.h ****       }
 734              		.loc 3 81 16 is_stmt 0 view .LVU206
 735 0112 B0EE645A 		vmov.f32	s10, s9
 736              	.LVL51:
  81:eurorack/plaits/dsp/noise/clocked_noise.h ****       }
 737              		.loc 3 81 16 view .LVU207
 738              	.LBE161:
 739 0116 D0E7     		b	.L28
 740              	.LVL52:
 741              	.L24:
  81:eurorack/plaits/dsp/noise/clocked_noise.h ****       }
 742              		.loc 3 81 16 view .LVU208
 743 0118 05B1     		cbz	r5, .L30
 744 011a 2160     		str	r1, [r4]
 745              	.L30:
 746              	.LBE170:
 747              	.LBE173:
  85:eurorack/plaits/dsp/noise/clocked_noise.h ****     }
  86:eurorack/plaits/dsp/noise/clocked_noise.h ****     next_sample_ = next_sample;
 748              		.loc 3 86 5 is_stmt 1 view .LVU209
 749              		.loc 3 86 18 is_stmt 0 view .LVU210
 750 011c 80ED027A 		vstr.32	s14, [r0, #8]
  87:eurorack/plaits/dsp/noise/clocked_noise.h ****     sample_ = sample;
 751              		.loc 3 87 5 is_stmt 1 view .LVU211
 752              		.loc 3 87 13 is_stmt 0 view .LVU212
 753 0120 80ED015A 		vstr.32	s10, [r0, #4]
 754              	.LVL53:
 755              	.LBB174:
 756              	.LBI174:
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 757              		.loc 7 49 3 is_stmt 1 view .LVU213
 758              	.LBB175:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 759              		.loc 7 50 5 view .LVU214
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 760              		.loc 7 50 13 is_stmt 0 view .LVU215
 761 0124 C0ED035A 		vstr.32	s11, [r0, #12]
 762              	.LVL54:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 763              		.loc 7 50 13 view .LVU216
 764              	.LBE175:
 765              	.LBE174:
  88:eurorack/plaits/dsp/noise/clocked_noise.h ****   }
 766              		.loc 3 88 3 view .LVU217
 767 0128 70BD     		pop	{r4, r5, r6, pc}
 768              	.L43:
 769 012a 00BF     		.align	2
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 28


 770              	.L42:
 771 012c 00000000 		.word	0
 772 0130 00000000 		.word	_ZN6stmlib6Random10rng_state_E
 773 0134 0D661900 		.word	1664525
 774 0138 5FF36E3C 		.word	1013904223
 775 013c 0000802F 		.word	796917760
 776              		.cfi_endproc
 777              	.LFE1554:
 779              		.section	.text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff,"axG",%progbits,_ZN6stm
 780              		.align	1
 781              		.weak	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 786              	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:
 787              	.LVL55:
 788              	.LFB1568:
 223:eurorack/stmlib/dsp/filter.h ****     g_ = OnePole::tan<approximation>(f);
 789              		.loc 2 223 15 is_stmt 1 view -0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794              	.LBB179:
 795              	.LBI179:
 107:eurorack/stmlib/dsp/filter.h ****     if (approximation == FREQUENCY_EXACT) {
 796              		.loc 2 107 23 view .LVU219
 797              	.LBB180:
 131:eurorack/stmlib/dsp/filter.h ****       return f * (M_PI_F + f2 * (a + f2 * (b + f2 * (c + f2 * (d + f2 * e)))));
 798              		.loc 2 131 13 is_stmt 0 view .LVU220
 799 0000 60EE007A 		vmul.f32	s15, s0, s0
 800              	.LVL56:
 132:eurorack/stmlib/dsp/filter.h ****     }
 801              		.loc 2 132 66 view .LVU221
 802 0004 DFED156A 		vldr.32	s13, .L45
 803 0008 9FED157A 		vldr.32	s14, .L45+4
 804 000c A7EEA67A 		vfma.f32	s14, s15, s13
 132:eurorack/stmlib/dsp/filter.h ****     }
 805              		.loc 2 132 56 view .LVU222
 806 0010 DFED146A 		vldr.32	s13, .L45+8
 807 0014 E7EE876A 		vfma.f32	s13, s15, s14
 132:eurorack/stmlib/dsp/filter.h ****     }
 808              		.loc 2 132 46 view .LVU223
 809 0018 9FED137A 		vldr.32	s14, .L45+12
 810 001c A7EEA67A 		vfma.f32	s14, s15, s13
 132:eurorack/stmlib/dsp/filter.h ****     }
 811              		.loc 2 132 36 view .LVU224
 812 0020 DFED126A 		vldr.32	s13, .L45+16
 813 0024 E7EE876A 		vfma.f32	s13, s15, s14
 132:eurorack/stmlib/dsp/filter.h ****     }
 814              		.loc 2 132 26 view .LVU225
 815 0028 9FED117A 		vldr.32	s14, .L45+20
 816 002c A7EEA67A 		vfma.f32	s14, s15, s13
 132:eurorack/stmlib/dsp/filter.h ****     }
 817              		.loc 2 132 78 view .LVU226
 818 0030 20EE070A 		vmul.f32	s0, s0, s14
 819              	.LVL57:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 29


 132:eurorack/stmlib/dsp/filter.h ****     }
 820              		.loc 2 132 78 view .LVU227
 821              	.LBE180:
 822              	.LBE179:
 225:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 823              		.loc 2 225 15 view .LVU228
 824 0034 B7EE007A 		vmov.f32	s14, #1.0e+0
 224:eurorack/stmlib/dsp/filter.h ****     r_ = 1.0f / resonance;
 825              		.loc 2 224 8 view .LVU229
 826 0038 80ED000A 		vstr.32	s0, [r0]
 225:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 827              		.loc 2 225 15 view .LVU230
 828 003c C7EE206A 		vdiv.f32	s13, s14, s1
 829              		.loc 2 226 23 view .LVU231
 830 0040 F0EE477A 		vmov.f32	s15, s14
 831 0044 E6EE807A 		vfma.f32	s15, s13, s0
 225:eurorack/stmlib/dsp/filter.h ****     h_ = 1.0f / (1.0f + r_ * g_ + g_ * g_);
 832              		.loc 2 225 8 view .LVU232
 833 0048 C0ED016A 		vstr.32	s13, [r0, #4]
 834              		.loc 2 226 33 view .LVU233
 835 004c E0EE007A 		vfma.f32	s15, s0, s0
 836              		.loc 2 226 15 view .LVU234
 837 0050 C7EE276A 		vdiv.f32	s13, s14, s15
 838              		.loc 2 226 8 view .LVU235
 839 0054 C0ED026A 		vstr.32	s13, [r0, #8]
 227:eurorack/stmlib/dsp/filter.h ****   }
 840              		.loc 2 227 3 view .LVU236
 841 0058 7047     		bx	lr
 842              	.L46:
 843 005a 00BF     		.align	2
 844              	.L45:
 845 005c 23FE2E45 		.word	1160707619
 846 0060 90ECAC42 		.word	1118629008
 847 0064 8F342143 		.word	1126249615
 848 0068 65482342 		.word	1109608549
 849 006c A95D2541 		.word	1092967849
 850 0070 DB0F4940 		.word	1078530011
 851              		.cfi_endproc
 852              	.LFE1568:
 854              		.section	.text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff,"axG",%progbits,_ZN6stmlib3Svf7Proce
 855              		.align	1
 856              		.weak	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 861              	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff:
 862              	.LVL58:
 863              	.LFB1569:
 228:eurorack/stmlib/dsp/filter.h ****   
 229:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 230:eurorack/stmlib/dsp/filter.h ****   inline float Process(float in) {
 864              		.loc 2 230 16 is_stmt 1 view -0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 231:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 30


 232:eurorack/stmlib/dsp/filter.h ****     hp = (in - r_ * state_1_ - g_ * state_1_ - state_2_) * h_;
 869              		.loc 2 232 21 is_stmt 0 view .LVU238
 870 0000 90ED037A 		vldr.32	s14, [r0, #12]
 871              		.loc 2 232 14 view .LVU239
 872 0004 D0ED017A 		vldr.32	s15, [r0, #4]
 873              		.loc 2 232 32 view .LVU240
 874 0008 90ED006A 		vldr.32	s12, [r0]
 875              		.loc 2 232 14 view .LVU241
 876 000c A7EEC70A 		vfms.f32	s0, s15, s14
 877              	.LVL59:
 878              		.loc 2 232 48 view .LVU242
 879 0010 D0ED046A 		vldr.32	s13, [r0, #16]
 880              		.loc 2 232 8 view .LVU243
 881 0014 D0ED025A 		vldr.32	s11, [r0, #8]
 882              		.loc 2 232 30 view .LVU244
 883 0018 A7EE460A 		vfms.f32	s0, s14, s12
 884              		.loc 2 232 46 view .LVU245
 885 001c 70EE667A 		vsub.f32	s15, s0, s13
 886              		.loc 2 232 8 view .LVU246
 887 0020 67EEA57A 		vmul.f32	s15, s15, s11
 888              	.LVL60:
 233:eurorack/stmlib/dsp/filter.h ****     bp = g_ * hp + state_1_;
 889              		.loc 2 233 8 view .LVU247
 890 0024 A6EE277A 		vfma.f32	s14, s12, s15
 891 0028 B0EE470A 		vmov.f32	s0, s14
 892              	.LVL61:
 234:eurorack/stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 893              		.loc 2 234 24 view .LVU248
 894 002c A6EE277A 		vfma.f32	s14, s12, s15
 235:eurorack/stmlib/dsp/filter.h ****     lp = g_ * bp + state_2_;
 895              		.loc 2 235 8 view .LVU249
 896 0030 E6EE006A 		vfma.f32	s13, s12, s0
 897              	.LVL62:
 234:eurorack/stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 898              		.loc 2 234 14 view .LVU250
 899 0034 80ED037A 		vstr.32	s14, [r0, #12]
 236:eurorack/stmlib/dsp/filter.h ****     state_2_ = g_ * bp + lp;
 900              		.loc 2 236 24 view .LVU251
 901 0038 E6EE006A 		vfma.f32	s13, s12, s0
 902              	.LVL63:
 903              		.loc 2 236 14 view .LVU252
 904 003c C0ED046A 		vstr.32	s13, [r0, #16]
 905              	.LVL64:
 237:eurorack/stmlib/dsp/filter.h ****     
 238:eurorack/stmlib/dsp/filter.h ****     if (mode == FILTER_MODE_LOW_PASS) {
 239:eurorack/stmlib/dsp/filter.h ****       return lp;
 240:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS) {
 241:eurorack/stmlib/dsp/filter.h ****       return bp;
 242:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 243:eurorack/stmlib/dsp/filter.h ****       return bp * r_;
 244:eurorack/stmlib/dsp/filter.h ****     } else if (mode == FILTER_MODE_HIGH_PASS) {
 245:eurorack/stmlib/dsp/filter.h ****       return hp;
 246:eurorack/stmlib/dsp/filter.h ****     }
 247:eurorack/stmlib/dsp/filter.h ****   }
 906              		.loc 2 247 3 view .LVU253
 907 0040 7047     		bx	lr
 908              		.cfi_endproc
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 31


 909              	.LFE1569:
 911              		.section	.text._ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb,"ax",%progbits
 912              		.align	1
 913              		.global	_ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 918              	_ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb:
 919              	.LVL65:
 920              	.LFB1563:
  56:eurorack/plaits/dsp/engine/noise_engine.cc **** 
  57:eurorack/plaits/dsp/engine/noise_engine.cc **** void NoiseEngine::Render(
  58:eurorack/plaits/dsp/engine/noise_engine.cc ****     const EngineParameters& parameters,
  59:eurorack/plaits/dsp/engine/noise_engine.cc ****     float* out,
  60:eurorack/plaits/dsp/engine/noise_engine.cc ****     float* aux,
  61:eurorack/plaits/dsp/engine/noise_engine.cc ****     size_t size,
  62:eurorack/plaits/dsp/engine/noise_engine.cc ****     bool* already_enveloped) {
 921              		.loc 1 62 30 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 8, pretend = 0, frame = 8
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		.loc 1 62 30 is_stmt 0 view .LVU255
 926 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 927              		.cfi_def_cfa_offset 32
 928              		.cfi_offset 4, -32
 929              		.cfi_offset 5, -28
 930              		.cfi_offset 6, -24
 931              		.cfi_offset 7, -20
 932              		.cfi_offset 8, -16
 933              		.cfi_offset 9, -12
 934              		.cfi_offset 10, -8
 935              		.cfi_offset 14, -4
 936 0004 2DED0C8B 		vpush.64	{d8, d9, d10, d11, d12, d13}
 937              		.cfi_def_cfa_offset 80
 938              		.cfi_offset 80, -80
 939              		.cfi_offset 81, -76
 940              		.cfi_offset 82, -72
 941              		.cfi_offset 83, -68
 942              		.cfi_offset 84, -64
 943              		.cfi_offset 85, -60
 944              		.cfi_offset 86, -56
 945              		.cfi_offset 87, -52
 946              		.cfi_offset 88, -48
 947              		.cfi_offset 89, -44
 948              		.cfi_offset 90, -40
 949              		.cfi_offset 91, -36
  63:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f0 = NoteToFrequency(parameters.note);
 950              		.loc 1 63 47 view .LVU256
 951 0008 91ED018A 		vldr.32	s16, [r1, #4]
  62:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f0 = NoteToFrequency(parameters.note);
 952              		.loc 1 62 30 view .LVU257
 953 000c 0D46     		mov	r5, r1
 954 000e 82B0     		sub	sp, sp, #8
 955              		.cfi_def_cfa_offset 88
  62:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f0 = NoteToFrequency(parameters.note);
 956              		.loc 1 62 30 view .LVU258
 957 0010 0446     		mov	r4, r0
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 32


 958              		.loc 1 63 35 view .LVU259
 959 0012 B0EE480A 		vmov.f32	s0, s16
  62:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f0 = NoteToFrequency(parameters.note);
 960              		.loc 1 62 30 view .LVU260
 961 0016 1E46     		mov	r6, r3
 962 0018 9146     		mov	r9, r2
 963              		.loc 1 63 3 is_stmt 1 view .LVU261
 964              		.loc 1 63 35 is_stmt 0 view .LVU262
 965 001a FFF7FEFF 		bl	_ZN6plaits15NoteToFrequencyEf
 966              	.LVL66:
  64:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f1 = NoteToFrequency(
  65:eurorack/plaits/dsp/engine/noise_engine.cc ****       parameters.note + parameters.harmonics * 48.0f - 24.0f);
 967              		.loc 1 65 23 view .LVU263
 968 001e 95ED047A 		vldr.32	s14, [r5, #16]
  63:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f1 = NoteToFrequency(
 969              		.loc 1 63 35 view .LVU264
 970 0022 B0EE409A 		vmov.f32	s18, s0
 971              	.LVL67:
  64:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f1 = NoteToFrequency(
 972              		.loc 1 64 3 is_stmt 1 view .LVU265
 973              		.loc 1 65 23 is_stmt 0 view .LVU266
 974 0026 DFED867A 		vldr.32	s15, .L57
  64:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f1 = NoteToFrequency(
 975              		.loc 1 64 35 view .LVU267
 976 002a B3EE080A 		vmov.f32	s0, #2.4e+1
 977              	.LVL68:
  62:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f0 = NoteToFrequency(parameters.note);
 978              		.loc 1 62 30 view .LVU268
 979 002e 169F     		ldr	r7, [sp, #88]
 980              	.LBB226:
 981              	.LBB227:
 982              	.LBB228:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 983              		.loc 7 56 29 view .LVU269
 984 0030 F6EE00CA 		vmov.f32	s25, #5.0e-1
 985              	.LBE228:
 986              	.LBE227:
 987              	.LBE226:
 988              		.loc 1 65 23 view .LVU270
 989 0034 A7EE278A 		vfma.f32	s16, s14, s15
  64:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float f1 = NoteToFrequency(
 990              		.loc 1 64 35 view .LVU271
 991 0038 38EE400A 		vsub.f32	s0, s16, s0
 992 003c FFF7FEFF 		bl	_ZN6plaits15NoteToFrequencyEf
 993              	.LVL69:
  66:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float clock_lowest_note = parameters.trigger & TRIGGER_UNPATCHED
 994              		.loc 1 66 46 view .LVU272
 995 0040 95F80080 		ldrb	r8, [r5]	@ zero_extendqisi2
  67:eurorack/plaits/dsp/engine/noise_engine.cc ****       ? 0.0f
 996              		.loc 1 67 7 view .LVU273
 997 0044 FBEE087A 		vmov.f32	s15, #-2.4e+1
  68:eurorack/plaits/dsp/engine/noise_engine.cc ****       : -24.0f;
  69:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float clock_f = NoteToFrequency(
 998              		.loc 1 69 40 view .LVU274
 999 0048 95ED027A 		vldr.32	s14, [r5, #8]
  67:eurorack/plaits/dsp/engine/noise_engine.cc ****       ? 0.0f
 1000              		.loc 1 67 7 view .LVU275
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 33


 1001 004c 18F0020F 		tst	r8, #2
  64:eurorack/plaits/dsp/engine/noise_engine.cc ****       parameters.note + parameters.harmonics * 48.0f - 24.0f);
 1002              		.loc 1 64 35 view .LVU276
 1003 0050 F0EE408A 		vmov.f32	s17, s0
 1004              	.LVL70:
  66:eurorack/plaits/dsp/engine/noise_engine.cc ****       ? 0.0f
 1005              		.loc 1 66 3 is_stmt 1 view .LVU277
  67:eurorack/plaits/dsp/engine/noise_engine.cc ****       : -24.0f;
 1006              		.loc 1 67 7 is_stmt 0 view .LVU278
 1007 0054 9FED7B0A 		vldr.32	s0, .L57+4
 1008              	.LVL71:
  67:eurorack/plaits/dsp/engine/noise_engine.cc ****       : -24.0f;
 1009              		.loc 1 67 7 view .LVU279
 1010 0058 07FE800A 		vseleq.f32	s0, s15, s0
 1011              	.LVL72:
 1012              		.loc 1 69 3 is_stmt 1 view .LVU280
  70:eurorack/plaits/dsp/engine/noise_engine.cc ****       parameters.timbre * (128.0f - clock_lowest_note) + clock_lowest_note);
 1013              		.loc 1 70 35 is_stmt 0 view .LVU281
 1014 005c DFED7A7A 		vldr.32	s15, .L57+8
 1015 0060 77EEC07A 		vsub.f32	s15, s15, s0
  69:eurorack/plaits/dsp/engine/noise_engine.cc ****       parameters.timbre * (128.0f - clock_lowest_note) + clock_lowest_note);
 1016              		.loc 1 69 40 view .LVU282
 1017 0064 A7EE270A 		vfma.f32	s0, s14, s15
 1018              	.LVL73:
  69:eurorack/plaits/dsp/engine/noise_engine.cc ****       parameters.timbre * (128.0f - clock_lowest_note) + clock_lowest_note);
 1019              		.loc 1 69 40 view .LVU283
 1020 0068 FFF7FEFF 		bl	_ZN6plaits15NoteToFrequencyEf
 1021              	.LVL74:
  71:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float q = 0.5f * SemitonesToRatio(parameters.morph * 120.0f);
 1022              		.loc 1 71 42 view .LVU284
 1023 006c DFED777A 		vldr.32	s15, .L57+12
  69:eurorack/plaits/dsp/engine/noise_engine.cc ****       parameters.timbre * (128.0f - clock_lowest_note) + clock_lowest_note);
 1024              		.loc 1 69 40 view .LVU285
 1025 0070 B0EE408A 		vmov.f32	s16, s0
 1026              	.LVL75:
 1027              		.loc 1 71 3 is_stmt 1 view .LVU286
 1028              		.loc 1 71 42 is_stmt 0 view .LVU287
 1029 0074 95ED030A 		vldr.32	s0, [r5, #12]
 1030              	.LVL76:
 1031              		.loc 1 71 42 view .LVU288
 1032 0078 20EE270A 		vmul.f32	s0, s0, s15
 1033 007c FFF7FEFF 		bl	_ZN6stmlib16SemitonesToRatioEf
 1034              	.LVL77:
  72:eurorack/plaits/dsp/engine/noise_engine.cc ****   const bool sync = parameters.trigger & TRIGGER_RISING_EDGE;
 1035              		.loc 1 72 14 view .LVU289
 1036 0080 08F00101 		and	r1, r8, #1
  71:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float q = 0.5f * SemitonesToRatio(parameters.morph * 120.0f);
 1037              		.loc 1 71 42 view .LVU290
 1038 0084 F0EE409A 		vmov.f32	s19, s0
 1039              	.LVL78:
 1040              		.loc 1 72 3 is_stmt 1 view .LVU291
  73:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[0].Render(sync, clock_f, aux, size);
 1041              		.loc 1 73 3 view .LVU292
 1042              		.loc 1 73 27 is_stmt 0 view .LVU293
 1043 0088 3B46     		mov	r3, r7
 1044 008a B0EE480A 		vmov.f32	s0, s16
 1045              	.LVL79:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 34


 1046              		.loc 1 73 27 view .LVU294
 1047 008e 3246     		mov	r2, r6
 1048 0090 04F11000 		add	r0, r4, #16
 1049 0094 0191     		str	r1, [sp, #4]
 1050 0096 FFF7FEFF 		bl	_ZN6plaits12ClockedNoise6RenderEbfPfj
 1051              	.LVL80:
  74:eurorack/plaits/dsp/engine/noise_engine.cc ****   clocked_noise_[1].Render(sync, clock_f * f1 / f0, temp_buffer_, size);
 1052              		.loc 1 74 3 is_stmt 1 view .LVU295
 1053              		.loc 1 74 42 is_stmt 0 view .LVU296
 1054 009a 28EE888A 		vmul.f32	s16, s17, s16
 1055              	.LVL81:
 1056              		.loc 1 74 27 view .LVU297
 1057 009e 3B46     		mov	r3, r7
 1058 00a0 E26F     		ldr	r2, [r4, #124]
 1059 00a2 0199     		ldr	r1, [sp, #4]
 1060 00a4 04F12000 		add	r0, r4, #32
 1061 00a8 88EE090A 		vdiv.f32	s0, s16, s18
 1062 00ac C846     		mov	r8, r9
 1063              	.LVL82:
 1064              		.loc 1 74 27 view .LVU298
 1065 00ae FFF7FEFF 		bl	_ZN6plaits12ClockedNoise6RenderEbfPfj
 1066              	.LVL83:
  75:eurorack/plaits/dsp/engine/noise_engine.cc ****   
  76:eurorack/plaits/dsp/engine/noise_engine.cc ****   ParameterInterpolator f0_modulation(&previous_f0_, f0, size);
 1067              		.loc 1 76 3 is_stmt 1 view .LVU299
 1068              	.LBB239:
 1069              	.LBI239:
  39:eurorack/stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1070              		.loc 7 39 3 view .LVU300
 1071              	.LBE239:
  40:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1072              		.loc 7 40 5 view .LVU301
 1073              	.LBB248:
 1074              	.LBB240:
 1075              	.LBI240:
  53:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1076              		.loc 7 53 15 view .LVU302
 1077              	.LBB241:
  54:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1078              		.loc 7 54 5 view .LVU303
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1079              		.loc 7 55 5 view .LVU304
 1080              	.LBE241:
 1081              	.LBE240:
 1082              	.LBE248:
 1083              	.LBB249:
 1084              	.LBB234:
 1085              	.LBB229:
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1086              		.loc 7 55 14 is_stmt 0 view .LVU305
 1087 00b2 94ED1D8A 		vldr.32	s16, [r4, #116]
 1088              	.LBE229:
 1089              	.LBE234:
 1090              	.LBE249:
 1091              	.LBB250:
 1092              	.LBB245:
 1093              	.LBB242:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 35


  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1094              		.loc 7 56 41 view .LVU306
 1095 00b6 07EE907A 		vmov	s15, r7	@ int
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1096              		.loc 7 55 14 view .LVU307
 1097 00ba 94ED1BBA 		vldr.32	s22, [r4, #108]
 1098              	.LVL84:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1099              		.loc 7 56 5 is_stmt 1 view .LVU308
 1100              	.LBE242:
 1101              	.LBE245:
 1102              	.LBE250:
 1103              	.LBB251:
 1104              	.LBB252:
 1105              	.LBB253:
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1106              		.loc 7 55 14 is_stmt 0 view .LVU309
 1107 00be 94ED1CCA 		vldr.32	s24, [r4, #112]
 1108              	.LBE253:
 1109              	.LBE252:
 1110              	.LBE251:
 1111              	.LBB260:
 1112              	.LBB261:
 1113              	.LBB262:
 1114 00c2 D4ED1EBA 		vldr.32	s23, [r4, #120]
 1115              	.LBE262:
 1116              	.LBE261:
 1117              	.LBE260:
 1118              	.LBB267:
 1119              	.LBB235:
 1120              	.LBB230:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1121              		.loc 7 56 29 view .LVU310
 1122 00c6 B0EE487A 		vmov.f32	s14, s16
 1123              	.LBE230:
 1124              	.LBE235:
 1125              	.LBE267:
  77:eurorack/plaits/dsp/engine/noise_engine.cc ****   ParameterInterpolator f1_modulation(&previous_f1_, f1, size);
  78:eurorack/plaits/dsp/engine/noise_engine.cc ****   ParameterInterpolator q_modulation(&previous_q_, q, size);
  79:eurorack/plaits/dsp/engine/noise_engine.cc ****   ParameterInterpolator mode_modulation(
  80:eurorack/plaits/dsp/engine/noise_engine.cc ****       &previous_mode_, parameters.harmonics, size);
  81:eurorack/plaits/dsp/engine/noise_engine.cc ****   
  82:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float* in_1 = aux;
  83:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float* in_2 = temp_buffer_;
 1126              		.loc 1 83 16 view .LVU311
 1127 00ca D4F87CA0 		ldr	r10, [r4, #124]
 1128              	.LBB268:
 1129              	.LBB246:
 1130              	.LBB243:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1131              		.loc 7 56 41 view .LVU312
 1132 00ce F8EE677A 		vcvt.f32.u32	s15, s15
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1133              		.loc 7 56 29 view .LVU313
 1134 00d2 39EE4B9A 		vsub.f32	s18, s18, s22
 1135              	.LVL85:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 36


 1136              		.loc 7 56 29 view .LVU314
 1137              	.LBE243:
 1138              	.LBE246:
 1139              	.LBE268:
 1140              	.LBB269:
 1141              	.LBB236:
 1142              	.LBB231:
 1143 00d6 99EEAC7A 		vfnms.f32	s14, s19, s25
 1144              	.LBE231:
 1145              	.LBE236:
 1146              	.LBE269:
 1147              	.LBB270:
 1148              	.LBB257:
 1149              	.LBB254:
 1150 00da 78EECC8A 		vsub.f32	s17, s17, s24
 1151              	.LVL86:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1152              		.loc 7 56 29 view .LVU315
 1153              	.LBE254:
 1154              	.LBE257:
 1155              	.LBE270:
 1156              	.LBB271:
 1157              	.LBB247:
 1158              	.LBB244:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1159              		.loc 7 56 39 view .LVU316
 1160 00de C9EE27AA 		vdiv.f32	s21, s18, s15
 1161              	.LVL87:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1162              		.loc 7 56 39 view .LVU317
 1163              	.LBE244:
 1164              	.LBE247:
 1165              	.LBE271:
  77:eurorack/plaits/dsp/engine/noise_engine.cc ****   ParameterInterpolator f1_modulation(&previous_f1_, f1, size);
 1166              		.loc 1 77 3 is_stmt 1 view .LVU318
 1167              	.LBB272:
 1168              	.LBI251:
  39:eurorack/stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1169              		.loc 7 39 3 view .LVU319
 1170              	.LBE272:
  40:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1171              		.loc 7 40 5 view .LVU320
 1172              	.LBB273:
 1173              	.LBB258:
 1174              	.LBI252:
  53:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1175              		.loc 7 53 15 view .LVU321
 1176              	.LBB255:
  54:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1177              		.loc 7 54 5 view .LVU322
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1178              		.loc 7 55 5 view .LVU323
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1179              		.loc 7 56 5 view .LVU324
 1180              	.LBE255:
 1181              	.LBE258:
 1182              	.LBE273:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 37


 1183              	.LBB274:
 1184              	.LBB237:
 1185              	.LBB232:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1186              		.loc 7 56 39 is_stmt 0 view .LVU325
 1187 00e2 C7EE279A 		vdiv.f32	s19, s14, s15
 1188              	.LVL88:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1189              		.loc 7 56 39 view .LVU326
 1190              	.LBE232:
 1191              	.LBE237:
 1192              	.LBE274:
 1193              	.LBB275:
 1194              	.LBB265:
 1195              	.LBB263:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1196              		.loc 7 56 29 view .LVU327
 1197 00e6 95ED047A 		vldr.32	s14, [r5, #16]
 1198 00ea 3546     		mov	r5, r6
 1199              	.LVL89:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1200              		.loc 7 56 29 view .LVU328
 1201 00ec 37EE6B7A 		vsub.f32	s14, s14, s23
 1202              	.LBE263:
 1203              	.LBE265:
 1204              	.LBE275:
 1205              	.LBB276:
 1206              	.LBB259:
 1207              	.LBB256:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1208              		.loc 7 56 39 view .LVU329
 1209 00f0 88EEA7AA 		vdiv.f32	s20, s17, s15
 1210              	.LVL90:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1211              		.loc 7 56 39 view .LVU330
 1212              	.LBE256:
 1213              	.LBE259:
 1214              	.LBE276:
  78:eurorack/plaits/dsp/engine/noise_engine.cc ****   ParameterInterpolator mode_modulation(
 1215              		.loc 1 78 3 is_stmt 1 view .LVU331
 1216              	.LBB277:
 1217              	.LBI226:
  39:eurorack/stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1218              		.loc 7 39 3 view .LVU332
 1219              	.LBE277:
  40:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1220              		.loc 7 40 5 view .LVU333
 1221              	.LBB278:
 1222              	.LBB238:
 1223              	.LBI227:
  53:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1224              		.loc 7 53 15 view .LVU334
 1225              	.LBB233:
  54:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1226              		.loc 7 54 5 view .LVU335
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1227              		.loc 7 55 5 view .LVU336
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 38


  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1228              		.loc 7 56 5 view .LVU337
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1229              		.loc 7 56 5 is_stmt 0 view .LVU338
 1230              	.LBE233:
 1231              	.LBE238:
 1232              	.LBE278:
  79:eurorack/plaits/dsp/engine/noise_engine.cc ****       &previous_mode_, parameters.harmonics, size);
 1233              		.loc 1 79 3 is_stmt 1 view .LVU339
 1234              	.LBB279:
 1235              	.LBI260:
  39:eurorack/stmlib/dsp/parameter_interpolator.h ****     Init(state, new_value, size);
 1236              		.loc 7 39 3 view .LVU340
 1237              	.LBE279:
  40:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1238              		.loc 7 40 5 view .LVU341
 1239              	.LBB280:
 1240              	.LBB266:
 1241              	.LBI261:
  53:eurorack/stmlib/dsp/parameter_interpolator.h ****     state_ = state;
 1242              		.loc 7 53 15 view .LVU342
 1243              	.LBB264:
  54:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ = *state;
 1244              		.loc 7 54 5 view .LVU343
  55:eurorack/stmlib/dsp/parameter_interpolator.h ****     increment_ = (new_value - *state) / static_cast<float>(size);
 1245              		.loc 7 55 5 view .LVU344
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1246              		.loc 7 56 5 view .LVU345
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1247              		.loc 7 56 39 is_stmt 0 view .LVU346
 1248 00f4 87EE279A 		vdiv.f32	s18, s14, s15
 1249              	.LVL91:
  56:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1250              		.loc 7 56 39 view .LVU347
 1251              	.LBE264:
 1252              	.LBE266:
 1253              	.LBE280:
  82:eurorack/plaits/dsp/engine/noise_engine.cc ****   const float* in_2 = temp_buffer_;
 1254              		.loc 1 82 3 is_stmt 1 view .LVU348
 1255              		.loc 1 83 3 view .LVU349
 1256              	.L53:
  84:eurorack/plaits/dsp/engine/noise_engine.cc ****   while (size--) {
 1257              		.loc 1 84 3 view .LVU350
 1258              		.loc 1 84 14 view .LVU351
 1259              		.loc 1 84 14 is_stmt 0 view .LVU352
 1260 00f8 002F     		cmp	r7, #0
 1261 00fa 00F09480 		beq	.L50
 1262              	.LBB281:
  85:eurorack/plaits/dsp/engine/noise_engine.cc ****     const float f0 = f0_modulation.Next();
 1263              		.loc 1 85 5 is_stmt 1 view .LVU353
 1264              	.LVL92:
 1265              	.LBB282:
 1266              	.LBI282:
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1267              		.loc 7 59 16 view .LVU354
 1268              	.LBB283:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 39


 1269              		.loc 7 60 5 view .LVU355
 1270              	.LBE283:
 1271              	.LBE282:
  86:eurorack/plaits/dsp/engine/noise_engine.cc ****     const float f1 = f1_modulation.Next();
  87:eurorack/plaits/dsp/engine/noise_engine.cc ****     const float q = q_modulation.Next();
  88:eurorack/plaits/dsp/engine/noise_engine.cc ****     const float gain = 1.0f / Sqrt((0.5f + q) * 40.0f * f0);
 1272              		.loc 1 88 47 is_stmt 0 view .LVU356
 1273 00fe 9FED547A 		vldr.32	s14, .L57+16
  89:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
  90:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[0].set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1274              		.loc 1 90 46 view .LVU357
 1275 0102 04F14409 		add	r9, r4, #68
  89:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1276              		.loc 1 89 46 view .LVU358
 1277 0106 04F13000 		add	r0, r4, #48
  91:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[1].set_f_q<FREQUENCY_ACCURATE>(f1, q);
 1278              		.loc 1 91 46 view .LVU359
 1279 010a 04F15806 		add	r6, r4, #88
 1280 010e 013F     		subs	r7, r7, #1
 1281              	.LVL93:
 1282              	.LBB285:
 1283              	.LBB286:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1284              		.loc 7 60 12 view .LVU360
 1285 0110 38EE298A 		vadd.f32	s16, s16, s19
 1286              	.LVL94:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1287              		.loc 7 60 12 view .LVU361
 1288              	.LBE286:
 1289              	.LBE285:
  88:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1290              		.loc 1 88 59 view .LVU362
 1291 0114 F7EE008A 		vmov.f32	s17, #1.0e+0
 1292              	.LBB288:
 1293              	.LBB284:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1294              		.loc 7 60 12 view .LVU363
 1295 0118 3BEE2ABA 		vadd.f32	s22, s22, s21
 1296              	.LVL95:
 1297              		.loc 7 61 5 is_stmt 1 view .LVU364
 1298              		.loc 7 61 5 is_stmt 0 view .LVU365
 1299              	.LBE284:
 1300              	.LBE288:
  86:eurorack/plaits/dsp/engine/noise_engine.cc ****     const float q = q_modulation.Next();
 1301              		.loc 1 86 5 is_stmt 1 view .LVU366
 1302              	.LBB289:
 1303              	.LBI289:
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1304              		.loc 7 59 16 view .LVU367
 1305              	.LBB290:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1306              		.loc 7 60 5 view .LVU368
 1307              	.LBE290:
 1308              	.LBE289:
  88:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1309              		.loc 1 88 42 is_stmt 0 view .LVU369
 1310 011c 78EE2C7A 		vadd.f32	s15, s16, s25
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 40


 1311              	.LBB292:
 1312              	.LBB291:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1313              		.loc 7 60 12 view .LVU370
 1314 0120 3CEE0ACA 		vadd.f32	s24, s24, s20
 1315              	.LVL96:
 1316              		.loc 7 61 5 is_stmt 1 view .LVU371
 1317              		.loc 7 61 5 is_stmt 0 view .LVU372
 1318              	.LBE291:
 1319              	.LBE292:
  87:eurorack/plaits/dsp/engine/noise_engine.cc ****     const float gain = 1.0f / Sqrt((0.5f + q) * 40.0f * f0);
 1320              		.loc 1 87 5 is_stmt 1 view .LVU373
 1321              	.LBB293:
 1322              	.LBI285:
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1323              		.loc 7 59 16 view .LVU374
 1324              	.LBB287:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1325              		.loc 7 60 5 view .LVU375
 1326              		.loc 7 61 5 view .LVU376
 1327              		.loc 7 61 5 is_stmt 0 view .LVU377
 1328              	.LBE287:
 1329              	.LBE293:
  88:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1330              		.loc 1 88 5 is_stmt 1 view .LVU378
 1331              	.LBB294:
 1332              	.LBI294:
 1333              		.file 10 "eurorack/stmlib/dsp/dsp.h"
   1:eurorack/stmlib/dsp/dsp.h **** // Copyright 2012 Emilie Gillet.
   2:eurorack/stmlib/dsp/dsp.h **** //
   3:eurorack/stmlib/dsp/dsp.h **** // Author: Emilie Gillet (emilie.o.gillet@gmail.com)
   4:eurorack/stmlib/dsp/dsp.h **** //
   5:eurorack/stmlib/dsp/dsp.h **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   6:eurorack/stmlib/dsp/dsp.h **** // of this software and associated documentation files (the "Software"), to deal
   7:eurorack/stmlib/dsp/dsp.h **** // in the Software without restriction, including without limitation the rights
   8:eurorack/stmlib/dsp/dsp.h **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:eurorack/stmlib/dsp/dsp.h **** // copies of the Software, and to permit persons to whom the Software is
  10:eurorack/stmlib/dsp/dsp.h **** // furnished to do so, subject to the following conditions:
  11:eurorack/stmlib/dsp/dsp.h **** // 
  12:eurorack/stmlib/dsp/dsp.h **** // The above copyright notice and this permission notice shall be included in
  13:eurorack/stmlib/dsp/dsp.h **** // all copies or substantial portions of the Software.
  14:eurorack/stmlib/dsp/dsp.h **** // 
  15:eurorack/stmlib/dsp/dsp.h **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:eurorack/stmlib/dsp/dsp.h **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:eurorack/stmlib/dsp/dsp.h **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:eurorack/stmlib/dsp/dsp.h **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:eurorack/stmlib/dsp/dsp.h **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:eurorack/stmlib/dsp/dsp.h **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:eurorack/stmlib/dsp/dsp.h **** // THE SOFTWARE.
  22:eurorack/stmlib/dsp/dsp.h **** // 
  23:eurorack/stmlib/dsp/dsp.h **** // See http://creativecommons.org/licenses/MIT/ for more information.
  24:eurorack/stmlib/dsp/dsp.h **** //
  25:eurorack/stmlib/dsp/dsp.h **** // -----------------------------------------------------------------------------
  26:eurorack/stmlib/dsp/dsp.h **** //
  27:eurorack/stmlib/dsp/dsp.h **** // DSP utility routines.
  28:eurorack/stmlib/dsp/dsp.h **** 
  29:eurorack/stmlib/dsp/dsp.h **** #ifndef STMLIB_UTILS_DSP_DSP_H_
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 41


  30:eurorack/stmlib/dsp/dsp.h **** #define STMLIB_UTILS_DSP_DSP_H_
  31:eurorack/stmlib/dsp/dsp.h **** 
  32:eurorack/stmlib/dsp/dsp.h **** #include "stmlib/stmlib.h"
  33:eurorack/stmlib/dsp/dsp.h **** 
  34:eurorack/stmlib/dsp/dsp.h **** #include <cmath>
  35:eurorack/stmlib/dsp/dsp.h **** #include <math.h>
  36:eurorack/stmlib/dsp/dsp.h **** 
  37:eurorack/stmlib/dsp/dsp.h **** namespace stmlib {
  38:eurorack/stmlib/dsp/dsp.h **** 
  39:eurorack/stmlib/dsp/dsp.h **** #define MAKE_INTEGRAL_FRACTIONAL(x) \
  40:eurorack/stmlib/dsp/dsp.h ****   int32_t x ## _integral = static_cast<int32_t>(x); \
  41:eurorack/stmlib/dsp/dsp.h ****   float x ## _fractional = x - static_cast<float>(x ## _integral);
  42:eurorack/stmlib/dsp/dsp.h **** 
  43:eurorack/stmlib/dsp/dsp.h **** inline float Interpolate(const float* table, float index, float size) {
  44:eurorack/stmlib/dsp/dsp.h ****   index *= size;
  45:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  46:eurorack/stmlib/dsp/dsp.h ****   float a = table[index_integral];
  47:eurorack/stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
  48:eurorack/stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
  49:eurorack/stmlib/dsp/dsp.h **** }
  50:eurorack/stmlib/dsp/dsp.h **** 
  51:eurorack/stmlib/dsp/dsp.h **** 
  52:eurorack/stmlib/dsp/dsp.h **** inline float InterpolateHermite(const float* table, float index, float size) {
  53:eurorack/stmlib/dsp/dsp.h ****   index *= size;
  54:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  55:eurorack/stmlib/dsp/dsp.h ****   const float xm1 = table[index_integral - 1];
  56:eurorack/stmlib/dsp/dsp.h ****   const float x0 = table[index_integral + 0];
  57:eurorack/stmlib/dsp/dsp.h ****   const float x1 = table[index_integral + 1];
  58:eurorack/stmlib/dsp/dsp.h ****   const float x2 = table[index_integral + 2];
  59:eurorack/stmlib/dsp/dsp.h ****   const float c = (x1 - xm1) * 0.5f;
  60:eurorack/stmlib/dsp/dsp.h ****   const float v = x0 - x1;
  61:eurorack/stmlib/dsp/dsp.h ****   const float w = c + v;
  62:eurorack/stmlib/dsp/dsp.h ****   const float a = w + v + (x2 - x0) * 0.5f;
  63:eurorack/stmlib/dsp/dsp.h ****   const float b_neg = w + a;
  64:eurorack/stmlib/dsp/dsp.h ****   const float f = index_fractional;
  65:eurorack/stmlib/dsp/dsp.h ****   return (((a * f) - b_neg) * f + c) * f + x0;
  66:eurorack/stmlib/dsp/dsp.h **** }
  67:eurorack/stmlib/dsp/dsp.h **** 
  68:eurorack/stmlib/dsp/dsp.h **** inline float InterpolateWrap(const float* table, float index, float size) {
  69:eurorack/stmlib/dsp/dsp.h ****   index -= static_cast<float>(static_cast<int32_t>(index));
  70:eurorack/stmlib/dsp/dsp.h ****   index *= size;
  71:eurorack/stmlib/dsp/dsp.h ****   MAKE_INTEGRAL_FRACTIONAL(index)
  72:eurorack/stmlib/dsp/dsp.h ****   float a = table[index_integral];
  73:eurorack/stmlib/dsp/dsp.h ****   float b = table[index_integral + 1];
  74:eurorack/stmlib/dsp/dsp.h ****   return a + (b - a) * index_fractional;
  75:eurorack/stmlib/dsp/dsp.h **** }
  76:eurorack/stmlib/dsp/dsp.h **** 
  77:eurorack/stmlib/dsp/dsp.h **** inline float SmoothStep(float value) {
  78:eurorack/stmlib/dsp/dsp.h ****   return value * value * (3.0f - 2.0f * value);
  79:eurorack/stmlib/dsp/dsp.h **** }
  80:eurorack/stmlib/dsp/dsp.h **** 
  81:eurorack/stmlib/dsp/dsp.h **** #define ONE_POLE(out, in, coefficient) out += (coefficient) * ((in) - out);
  82:eurorack/stmlib/dsp/dsp.h **** #define SLOPE(out, in, positive, negative) { \
  83:eurorack/stmlib/dsp/dsp.h ****   float error = (in) - out; \
  84:eurorack/stmlib/dsp/dsp.h ****   out += (error > 0 ? positive : negative) * error; \
  85:eurorack/stmlib/dsp/dsp.h **** }
  86:eurorack/stmlib/dsp/dsp.h **** #define SLEW(out, in, delta) { \
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 42


  87:eurorack/stmlib/dsp/dsp.h ****   float error = (in) - out; \
  88:eurorack/stmlib/dsp/dsp.h ****   float d = (delta); \
  89:eurorack/stmlib/dsp/dsp.h ****   if (error > d) { \
  90:eurorack/stmlib/dsp/dsp.h ****     error = d; \
  91:eurorack/stmlib/dsp/dsp.h ****   } else if (error < -d) { \
  92:eurorack/stmlib/dsp/dsp.h ****     error = -d; \
  93:eurorack/stmlib/dsp/dsp.h ****   } \
  94:eurorack/stmlib/dsp/dsp.h ****   out += error; \
  95:eurorack/stmlib/dsp/dsp.h **** }
  96:eurorack/stmlib/dsp/dsp.h **** 
  97:eurorack/stmlib/dsp/dsp.h **** inline float Crossfade(float a, float b, float fade) {
  98:eurorack/stmlib/dsp/dsp.h ****   return a + (b - a) * fade;
  99:eurorack/stmlib/dsp/dsp.h **** }
 100:eurorack/stmlib/dsp/dsp.h **** 
 101:eurorack/stmlib/dsp/dsp.h **** inline float SoftLimit(float x) {
 102:eurorack/stmlib/dsp/dsp.h ****   return x * (27.0f + x * x) / (27.0f + 9.0f * x * x);
 103:eurorack/stmlib/dsp/dsp.h **** }
 104:eurorack/stmlib/dsp/dsp.h **** 
 105:eurorack/stmlib/dsp/dsp.h **** inline float SoftClip(float x) {
 106:eurorack/stmlib/dsp/dsp.h ****   if (x < -3.0f) {
 107:eurorack/stmlib/dsp/dsp.h ****     return -1.0f;
 108:eurorack/stmlib/dsp/dsp.h ****   } else if (x > 3.0f) {
 109:eurorack/stmlib/dsp/dsp.h ****     return 1.0f;
 110:eurorack/stmlib/dsp/dsp.h ****   } else {
 111:eurorack/stmlib/dsp/dsp.h ****     return SoftLimit(x);
 112:eurorack/stmlib/dsp/dsp.h ****   }
 113:eurorack/stmlib/dsp/dsp.h **** }
 114:eurorack/stmlib/dsp/dsp.h **** 
 115:eurorack/stmlib/dsp/dsp.h **** #ifdef TEST
 116:eurorack/stmlib/dsp/dsp.h ****   inline int32_t Clip16(int32_t x) {
 117:eurorack/stmlib/dsp/dsp.h ****     if (x < -32768) {
 118:eurorack/stmlib/dsp/dsp.h ****       return -32768;
 119:eurorack/stmlib/dsp/dsp.h ****     } else if (x > 32767) {
 120:eurorack/stmlib/dsp/dsp.h ****       return 32767;
 121:eurorack/stmlib/dsp/dsp.h ****     } else {
 122:eurorack/stmlib/dsp/dsp.h ****       return x;
 123:eurorack/stmlib/dsp/dsp.h ****     }
 124:eurorack/stmlib/dsp/dsp.h ****   }
 125:eurorack/stmlib/dsp/dsp.h ****   inline uint16_t ClipU16(int32_t x) {
 126:eurorack/stmlib/dsp/dsp.h ****     if (x < 0) {
 127:eurorack/stmlib/dsp/dsp.h ****       return 0;
 128:eurorack/stmlib/dsp/dsp.h ****     } else if (x > 65535) {
 129:eurorack/stmlib/dsp/dsp.h ****       return 65535;
 130:eurorack/stmlib/dsp/dsp.h ****     } else {
 131:eurorack/stmlib/dsp/dsp.h ****       return x;
 132:eurorack/stmlib/dsp/dsp.h ****     }
 133:eurorack/stmlib/dsp/dsp.h ****   }
 134:eurorack/stmlib/dsp/dsp.h **** #else
 135:eurorack/stmlib/dsp/dsp.h ****   inline int32_t Clip16(int32_t x) {
 136:eurorack/stmlib/dsp/dsp.h ****     int32_t result;
 137:eurorack/stmlib/dsp/dsp.h ****     __asm ("ssat %0, %1, %2" : "=r" (result) :  "I" (16), "r" (x) );
 138:eurorack/stmlib/dsp/dsp.h ****     return result;
 139:eurorack/stmlib/dsp/dsp.h ****   }
 140:eurorack/stmlib/dsp/dsp.h ****   inline uint32_t ClipU16(int32_t x) {
 141:eurorack/stmlib/dsp/dsp.h ****     uint32_t result;
 142:eurorack/stmlib/dsp/dsp.h ****     __asm ("usat %0, %1, %2" : "=r" (result) :  "I" (16), "r" (x) );
 143:eurorack/stmlib/dsp/dsp.h ****     return result;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 43


 144:eurorack/stmlib/dsp/dsp.h ****   }
 145:eurorack/stmlib/dsp/dsp.h **** #endif
 146:eurorack/stmlib/dsp/dsp.h ****   
 147:eurorack/stmlib/dsp/dsp.h **** #ifdef TEST
 148:eurorack/stmlib/dsp/dsp.h ****   inline float Sqrt(float x) {
 149:eurorack/stmlib/dsp/dsp.h ****     return sqrtf(x);
 150:eurorack/stmlib/dsp/dsp.h ****   }
 151:eurorack/stmlib/dsp/dsp.h **** #else
 152:eurorack/stmlib/dsp/dsp.h ****   inline float Sqrt(float x) {
 1334              		.loc 10 152 16 view .LVU379
 1335              	.LBB295:
 153:eurorack/stmlib/dsp/dsp.h ****     float result;
 1336              		.loc 10 153 5 view .LVU380
 154:eurorack/stmlib/dsp/dsp.h ****     __asm ("vsqrt.f32 %0, %1" : "=w" (result) : "w" (x) );
 1337              		.loc 10 154 5 view .LVU381
 1338              	.LBE295:
 1339              	.LBE294:
  89:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[0].set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1340              		.loc 1 89 46 is_stmt 0 view .LVU382
 1341 0124 F0EE480A 		vmov.f32	s1, s16
  88:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1342              		.loc 1 88 47 view .LVU383
 1343 0128 67EE877A 		vmul.f32	s15, s15, s14
  89:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[0].set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1344              		.loc 1 89 46 view .LVU384
 1345 012c B0EE4B0A 		vmov.f32	s0, s22
  88:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1346              		.loc 1 88 35 view .LVU385
 1347 0130 67EE8B7A 		vmul.f32	s15, s15, s22
 1348              	.LBB297:
 1349              	.LBB296:
 1350              		.loc 10 154 5 view .LVU386
 1351              		.syntax unified
 1352              	@ 154 "eurorack/stmlib/dsp/dsp.h" 1
 1353 0134 F1EEE77A 		vsqrt.f32 s15, s15
 1354              	@ 0 "" 2
 1355              	.LVL97:
 155:eurorack/stmlib/dsp/dsp.h ****     return result;
 1356              		.loc 10 155 5 is_stmt 1 view .LVU387
 1357              		.loc 10 155 5 is_stmt 0 view .LVU388
 1358              		.thumb
 1359              		.syntax unified
 1360              	.LBE296:
 1361              	.LBE297:
  88:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1362              		.loc 1 88 59 view .LVU389
 1363 0138 88EEA7DA 		vdiv.f32	s26, s17, s15
 1364              	.LVL98:
  89:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[0].set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1365              		.loc 1 89 5 is_stmt 1 view .LVU390
  89:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[0].set_f_q<FREQUENCY_ACCURATE>(f0, q);
 1366              		.loc 1 89 46 is_stmt 0 view .LVU391
 1367 013c FFF7FEFF 		bl	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
 1368              	.LVL99:
  90:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[1].set_f_q<FREQUENCY_ACCURATE>(f1, q);
 1369              		.loc 1 90 5 is_stmt 1 view .LVU392
  90:eurorack/plaits/dsp/engine/noise_engine.cc ****     bp_filter_[1].set_f_q<FREQUENCY_ACCURATE>(f1, q);
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 44


 1370              		.loc 1 90 46 is_stmt 0 view .LVU393
 1371 0140 4846     		mov	r0, r9
 1372 0142 F0EE480A 		vmov.f32	s1, s16
 1373 0146 B0EE4B0A 		vmov.f32	s0, s22
 1374 014a FFF7FEFF 		bl	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
 1375              	.LVL100:
 1376              		.loc 1 91 5 is_stmt 1 view .LVU394
 1377              		.loc 1 91 46 is_stmt 0 view .LVU395
 1378 014e F0EE480A 		vmov.f32	s1, s16
 1379 0152 B0EE4C0A 		vmov.f32	s0, s24
 1380 0156 3046     		mov	r0, r6
 1381 0158 FFF7FEFF 		bl	_ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
 1382              	.LVL101:
  92:eurorack/plaits/dsp/engine/noise_engine.cc ****     
  93:eurorack/plaits/dsp/engine/noise_engine.cc ****     float input_1 = *in_1++ * gain;
 1383              		.loc 1 93 5 is_stmt 1 view .LVU396
 1384              	.LBB298:
 1385              	.LBB299:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1386              		.loc 7 60 12 is_stmt 0 view .LVU397
 1387 015c 7BEE89BA 		vadd.f32	s23, s23, s18
 1388              	.LVL102:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1389              		.loc 7 60 12 view .LVU398
 1390              	.LBE299:
 1391              	.LBE298:
 1392              		.loc 1 93 29 view .LVU399
 1393 0160 95ED000A 		vldr.32	s0, [r5]
 1394              	.LBB301:
 1395              	.LBB302:
 248:eurorack/stmlib/dsp/filter.h ****   
 249:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode_1, FilterMode mode_2>
 250:eurorack/stmlib/dsp/filter.h ****   inline void Process(float in, float* out_1, float* out_2) {
 251:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
 252:eurorack/stmlib/dsp/filter.h ****     hp = (in - r_ * state_1_ - g_ * state_1_ - state_2_) * h_;
 253:eurorack/stmlib/dsp/filter.h ****     bp = g_ * hp + state_1_;
 254:eurorack/stmlib/dsp/filter.h ****     state_1_ = g_ * hp + bp;
 255:eurorack/stmlib/dsp/filter.h ****     lp = g_ * bp + state_2_;
 256:eurorack/stmlib/dsp/filter.h ****     state_2_ = g_ * bp + lp;
 257:eurorack/stmlib/dsp/filter.h ****     
 258:eurorack/stmlib/dsp/filter.h ****     if (mode_1 == FILTER_MODE_LOW_PASS) {
 259:eurorack/stmlib/dsp/filter.h ****       *out_1 = lp;
 260:eurorack/stmlib/dsp/filter.h ****     } else if (mode_1 == FILTER_MODE_BAND_PASS) {
 261:eurorack/stmlib/dsp/filter.h ****       *out_1 = bp;
 262:eurorack/stmlib/dsp/filter.h ****     } else if (mode_1 == FILTER_MODE_BAND_PASS_NORMALIZED) {
 263:eurorack/stmlib/dsp/filter.h ****       *out_1 = bp * r_;
 264:eurorack/stmlib/dsp/filter.h ****     } else if (mode_1 == FILTER_MODE_HIGH_PASS) {
 265:eurorack/stmlib/dsp/filter.h ****       *out_1 = hp;
 266:eurorack/stmlib/dsp/filter.h ****     }
 267:eurorack/stmlib/dsp/filter.h **** 
 268:eurorack/stmlib/dsp/filter.h ****     if (mode_2 == FILTER_MODE_LOW_PASS) {
 269:eurorack/stmlib/dsp/filter.h ****       *out_2 = lp;
 270:eurorack/stmlib/dsp/filter.h ****     } else if (mode_2 == FILTER_MODE_BAND_PASS) {
 271:eurorack/stmlib/dsp/filter.h ****       *out_2 = bp;
 272:eurorack/stmlib/dsp/filter.h ****     } else if (mode_2 == FILTER_MODE_BAND_PASS_NORMALIZED) {
 273:eurorack/stmlib/dsp/filter.h ****       *out_2 = bp * r_;
 274:eurorack/stmlib/dsp/filter.h ****     } else if (mode_2 == FILTER_MODE_HIGH_PASS) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 45


 275:eurorack/stmlib/dsp/filter.h ****       *out_2 = hp;
 276:eurorack/stmlib/dsp/filter.h ****     }
 277:eurorack/stmlib/dsp/filter.h ****   }
 278:eurorack/stmlib/dsp/filter.h ****   
 279:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 280:eurorack/stmlib/dsp/filter.h ****   inline void Process(const float* in, float* out, size_t size) {
 281:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
 282:eurorack/stmlib/dsp/filter.h ****     float state_1 = state_1_;
 283:eurorack/stmlib/dsp/filter.h ****     float state_2 = state_2_;
 284:eurorack/stmlib/dsp/filter.h ****     
 285:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 286:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 287:eurorack/stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 288:eurorack/stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 289:eurorack/stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 290:eurorack/stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 291:eurorack/stmlib/dsp/filter.h ****     
 292:eurorack/stmlib/dsp/filter.h ****       float value;
 293:eurorack/stmlib/dsp/filter.h ****       if (mode == FILTER_MODE_LOW_PASS) {
 294:eurorack/stmlib/dsp/filter.h ****         value = lp;
 295:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS) {
 296:eurorack/stmlib/dsp/filter.h ****         value = bp;
 297:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 298:eurorack/stmlib/dsp/filter.h ****         value = bp * r_;
 299:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_HIGH_PASS) {
 300:eurorack/stmlib/dsp/filter.h ****         value = hp;
 301:eurorack/stmlib/dsp/filter.h ****       }
 302:eurorack/stmlib/dsp/filter.h ****       
 303:eurorack/stmlib/dsp/filter.h ****       *out = value;
 304:eurorack/stmlib/dsp/filter.h ****       ++out;
 305:eurorack/stmlib/dsp/filter.h ****       ++in;
 306:eurorack/stmlib/dsp/filter.h ****     }
 307:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_1;
 308:eurorack/stmlib/dsp/filter.h ****     state_2_ = state_2;
 309:eurorack/stmlib/dsp/filter.h ****   }
 310:eurorack/stmlib/dsp/filter.h ****   
 311:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 312:eurorack/stmlib/dsp/filter.h ****   inline void ProcessAdd(const float* in, float* out, size_t size, float gain) {
 313:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
 314:eurorack/stmlib/dsp/filter.h ****     float state_1 = state_1_;
 315:eurorack/stmlib/dsp/filter.h ****     float state_2 = state_2_;
 316:eurorack/stmlib/dsp/filter.h ****     
 317:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 318:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 319:eurorack/stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 320:eurorack/stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 321:eurorack/stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 322:eurorack/stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 323:eurorack/stmlib/dsp/filter.h ****     
 324:eurorack/stmlib/dsp/filter.h ****       float value;
 325:eurorack/stmlib/dsp/filter.h ****       if (mode == FILTER_MODE_LOW_PASS) {
 326:eurorack/stmlib/dsp/filter.h ****         value = lp;
 327:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS) {
 328:eurorack/stmlib/dsp/filter.h ****         value = bp;
 329:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 330:eurorack/stmlib/dsp/filter.h ****         value = bp * r_;
 331:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_HIGH_PASS) {
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 46


 332:eurorack/stmlib/dsp/filter.h ****         value = hp;
 333:eurorack/stmlib/dsp/filter.h ****       }
 334:eurorack/stmlib/dsp/filter.h ****       
 335:eurorack/stmlib/dsp/filter.h ****       *out += gain * value;
 336:eurorack/stmlib/dsp/filter.h ****       ++out;
 337:eurorack/stmlib/dsp/filter.h ****       ++in;
 338:eurorack/stmlib/dsp/filter.h ****     }
 339:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_1;
 340:eurorack/stmlib/dsp/filter.h ****     state_2_ = state_2;
 341:eurorack/stmlib/dsp/filter.h ****   }
 342:eurorack/stmlib/dsp/filter.h ****   
 343:eurorack/stmlib/dsp/filter.h ****   template<FilterMode mode>
 344:eurorack/stmlib/dsp/filter.h ****   inline void Process(const float* in, float* out, size_t size, size_t stride) {
 345:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
 346:eurorack/stmlib/dsp/filter.h ****     float state_1 = state_1_;
 347:eurorack/stmlib/dsp/filter.h ****     float state_2 = state_2_;
 348:eurorack/stmlib/dsp/filter.h ****     
 349:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 350:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 351:eurorack/stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 352:eurorack/stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 353:eurorack/stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 354:eurorack/stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 355:eurorack/stmlib/dsp/filter.h ****     
 356:eurorack/stmlib/dsp/filter.h ****       float value;
 357:eurorack/stmlib/dsp/filter.h ****       if (mode == FILTER_MODE_LOW_PASS) {
 358:eurorack/stmlib/dsp/filter.h ****         value = lp;
 359:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS) {
 360:eurorack/stmlib/dsp/filter.h ****         value = bp;
 361:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_BAND_PASS_NORMALIZED) {
 362:eurorack/stmlib/dsp/filter.h ****         value = bp * r_;
 363:eurorack/stmlib/dsp/filter.h ****       } else if (mode == FILTER_MODE_HIGH_PASS) {
 364:eurorack/stmlib/dsp/filter.h ****         value = hp;
 365:eurorack/stmlib/dsp/filter.h ****       }
 366:eurorack/stmlib/dsp/filter.h ****       
 367:eurorack/stmlib/dsp/filter.h ****       *out = value;
 368:eurorack/stmlib/dsp/filter.h ****       out += stride;
 369:eurorack/stmlib/dsp/filter.h ****       in += stride;
 370:eurorack/stmlib/dsp/filter.h ****     }
 371:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_1;
 372:eurorack/stmlib/dsp/filter.h ****     state_2_ = state_2;
 373:eurorack/stmlib/dsp/filter.h ****   }
 374:eurorack/stmlib/dsp/filter.h ****   
 375:eurorack/stmlib/dsp/filter.h ****   inline void ProcessMultimode(
 376:eurorack/stmlib/dsp/filter.h ****       const float* in,
 377:eurorack/stmlib/dsp/filter.h ****       float* out,
 378:eurorack/stmlib/dsp/filter.h ****       size_t size,
 379:eurorack/stmlib/dsp/filter.h ****       float mode) {
 380:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
 381:eurorack/stmlib/dsp/filter.h ****     float state_1 = state_1_;
 382:eurorack/stmlib/dsp/filter.h ****     float state_2 = state_2_;
 383:eurorack/stmlib/dsp/filter.h ****     float hp_gain = mode < 0.5f ? -mode * 2.0f : -2.0f + mode * 2.0f;
 384:eurorack/stmlib/dsp/filter.h ****     float lp_gain = mode < 0.5f ? 1.0f - mode * 2.0f : 0.0f;
 385:eurorack/stmlib/dsp/filter.h ****     float bp_gain = mode < 0.5f ? 0.0f : mode * 2.0f - 1.0f;
 386:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 387:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 388:eurorack/stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 47


 389:eurorack/stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 390:eurorack/stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 391:eurorack/stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 392:eurorack/stmlib/dsp/filter.h ****       *out = hp_gain * hp + bp_gain * bp + lp_gain * lp;
 393:eurorack/stmlib/dsp/filter.h ****       ++in;
 394:eurorack/stmlib/dsp/filter.h ****       ++out;
 395:eurorack/stmlib/dsp/filter.h ****     }
 396:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_1;
 397:eurorack/stmlib/dsp/filter.h ****     state_2_ = state_2;
 398:eurorack/stmlib/dsp/filter.h ****   }
 399:eurorack/stmlib/dsp/filter.h ****   
 400:eurorack/stmlib/dsp/filter.h ****   inline void ProcessMultimodeLPtoHP(
 401:eurorack/stmlib/dsp/filter.h ****       const float* in,
 402:eurorack/stmlib/dsp/filter.h ****       float* out,
 403:eurorack/stmlib/dsp/filter.h ****       size_t size,
 404:eurorack/stmlib/dsp/filter.h ****       float mode) {
 405:eurorack/stmlib/dsp/filter.h ****     float hp, bp, lp;
 406:eurorack/stmlib/dsp/filter.h ****     float state_1 = state_1_;
 407:eurorack/stmlib/dsp/filter.h ****     float state_2 = state_2_;
 408:eurorack/stmlib/dsp/filter.h ****     float hp_gain = std::min(-mode * 2.0f + 1.0f, 0.0f);
 1396              		.loc 2 408 43 view .LVU400
 1397 0164 B0EE685A 		vmov.f32	s10, s17
 1398              	.LBE302:
 1399              	.LBE301:
  94:eurorack/plaits/dsp/engine/noise_engine.cc ****     float input_2 = *in_2++ * gain;
 1400              		.loc 1 94 31 view .LVU401
 1401 0168 FAEC017A 		vldmia.32	r10!, {s15}
 1402              	.LVL103:
 1403              	.LBB315:
 1404              	.LBB312:
 409:eurorack/stmlib/dsp/filter.h ****     float bp_gain = 1.0f - 2.0f * fabsf(mode - 0.5f);
 1405              		.loc 2 409 11 view .LVU402
 1406 016c F0EE686A 		vmov.f32	s13, s17
 1407              		.loc 2 409 46 view .LVU403
 1408 0170 7BEEEC5A 		vsub.f32	s11, s23, s25
 406:eurorack/stmlib/dsp/filter.h ****     float state_2 = state_2_;
 1409              		.loc 2 406 11 view .LVU404
 1410 0174 94ED0F7A 		vldr.32	s14, [r4, #60]
 408:eurorack/stmlib/dsp/filter.h ****     float bp_gain = 1.0f - 2.0f * fabsf(mode - 0.5f);
 1411              		.loc 2 408 30 view .LVU405
 1412 0178 F1EE6B4A 		vneg.f32	s9, s23
 407:eurorack/stmlib/dsp/filter.h ****     float hp_gain = std::min(-mode * 2.0f + 1.0f, 0.0f);
 1413              		.loc 2 407 11 view .LVU406
 1414 017c 94ED106A 		vldr.32	s12, [r4, #64]
 1415              	.LBE312:
 1416              	.LBE315:
  95:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.ProcessMultimodeLPtoHP(
  96:eurorack/plaits/dsp/engine/noise_engine.cc ****         &input_1, out++, 1, mode_modulation.Next());
  97:eurorack/plaits/dsp/engine/noise_engine.cc ****     *aux++ = bp_filter_[0].Process<FILTER_MODE_BAND_PASS>(input_1) + \
 1417              		.loc 1 97 58 view .LVU407
 1418 0180 4846     		mov	r0, r9
 1419              	.LBB316:
 1420              	.LBB313:
 1421              		.loc 2 409 40 view .LVU408
 1422 0182 F0EEE55A 		vabs.f32	s11, s11
 1423              	.LBE313:
 1424              	.LBE316:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 48


  93:eurorack/plaits/dsp/engine/noise_engine.cc ****     float input_2 = *in_2++ * gain;
 1425              		.loc 1 93 29 view .LVU409
 1426 0186 2DEE000A 		vmul.f32	s0, s26, s0
 1427              	.LVL104:
  94:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.ProcessMultimodeLPtoHP(
 1428              		.loc 1 94 5 is_stmt 1 view .LVU410
  94:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.ProcessMultimodeLPtoHP(
 1429              		.loc 1 94 31 is_stmt 0 view .LVU411
 1430 018a 2DEE27DA 		vmul.f32	s26, s26, s15
 1431              	.LVL105:
  95:eurorack/plaits/dsp/engine/noise_engine.cc ****     lp_hp_filter_.ProcessMultimodeLPtoHP(
 1432              		.loc 1 95 5 is_stmt 1 view .LVU412
 1433              	.LBB317:
 1434              	.LBI298:
  59:eurorack/stmlib/dsp/parameter_interpolator.h ****     value_ += increment_;
 1435              		.loc 7 59 16 view .LVU413
 1436              	.LBB300:
  60:eurorack/stmlib/dsp/parameter_interpolator.h ****     return value_;
 1437              		.loc 7 60 5 view .LVU414
 1438              		.loc 7 61 5 view .LVU415
 1439              		.loc 7 61 5 is_stmt 0 view .LVU416
 1440              	.LBE300:
 1441              	.LBE317:
 1442              	.LBB318:
 1443              	.LBI301:
 400:eurorack/stmlib/dsp/filter.h ****       const float* in,
 1444              		.loc 2 400 15 is_stmt 1 view .LVU417
 1445              	.LBB314:
 405:eurorack/stmlib/dsp/filter.h ****     float state_1 = state_1_;
 1446              		.loc 2 405 5 view .LVU418
 406:eurorack/stmlib/dsp/filter.h ****     float state_2 = state_2_;
 1447              		.loc 2 406 5 view .LVU419
 407:eurorack/stmlib/dsp/filter.h ****     float hp_gain = std::min(-mode * 2.0f + 1.0f, 0.0f);
 1448              		.loc 2 407 5 view .LVU420
 408:eurorack/stmlib/dsp/filter.h ****     float bp_gain = 1.0f - 2.0f * fabsf(mode - 0.5f);
 1449              		.loc 2 408 5 view .LVU421
 408:eurorack/stmlib/dsp/filter.h ****     float bp_gain = 1.0f - 2.0f * fabsf(mode - 0.5f);
 1450              		.loc 2 408 43 is_stmt 0 view .LVU422
 1451 018e F0EE007A 		vmov.f32	s15, #2.0e+0
 1452 0192 ABEEE75A 		vfms.f32	s10, s23, s15
 1453              	.LVL106:
 1454              	.LBB303:
 1455              	.LBI303:
 1456              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 49


  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 50


  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 51


 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 52


 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 1457              		.loc 11 230 5 is_stmt 1 view .LVU423
 1458              	.LBE303:
 410:eurorack/stmlib/dsp/filter.h ****     float lp_gain = std::max(1.0f - mode * 2.0f, 0.0f);
 1459              		.loc 2 410 35 is_stmt 0 view .LVU424
 1460 0196 E4EEA78A 		vfma.f32	s17, s9, s15
 411:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 412:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 1461              		.loc 2 412 10 view .LVU425
 1462 019a D4ED0E4A 		vldr.32	s9, [r4, #56]
 409:eurorack/stmlib/dsp/filter.h ****     float lp_gain = std::max(1.0f - mode * 2.0f, 0.0f);
 1463              		.loc 2 409 11 view .LVU426
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 53


 1464 019e E5EEE76A 		vfms.f32	s13, s11, s15
 1465              		.loc 2 412 17 view .LVU427
 1466 01a2 D4ED0D5A 		vldr.32	s11, [r4, #52]
 1467 01a6 F0EE407A 		vmov.f32	s15, s0
 1468 01aa E7EE657A 		vfms.f32	s15, s14, s11
 1469              		.loc 2 412 34 view .LVU428
 1470 01ae D4ED0C5A 		vldr.32	s11, [r4, #48]
 1471              	.LBB306:
 1472              	.LBB304:
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__b < __a)
 1473              		.loc 11 235 7 view .LVU429
 1474 01b2 B5EEC05A 		vcmpe.f32	s10, #0
 1475 01b6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 1476              	.LBE304:
 1477              	.LBE306:
 1478              	.LBB307:
 1479              	.LBB308:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __a;
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (__a < __b)
 1480              		.loc 11 259 7 view .LVU430
 1481 01ba F5EEC08A 		vcmpe.f32	s17, #0
 1482              	.LBE308:
 1483              	.LBE307:
 1484              		.loc 2 412 32 view .LVU431
 1485 01be E7EE657A 		vfms.f32	s15, s14, s11
 1486              	.LBB310:
 1487              	.LBB305:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1488              		.loc 11 236 9 view .LVU432
 1489 01c2 C8BF     		it	gt
 1490 01c4 9FED1F5A 		vldrgt.32	s10, .L57+4
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 54


 1491              	.LVL107:
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1492              		.loc 11 236 9 view .LVU433
 1493              	.LBE305:
 1494              	.LBE310:
 409:eurorack/stmlib/dsp/filter.h ****     float lp_gain = std::max(1.0f - mode * 2.0f, 0.0f);
 1495              		.loc 2 409 5 is_stmt 1 view .LVU434
 410:eurorack/stmlib/dsp/filter.h ****     while (size--) {
 1496              		.loc 2 410 5 view .LVU435
 1497              	.LBB311:
 1498              	.LBI307:
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 1499              		.loc 11 254 5 view .LVU436
 1500              	.LBB309:
 1501              		.loc 11 259 7 is_stmt 0 view .LVU437
 1502 01c8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __b;
 1503              		.loc 11 260 9 view .LVU438
 1504 01cc 48BF     		it	mi
 1505 01ce DFED1D8A 		vldrmi.32	s17, .L57+4
 1506              	.LVL108:
 1507              		.loc 11 260 9 view .LVU439
 1508              	.LBE309:
 1509              	.LBE311:
 411:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 1510              		.loc 2 411 5 is_stmt 1 view .LVU440
 411:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 1511              		.loc 2 411 16 view .LVU441
 1512              		.loc 2 412 7 view .LVU442
 1513              		.loc 2 412 47 is_stmt 0 view .LVU443
 1514 01d2 77EEC67A 		vsub.f32	s15, s15, s12
 1515              		.loc 2 412 10 view .LVU444
 1516 01d6 67EEA47A 		vmul.f32	s15, s15, s9
 1517              	.LVL109:
 413:eurorack/stmlib/dsp/filter.h ****       bp = g_ * hp + state_1;
 1518              		.loc 2 413 7 is_stmt 1 view .LVU445
 1519              		.loc 2 413 10 is_stmt 0 view .LVU446
 1520 01da A5EEA77A 		vfma.f32	s14, s11, s15
 1521              	.LVL110:
 414:eurorack/stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 1522              		.loc 2 414 7 is_stmt 1 view .LVU447
 415:eurorack/stmlib/dsp/filter.h ****       lp = g_ * bp + state_2;
 1523              		.loc 2 415 10 is_stmt 0 view .LVU448
 1524 01de A5EE876A 		vfma.f32	s12, s11, s14
 1525              	.LVL111:
 414:eurorack/stmlib/dsp/filter.h ****       state_1 = g_ * hp + bp;
 1526              		.loc 2 414 15 view .LVU449
 1527 01e2 B0EE474A 		vmov.f32	s8, s14
 1528 01e6 A5EEA74A 		vfma.f32	s8, s11, s15
 1529              	.LVL112:
 1530              		.loc 2 415 7 is_stmt 1 view .LVU450
 416:eurorack/stmlib/dsp/filter.h ****       state_2 = g_ * bp + lp;
 1531              		.loc 2 416 7 view .LVU451
 1532              		.loc 2 416 15 is_stmt 0 view .LVU452
 1533 01ea F0EE464A 		vmov.f32	s9, s12
 1534 01ee E5EE874A 		vfma.f32	s9, s11, s14
 1535              	.LVL113:
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 55


 417:eurorack/stmlib/dsp/filter.h ****       *out = hp_gain * hp + bp_gain * bp + lp_gain * lp;
 1536              		.loc 2 417 7 is_stmt 1 view .LVU453
 1537              		.loc 2 417 37 is_stmt 0 view .LVU454
 1538 01f2 26EE877A 		vmul.f32	s14, s13, s14
 1539              	.LVL114:
 1540              		.loc 2 417 27 view .LVU455
 1541 01f6 A5EE277A 		vfma.f32	s14, s10, s15
 1542              		.loc 2 417 42 view .LVU456
 1543 01fa A8EE867A 		vfma.f32	s14, s17, s12
 1544              		.loc 2 417 12 view .LVU457
 1545 01fe A8EC017A 		vstmia.32	r8!, {s14}
 1546              	.LVL115:
 418:eurorack/stmlib/dsp/filter.h ****       ++in;
 1547              		.loc 2 418 7 is_stmt 1 view .LVU458
 419:eurorack/stmlib/dsp/filter.h ****       ++out;
 1548              		.loc 2 419 7 view .LVU459
 411:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 1549              		.loc 2 411 5 view .LVU460
 411:eurorack/stmlib/dsp/filter.h ****       hp = (*in - r_ * state_1 - g_ * state_1 - state_2) * h_;
 1550              		.loc 2 411 16 view .LVU461
 420:eurorack/stmlib/dsp/filter.h ****     }
 421:eurorack/stmlib/dsp/filter.h ****     state_1_ = state_1;
 1551              		.loc 2 421 5 view .LVU462
 1552              		.loc 2 421 14 is_stmt 0 view .LVU463
 1553 0202 84ED0F4A 		vstr.32	s8, [r4, #60]
 422:eurorack/stmlib/dsp/filter.h ****     state_2_ = state_2;
 1554              		.loc 2 422 5 is_stmt 1 view .LVU464
 1555              		.loc 2 422 14 is_stmt 0 view .LVU465
 1556 0206 C4ED104A 		vstr.32	s9, [r4, #64]
 1557              	.LVL116:
 1558              		.loc 2 422 14 view .LVU466
 1559              	.LBE314:
 1560              	.LBE318:
 1561              		.loc 1 97 5 is_stmt 1 view .LVU467
 1562              		.loc 1 97 58 is_stmt 0 view .LVU468
 1563 020a FFF7FEFF 		bl	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff
 1564              	.LVL117:
 1565              		.loc 1 97 58 view .LVU469
 1566 020e F0EE408A 		vmov.f32	s17, s0
  98:eurorack/plaits/dsp/engine/noise_engine.cc ****         bp_filter_[1].Process<FILTER_MODE_BAND_PASS>(input_2);
 1567              		.loc 1 98 53 view .LVU470
 1568 0212 3046     		mov	r0, r6
 1569 0214 B0EE4D0A 		vmov.f32	s0, s26
 1570 0218 FFF7FEFF 		bl	_ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff
 1571              	.LVL118:
  97:eurorack/plaits/dsp/engine/noise_engine.cc ****         bp_filter_[1].Process<FILTER_MODE_BAND_PASS>(input_2);
 1572              		.loc 1 97 68 view .LVU471
 1573 021c 38EE800A 		vadd.f32	s0, s17, s0
  97:eurorack/plaits/dsp/engine/noise_engine.cc ****         bp_filter_[1].Process<FILTER_MODE_BAND_PASS>(input_2);
 1574              		.loc 1 97 12 view .LVU472
 1575 0220 A5EC010A 		vstmia.32	r5!, {s0}
  97:eurorack/plaits/dsp/engine/noise_engine.cc ****         bp_filter_[1].Process<FILTER_MODE_BAND_PASS>(input_2);
 1576              		.loc 1 97 12 view .LVU473
 1577              	.LBE281:
  84:eurorack/plaits/dsp/engine/noise_engine.cc ****     const float f0 = f0_modulation.Next();
 1578              		.loc 1 84 3 view .LVU474
 1579 0224 68E7     		b	.L53
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 56


 1580              	.LVL119:
 1581              	.L50:
 1582              	.LBB319:
 1583              	.LBI319:
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1584              		.loc 7 49 3 is_stmt 1 view .LVU475
 1585              	.LBB320:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1586              		.loc 7 50 5 view .LVU476
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1587              		.loc 7 50 13 is_stmt 0 view .LVU477
 1588 0226 C4ED1EBA 		vstr.32	s23, [r4, #120]
 1589              	.LVL120:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1590              		.loc 7 50 13 view .LVU478
 1591              	.LBE320:
 1592              	.LBE319:
 1593              	.LBB321:
 1594              	.LBI321:
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1595              		.loc 7 49 3 is_stmt 1 view .LVU479
 1596              	.LBB322:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1597              		.loc 7 50 5 view .LVU480
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1598              		.loc 7 50 13 is_stmt 0 view .LVU481
 1599 022a 84ED1D8A 		vstr.32	s16, [r4, #116]
 1600              	.LVL121:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1601              		.loc 7 50 13 view .LVU482
 1602              	.LBE322:
 1603              	.LBE321:
 1604              	.LBB323:
 1605              	.LBI323:
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1606              		.loc 7 49 3 is_stmt 1 view .LVU483
 1607              	.LBB324:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1608              		.loc 7 50 5 view .LVU484
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1609              		.loc 7 50 13 is_stmt 0 view .LVU485
 1610 022e 84ED1CCA 		vstr.32	s24, [r4, #112]
 1611              	.LVL122:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1612              		.loc 7 50 13 view .LVU486
 1613              	.LBE324:
 1614              	.LBE323:
 1615              	.LBB325:
 1616              	.LBI325:
  49:eurorack/stmlib/dsp/parameter_interpolator.h ****     *state_ = value_;
 1617              		.loc 7 49 3 is_stmt 1 view .LVU487
 1618              	.LBB326:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1619              		.loc 7 50 5 view .LVU488
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1620              		.loc 7 50 13 is_stmt 0 view .LVU489
 1621 0232 84ED1BBA 		vstr.32	s22, [r4, #108]
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 57


 1622              	.LVL123:
  50:eurorack/stmlib/dsp/parameter_interpolator.h ****   }
 1623              		.loc 7 50 13 view .LVU490
 1624              	.LBE326:
 1625              	.LBE325:
  99:eurorack/plaits/dsp/engine/noise_engine.cc ****   }
 100:eurorack/plaits/dsp/engine/noise_engine.cc **** }
 1626              		.loc 1 100 1 view .LVU491
 1627 0236 02B0     		add	sp, sp, #8
 1628              		.cfi_def_cfa_offset 80
 1629              		@ sp needed
 1630 0238 BDEC0C8B 		vldm	sp!, {d8-d13}
 1631              		.cfi_restore 90
 1632              		.cfi_restore 91
 1633              		.cfi_restore 88
 1634              		.cfi_restore 89
 1635              		.cfi_restore 86
 1636              		.cfi_restore 87
 1637              		.cfi_restore 84
 1638              		.cfi_restore 85
 1639              		.cfi_restore 82
 1640              		.cfi_restore 83
 1641              		.cfi_restore 80
 1642              		.cfi_restore 81
 1643              		.cfi_def_cfa_offset 32
 1644              	.LVL124:
 1645              		.loc 1 100 1 view .LVU492
 1646 023c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1647              	.LVL125:
 1648              	.L58:
 1649              		.loc 1 100 1 view .LVU493
 1650              		.align	2
 1651              	.L57:
 1652 0240 00004042 		.word	1111490560
 1653 0244 00000000 		.word	0
 1654 0248 00000043 		.word	1124073472
 1655 024c 0000F042 		.word	1123024896
 1656 0250 00002042 		.word	1109393408
 1657              		.cfi_endproc
 1658              	.LFE1563:
 1660              		.global	_ZTVN6plaits11NoiseEngineE
 1661              		.section	.rodata._ZTVN6plaits11NoiseEngineE,"a"
 1662              		.align	2
 1665              	_ZTVN6plaits11NoiseEngineE:
 1666 0000 00000000 		.word	0
 1667 0004 00000000 		.word	0
 1668 0008 00000000 		.word	_ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE
 1669 000c 00000000 		.word	_ZN6plaits11NoiseEngine5ResetEv
 1670 0010 00000000 		.word	_ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb
 1671              		.text
 1672              	.Letext0:
 1673              		.file 12 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 1674              		.file 13 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 1675              		.file 14 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 1676              		.file 15 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 1677              		.file 16 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 1678              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 58


 1679              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 1680              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 1681              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 1682              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/algorithmfwd.h"
 1683              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 1684              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 1685              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 1686              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 1687              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 1688              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 1689              		.file 28 "eurorack/stmlib/stmlib.h"
 1690              		.file 29 "eurorack/plaits/dsp/dsp.h"
 1691              		.file 30 "eurorack/plaits/dsp/engine/noise_engine.h"
 1692              		.file 31 "<built-in>"
ARM GAS  /var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 noise_engine.cc
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:19     .text._ZN6plaits11NoiseEngine5ResetEv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:25     .text._ZN6plaits11NoiseEngine5ResetEv:0000000000000000 _ZN6plaits11NoiseEngine5ResetEv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:40     .text._ZN6stmlib3Svf4InitEv:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:46     .text._ZN6stmlib3Svf4InitEv:0000000000000000 _ZN6stmlib3Svf4InitEv
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:93     .text._ZN6stmlib3Svf4InitEv:0000000000000014 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:100    .text._ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:106    .text._ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE:0000000000000000 _ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:275    .text._ZN6plaits11NoiseEngine4InitEPN6stmlib15BufferAllocatorE:0000000000000064 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:280    .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:286    .text._ZN6stmlib16SemitonesToRatioEf:0000000000000000 _ZN6stmlib16SemitonesToRatioEf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:334    .text._ZN6stmlib16SemitonesToRatioEf:000000000000003c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:341    .text._ZN6plaits15NoteToFrequencyEf:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:347    .text._ZN6plaits15NoteToFrequencyEf:0000000000000000 _ZN6plaits15NoteToFrequencyEf
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:397    .text._ZN6plaits15NoteToFrequencyEf:000000000000003c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:404    .text._ZN6plaits12ClockedNoise6RenderEbfPfj:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:410    .text._ZN6plaits12ClockedNoise6RenderEbfPfj:0000000000000000 _ZN6plaits12ClockedNoise6RenderEbfPfj
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:771    .text._ZN6plaits12ClockedNoise6RenderEbfPfj:000000000000012c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:780    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:786    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:0000000000000000 _ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:845    .text._ZN6stmlib3Svf7set_f_qILNS_22FrequencyApproximationE1EEEvff:000000000000005c $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:855    .text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:861    .text._ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff:0000000000000000 _ZN6stmlib3Svf7ProcessILNS_10FilterModeE1EEEff
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:912    .text._ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb:0000000000000000 $t
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:918    .text._ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb:0000000000000000 _ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:1652   .text._ZN6plaits11NoiseEngine6RenderERKNS_16EngineParametersEPfS4_jPb:0000000000000240 $d
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:1665   .rodata._ZTVN6plaits11NoiseEngineE:0000000000000000 _ZTVN6plaits11NoiseEngineE
/var/folders/9s/8rp0_f2s1n31qbztm3b5_fdh0000gn/T//ccNqdwXZ.s:1662   .rodata._ZTVN6plaits11NoiseEngineE:0000000000000000 $d

UNDEFINED SYMBOLS
_ZN6stmlib19lut_pitch_ratio_lowE
_ZN6stmlib20lut_pitch_ratio_highE
_ZN6stmlib6Random10rng_state_E
